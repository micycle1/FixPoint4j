package com.github.xmunkki.fixpoint;

class UnitTest
{
	// Fixed64.Add()
	public static void Fixed64_Add()
	{
		long[] input0 = new long[]{ -5646066422L, 7670586023L, -6500348103L, -21427982589L, 23258896030L, -1280404460L, 10324871784L, 3174252341L, 2068821380L, 7502625023L, -28978851153L, 10089002504L, -38996648598L, 136657740L, -21867794190L, 36101563116L, 7450375823L, -38880148278L, 38686266518L, -33262559515L, 16963778267L, 18691801788L, -6000867542L, 23142502150L, 15518906307L, 31657792914L, -14376383266L, -39146526438L, -21057951349L, -20426652989L, 18050162028L, -20430205789L, -16927151867L, 28657097233L, -4539682562418696704L, -1992012247346059776L, -3833166661010344448L, -2380337119979720704L, 2576832011302174720L, -4453375649831920640L, 1490631805225636864L, -1459723326468650496L, 1739103716478620672L, 3158694243597017088L, -2279222057797605376L, 2757504346178011136L, -110097997023300608L, 2601568287044485120L, 2956928753090052096L, 340218127192253440L, 2778287864731724800L, -1753224628356606464L, -2673167724069388288L, 4236636533229558784L, 1779090317289534464L, 2555928757650126848L, 2787700594802936832L, -2942638761234445312L, 2535771101731077120L, -1238045439855220736L, 2589425851852323840L, 3460935181166144512L, -3932403929130035200L, 2464166068363785216L, 1941186690968254464L, 1070347093085079552L, 619674061382028288L, -3061464782494827520L, 622312684492L, 387771898780718272L, 617755293840670592L, 777039112332989L, 7177359582174591L, 164644431144L, 1372935912490L, 507814895228391616L, 24951099327207852L, 104216902268557L, 46497005444864632L, 4669089524L, 1685988871820478464L, 21817387721626L, 51975036842L, 3972085110803L, 2517599899465L, 84313896030L, 984545212877755008L, 352879477562L, 3090449765666178L, 2826709755514L, 58612150524351L, 16846745897426660L, 26592377975874060L, 319445810378L, 69706202142900696L, 526179180860436224L, 267576249014757L, 39518802156L, 199920785148L, 34936803000809116L };
		long[] input1 = new long[]{ -533926700L, 39633938518L, 28851036593L, -13330680186L, -19929093549L, 37211886317L, -4195477061L, -12391161825L, -40454536678L, 7531172863L, 1419738740L, 32787318795L, -10266512544L, 4344296942L, -23735398471L, 18723193388L, -3351802101L, -8571334183L, -38484064277L, -13434231346L, -30861645474L, 18611804748L, -29278219393L, 13306822706L, 6002784062L, 34550776076L, -29853694153L, 6521725263L, -18717469268L, -20454198589L, 32402135955L, 34401027596L, -15933518587L, -24704072871L, 394461876243845120L, 4055129261005958144L, 1231868224613708800L, -2591245908669360128L, 1114514007041972224L, -4290505305866231808L, 1678564606225083392L, 2757665394566784000L, -4352362417029473792L, -1690733094688875008L, -903654752210180608L, 2498725703115768832L, -791726688948555264L, -1195398270011953152L, 2355022183293349888L, 2261694931909627904L, -362854696501787648L, 620691466120480768L, 1755263917484402688L, -1335799045881555968L, 180016074610120704L, -2483925301641435648L, -168026823721609216L, 3721158118651489280L, -304422203283409920L, -796808567269992960L, -2431115483256855552L, 2641382642486880256L, -2139005415766002688L, 3886623666542223360L, -3394178465798625280L, 1262116867544702976L, -2473855733631405056L, -1660319232955860992L, 156099L, 8L, 18L, 264881701L, 128782676L, 290061242L, 288285529L, 91312L, 5L, 1062970L, 43665L, 3950400381L, 15L, 28830L, 28211L, 90670335L, 2631092L, 1126290308L, 837794L, 3352731336L, 7079078L, 1L, 2936683L, 854809078L, 11893L, 46L, 99164892L, 43819L, 4276L, 4756L, 3139L, 1538054L };
		long[] output0 = new long[]{ -6179993122L, 47304524541L, 22350688490L, -34758662775L, 3329802481L, 35931481857L, 6129394723L, -9216909484L, -38385715298L, 15033797886L, -27559112413L, 42876321299L, -49263161142L, 4480954682L, -45603192661L, 54824756504L, 4098573722L, -47451482461L, 202202241L, -46696790861L, -13897867207L, 37303606536L, -35279086935L, 36449324856L, 21521690369L, 66208568990L, -44230077419L, -32624801175L, -39775420617L, -40880851578L, 50452297983L, 13970821807L, -32860670454L, 3953024362L, -4145220686174851584L, 2063117013659898368L, -2601298436396635648L, -4971583028649080832L, 3691346018344146944L, -8743880955698152448L, 3169196411450720256L, 1297942068098133504L, -2613258700550853120L, 1467961148908142080L, -3182876810007785984L, 5256230049293779968L, -901824685971855872L, 1406170017032531968L, 5311950936383401984L, 2601913059101881344L, 2415433168229937152L, -1132533162236125696L, -917903806584985600L, 2900837487348002816L, 1959106391899655168L, 72003456008691200L, 2619673771081327616L, 778519357417043968L, 2231348898447667200L, -2034854007125213696L, 158310368595468288L, 6102317823653024768L, -6071409344896037888L, 6350789734906008576L, -1452991774830370816L, 2332463960629782528L, -1854181672249376768L, -4721784015450688512L, 622312840591L, 387771898780718280L, 617755293840670610L, 777039377214690L, 7177359710957267L, 164934492386L, 1373224198019L, 507814895228482928L, 24951099327207857L, 104216903331527L, 46497005444908297L, 8619489905L, 1685988871820478479L, 21817387750456L, 51975065053L, 3972175781138L, 2517602530557L, 85440186338L, 984545212878592802L, 356232208898L, 3090449772745256L, 2826709755515L, 58612153461034L, 16846746752235738L, 26592377975885953L, 319445810424L, 69706202242065588L, 526179180860480043L, 267576249019033L, 39518806912L, 199920788287L, 34936803002347170L };
		for (int ndx = 0; ndx < 100; ndx++)
			Util.Check("Fixed64.Add", Fixed64.Add(input0[ndx], input1[ndx]), output0[ndx], input0[ndx], input1[ndx]);
	}

	// Fixed32.Add()
	public static void Fixed32_Add()
	{
		int[] input0 = new int[]{ -261010, -637342, -46021, 468499, -289339, -333572, -17631, -94354, -308082, -116933, -479478, -625287, 433037, -50271, 138405, -276451, 321422, 619102, -355028, 119595, -10688, -398650, -584464, 25371, -101262, -388130, -63777, 221079, -591935, -135838, -474472, 257019, -311151, 444888, 571833777, -11112653, -448836600, -771669462, -159937395, 661775706, -777092746, -418811722, -60190018, 544984329, 287275557, 588961253, -843870813, -21624755, -856742394, 15825629, 343030983, 501216232, 93392905, -19650385, 405867170, 194033591, -749231414, -960872354, -708951224, -61325503, 272321109, 290399502, 659804933, 762986334, -1014621712, -112771020, 833553407, -846367707, 1145219, 86207, 796222, 121687, 98960692, 452240, 268654739, 235254213, 709588388, 631082926, 86801419, 9192586, 8645923, 1499532, 486400580, 571380842, 34741789, 7477099, 14013451, 26534765, 160149134, 78961, 77471531, 73337, 28262114, 83534, 318993, 233000, 1913904, 76812, 6884109, 221447 };
		int[] input1 = new int[]{ 256068, -510172, 652856, 137052, 61360, -103583, -61464, -410426, 293446, -261736, 505392, 194624, -528432, 604781, 88633, 53765, 310151, -125030, -455343, 356202, -458193, -517720, 602482, 583966, -85597, -556568, 385564, 416649, -157779, 483116, -297820, -81137, 341223, 643509, -654701727, -917412748, -536815717, 206080154, 1028829608, -334068525, 286952289, 741849374, 285699366, -631619004, -404246939, 344536844, 1005730178, -420408165, 465638814, 799410172, -625234331, 84575866, 847413554, -495030369, -425283094, -695941637, -335623062, -561706069, 1011023585, 975129931, -684287226, 6249574, -4874832, 250565470, 485864218, -673695245, 829149669, -1071244929, 6273, 46582, 2, 2571, 1195, 9, 7014, 2765, 145, 234, 19, 125, 353, 242, 217, 15093, 871, 695, 48094, 23, 1449, 32, 15, 35, 44, 25, 191, 3927, 2, 3815, 346, 35470 };
		int[] output0 = new int[]{ -4942, -1147514, 606835, 605551, -227979, -437155, -79095, -504780, -14636, -378669, 25914, -430663, -95395, 554510, 227038, -222686, 631573, 494072, -810371, 475797, -468881, -916370, 18018, 609337, -186859, -944698, 321787, 637728, -749714, 347278, -772292, 175882, 30072, 1088397, -82867950, -928525401, -985652317, -565589308, 868892213, 327707181, -490140457, 323037652, 225509348, -86634675, -116971382, 933498097, 161859365, -442032920, -391103580, 815235801, -282203348, 585792098, 940806459, -514680754, -19415924, -501908046, -1084854476, -1522578423, 302072361, 913804428, -411966117, 296649076, 654930101, 1013551804, -528757494, -786466265, 1662703076, -1917612636, 1151492, 132789, 796224, 124258, 98961887, 452249, 268661753, 235256978, 709588533, 631083160, 86801438, 9192711, 8646276, 1499774, 486400797, 571395935, 34742660, 7477794, 14061545, 26534788, 160150583, 78993, 77471546, 73372, 28262158, 83559, 319184, 236927, 1913906, 80627, 6884455, 256917 };
		for (int ndx = 0; ndx < 100; ndx++)
			Util.Check("Fixed32.Add", Fixed32.Add(input0[ndx], input1[ndx]), output0[ndx], input0[ndx], input1[ndx]);
	}

	// Fixed64.Sub()
	public static void Fixed64_Sub()
	{
		long[] input0 = new long[]{ -2954840421L, 9906724104L, 20194663189L, 3087787221L, -16050769387L, -23208310910L, -15454962587L, 116887180L, 17443873028L, 30693877954L, -25218887031L, -13271348906L, 25820630912L, -14551161346L, 1198840260L, -28878857553L, 6359908422L, -16809937787L, 3968553141L, 24479752031L, -38987782238L, -22202454950L, -681640940L, 592851300L, 23186071110L, 20086457909L, -9499663184L, -11239286785L, 17736169068L, -38159254077L, 13708375746L, 15955107827L, 39736220838L, -19099047668L, -943344003845118976L, 1214272138730793984L, -576096275204499968L, 1466690205807637504L, 2385849276715006976L, -2845342092483977216L, 390366697939646464L, 712461285052536832L, 1904634608001826816L, 1992077109942194176L, -499147293201180672L, 3857002488268695552L, -2224370716902234624L, -730096463727797760L, 1266928016897478656L, -630156092281554944L, 3693977830422957056L, 3946903330706190336L, 50058232552730624L, -2289731842775811584L, -1080739410707684864L, 1925914096494211072L, 2389221332850077696L, -17789949969328128L, -3237449456917640704L, 4301088650749350912L, 131731064403525632L, -1920904614141549056L, 1604799479184803840L, 3576112687836418048L, 722613857600568320L, 372142232571231232L, -287458615759635456L, 4169609969361673216L, 203803883127792000L, 305139375422724L, 1002553316007467L, 19219611238457L, 1806722920242659840L, 198840393925015L, 24242190676L, 16677470753L, 229088798505L, 6451161608341L, 12499785319180096L, 2252098066890L, 2921290236824998L, 30783595861L, 2929132621482129408L, 2751956008398L, 80461299772L, 2625963354815L, 237201024883683L, 4813066152869L, 92407790067648944L, 395894030870041024L, 487294858565L, 550568847636126912L, 3462924526018859520L, 183776658976L, 2797864224831L, 836965707939340032L, 23701170037960L, 8783913533786985L, 1169830245528L, 355677036861274432L };
		long[] input1 = new long[]{ 37184087277L, 32839722675L, 19436130069L, 35649964396L, 3919782261L, -12481806585L, -22105494110L, -2673422061L, 3008925941L, 23715368191L, -37708150237L, 30214609194L, -2147148420L, 40249562958L, 19911199549L, -19344717949L, -29612430553L, 19899646989L, -27460768752L, 18111337428L, 33915795395L, -23702058431L, -32361307915L, -23347861070L, 22851389070L, 6812445663L, 29241025233L, 38733997158L, 25330391071L, 12653454145L, -25964170752L, 1775678100L, -10057896784L, 1970005620L, 653421900070049792L, -3688009384951865856L, 3110659020098539520L, -34614706970162176L, 4362545067233492992L, 4508450518005348352L, -3057362667818442240L, -1682466502410937344L, 162062265195922432L, -855160070290032640L, 2603875818354878464L, 3208332748323066880L, -1655834518297602560L, -741858377702258688L, -1719582759396728320L, -1261699894939544064L, 2276362481455499264L, -2123098918478513664L, -4471082266698249216L, -3401912619570564096L, -3319418864850297856L, 1742427918088056832L, 3436736824308104192L, 4053379693192216576L, 92453644297890816L, 2696446644393043968L, 1634612861539885056L, -2300414706346192384L, 3719347824295120896L, 2940207938592796672L, -3342222766085762048L, 3740396492654976000L, -467224914399057408L, -1782294667836520448L, 6898L, 1L, 306644L, 30096791L, 25449936L, 1994L, 1079L, 63566L, 2L, 5L, 62245L, 104082L, 142L, 102L, 25L, 408600L, 420L, 509567L, 3386775L, 96986855L, 4620L, 11L, 58398L, 2115285190L, 961L, 5135807L, 10638L, 28759055L, 94L, 39L, 1862705L, 55423L };
		long[] output0 = new long[]{ -40138927698L, -22932998571L, 758533120L, -32562177175L, -19970551648L, -10726504325L, 6650531523L, 2790309241L, 14434947087L, 6978509763L, 12489263206L, -43485958100L, 27967779332L, -54800724304L, -18712359289L, -9534139604L, 35972338975L, -36709584776L, 31429321893L, 6368414603L, -72903577633L, 1499603481L, 31679666975L, 23940712370L, 334682040L, 13274012246L, -38740688417L, -49973283943L, -7594222003L, -50812708222L, 39672546498L, 14179429727L, 49794117622L, -21069053288L, -1596765903915168768L, 4902281523682659840L, -3686755295303039488L, 1501304912777799680L, -1976695790518486016L, -7353792610489325568L, 3447729365758088704L, 2394927787463474176L, 1742572342805904384L, 2847237180232226816L, -3103023111556059136L, 648669739945628672L, -568536198604632064L, 11761913974460928L, 2986510776294206976L, 631543802657989120L, 1417615348967457792L, 6070002249184704000L, 4521140499250979840L, 1112180776794752512L, 2238679454142612992L, 183486178406154240L, -1047515491458026496L, -4071169643161544704L, -3329903101215531520L, 1604642006356306944L, -1502881797136359424L, 379510092204643328L, -2114548345110317056L, 635904749243621376L, 4064836623686330368L, -3368254260083744768L, 179766298639421952L, 5951904637198193664L, 203803883127785102L, 305139375422723L, 1002553315700823L, 19219581141666L, 1806722920217209904L, 198840393923021L, 24242189597L, 16677407187L, 229088798503L, 6451161608336L, 12499785319117851L, 2252097962808L, 2921290236824856L, 30783595759L, 2929132621482129383L, 2751955599798L, 80461299352L, 2625962845248L, 237201021496908L, 4812969166014L, 92407790067644324L, 395894030870041013L, 487294800167L, 550568845520841722L, 3462924526018858559L, 183771523169L, 2797864214193L, 836965707910580977L, 23701170037866L, 8783913533786946L, 1169828382823L, 355677036861219009L };
		for (int ndx = 0; ndx < 100; ndx++)
			Util.Check("Fixed64.Sub", Fixed64.Sub(input0[ndx], input1[ndx]), output0[ndx], input0[ndx], input1[ndx]);
	}

	// Fixed32.Sub()
	public static void Fixed32_Sub()
	{
		int[] input0 = new int[]{ -547738, 444308, 527751, 173198, 32959, -390823, 55050, 391079, 647044, -620653, -275601, 310763, -151712, 270897, 228170, 363523, -610611, 300248, 190730, 421878, -627921, -77928, -4788, -279404, 24785, 133038, -43692, -560783, 556423, 53188, -270550, 501536, -99662, -648501, -498362892, -452366339, -62037684, 42481449, 368738610, 160900878, 582832136, -769989768, 225696634, -767950484, -75397809, 560927631, -1035766546, 780957087, -967212965, -464217266, 645153239, 682083443, -294500521, 203852197, 72418648, 638195831, -983340449, 408932109, -212325922, -786583213, -353411563, 173133745, -1061639682, -252605980, 259971481, -182857260, -119019833, -633944187, 11070776, 1412381, 198614, 18240862, 74608, 3785667, 12046225, 472911, 105308699, 231432710, 12307570, 105537, 597504, 5911258, 310745, 3698741, 77950513, 61795329, 2390222, 75460514, 2145667, 287807160, 7319093, 2853710, 175863, 868270, 61540100, 294962776, 431668, 176163006, 47605365, 174435 };
		int[] input1 = new int[]{ -80286, -151087, -253971, 18819, -580171, -562835, -589213, 497403, 439677, -191428, 421974, 337782, 109859, 135008, -625803, 184399, 314778, -31501, 25925, 431275, -37342, 185550, -206263, 151795, -506946, 555281, 308229, -39525, 490016, -61504, 305257, -121778, -244933, -158571, -354180234, 500791778, -709584713, -600490142, 653391145, 955317146, -949972035, -364933225, -995433231, -643733941, -749641858, -317767366, 871797224, 797787879, -171288252, 193318619, 327819705, 891792697, -978762815, 468590196, 741519868, -62816900, -542767713, 602772029, -818934451, 81580000, -559429381, -664043432, -782091909, -595439208, 45819857, -966282372, -393794358, 671919464, 2, 5, 70, 5, 281, 4, 23635, 1344, 13, 1578, 3214, 135, 24, 4, 50, 6354, 2, 3573, 336, 9629, 2338, 925, 222, 1997, 11244, 3770, 288, 4725, 3303, 2129, 2, 37763 };
		int[] output0 = new int[]{ -467452, 595395, 781722, 154379, 613130, 172012, 644263, -106324, 207367, -429225, -697575, -27019, -261571, 135889, 853973, 179124, -925389, 331749, 164805, -9397, -590579, -263478, 201475, -431199, 531731, -422243, -351921, -521258, 66407, 114692, -575807, 623314, 145271, -489930, -144182658, -953158117, 647547029, 642971591, -284652535, -794416268, 1532804171, -405056543, 1221129865, -124216543, 674244049, 878694997, -1907563770, -16830792, -795924713, -657535885, 317333534, -209709254, 684262294, -264737999, -669101220, 701012731, -440572736, -193839920, 606608529, -868163213, 206017818, 837177177, -279547773, 342833228, 214151624, 783425112, 274774525, -1305863651, 11070774, 1412376, 198544, 18240857, 74327, 3785663, 12022590, 471567, 105308686, 231431132, 12304356, 105402, 597480, 5911254, 310695, 3692387, 77950511, 61791756, 2389886, 75450885, 2143329, 287806235, 7318871, 2851713, 164619, 864500, 61539812, 294958051, 428365, 176160877, 47605363, 136672 };
		for (int ndx = 0; ndx < 100; ndx++)
			Util.Check("Fixed32.Sub", Fixed32.Sub(input0[ndx], input1[ndx]), output0[ndx], input0[ndx], input1[ndx]);
	}

	// Fixed64.Mul()
	public static void Fixed64_Mul()
	{
		long[] input0 = new long[]{ -2895178131348L, -527233478245L, -4177309487945L, -3138065499461L, -3255400003515L, -3809177975773L, 3778296691759L, 1349591962628L, 2610248127215L, 2099402810977L, 390496026181L, 1871406386871L, -2969604071382L, -3603051799677L, -3026219219409L, -4018653771871L, 3917337415824L, 3691905867719L, 2890147311345L, -222830834103L, -1539922002717L, 3121155099453L, -674620822314L, -471154718219L, 1199911546558L, 1534534194714L, -1946746266906L, 2150842519001L, 809843590377L, -2965057603380L, 3552541607654L, 89987098041L, 1135899218528L, 2259592979052L, 290434948335244L, -133024494261944L, 409147491590524L, 240936475112194L, -193057438289899L, 311483105945045L, 166400028677486L, -13027595006066L, 302083893140668L, -11640089005420L, -85592137839856L, 347171843961664L, -284610520732532L, 20149158609382L, -281130616730911L, -302263917940752L, -117021209454492L, -317213221547713L, 151609035870598L, -346267167161243L, -311985407545279L, 380389924377132L, 245160567514161L, -10900662205076L, 155098241472223L, -247248743915134L, -265721933523736L, 78068200236353L, 234557287109224L, -118002226654949L, -340004843158327L, -421070956396076L, 128765323459961L, -327506543552507L, 959111626446620672L, 3781202091760759808L, 1531320262713076736L, -1260969130587184640L, 1057521466492446720L, 1762057382820521984L, -2102274978978948096L, 4255324807981539328L, -43830482020409856L, -2107149854981218304L, -1553740526723516928L, -3524223987641094656L, 3766308847753824256L, 3701671255723725824L, 636888958296574976L, 3078152615433376768L, -3630572795690617344L, -824074554383739392L, 1299839162605284352L, 1384441690644680704L, 3129244835457168384L, -4153037575933908992L, 1484309654691185664L, 4130460907923396608L, 3527341995642546176L, -476599442221934080L, -1723050122802357760L, 2051252318955189248L, -604362766281428480L, 3941835823835560960L, -3019859307406231552L, 2384913015110561792L };
		long[] input1 = new long[]{ -2212433987030L, 2598993019210L, -3815161391776L, -2786994631297L, 1327512954618L, 4070283547895L, 2408136175121L, 2885321243343L, -4194651127953L, 3736747363740L, -3910200635820L, 2023160402942L, 85672106039L, 2146729442999L, 667181390310L, -462484526215L, 2500121787164L, 2429706527131L, 2868864035335L, 303603594141L, 1084479758505L, -1721365934801L, -4147579951931L, 588812526274L, -43009750020L, -494966902230L, 2432535587132L, -2667513123242L, -3755218923748L, 1280338434596L, 2841828499323L, -3994458367860L, -3559460127657L, -934229754435L, 3537347255L, -2297540963L, -258992146L, -4204210259L, 65313614L, 4049000271L, 2934570603L, -3080211587L, -447237570L, 263788234L, -2850233391L, 780239106L, -1943828990L, -2063923294L, -4151174251L, 3562387551L, -1844416766L, 1718993418L, -1215581430L, 4198178839L, -2109342974L, 3395417535L, 513116678L, -94485758L, -3436584959L, -3753054239L, 1477083098L, -3411649011L, 1819118474L, -94106098L, -1011319754L, -940179110L, -2110902090L, -3866007067L, -1403826L, -2372789L, 1271932L, -3637409L, -2263900L, 3711519L, -3633495L, 1317328L, 2005486L, -2069700L, -855719L, -1674700L, -2835712L, -4207328L, -3224395L, 2070379L, 246429L, 3035933L, -758500L, 4107722L, 2054949L, 799623L, -2700284L, 817181L, -1998074L, 1695826L, -493343L, -2760846L, -809859L, 141439L, 564720L, 309300L };
		long[] output0 = new long[]{ 1491371192107983L, -319042273203974L, 3710647551321269L, 2036283654080737L, -1006197574811440L, -3609907451503170L, 2118445221279944L, 906644007101548L, -2549281402272081L, 1826541945186129L, -355513256475826L, 881532975409683L, -59234964404555L, -1800893196607277L, -470093718308057L, 432730928460574L, 2280301559011988L, 2088548565364929L, 1930501237124627L, -15751515077220L, -388830490788228L, -1250917572860798L, 651470338409941L, -64592296234436L, -12015899564972L, -176845033821556L, -1102576398608558L, -1335842685183056L, -708070578020936L, -883889666385604L, 2350591585427030L, -83690908916600L, -941378059188641L, -491500597899501L, 239203047763961L, 71159849094500L, -24672128930117L, -235845241796688L, -2935826546582L, 293644885621827L, 113694144528197L, 9342969648639L, -31456180453388L, -714910803909L, 56800797879284L, 63068477707221L, 128809870467263L, -9682569142526L, 271718524708670L, -250707664151821L, 50253207025924L, -126959625618322L, -42909087758629L, -338463926179523L, 153222174243107L, 300720012599471L, 29289158056364L, 239805628347L, -124100661792512L, 216052389340037L, -91384485544588L, -62012415874495L, 99345923911712L, 2585521225307L, 80059658349884L, 92173488119456L, -63285927849626L, 294796799277592L, -313489194518900L, -2088955307869921L, 453492450619388L, 1067915108129382L, -557425163684472L, 1522691327945478L, 1778501464227473L, 1305169081000775L, -20466143746205L, 1015413565294497L, 309563542201025L, 1374170629331502L, -2486670202408380L, -3626138232881574L, -478136719364367L, 1483816312111061L, -208308553199574L, -582503884591603L, -229554251962367L, 1324084957684005L, 1497203145496983L, -773198987725424L, -933198633512514L, 785881228558195L, -1640964842075828L, -188180647256192L, 197918786838111L, -1318564582564440L, 113958638519493L, 129809909753379L, -397063546832290L, 171748361451015L };
		for (int ndx = 0; ndx < 100; ndx++)
			Util.Check("Fixed64.Mul", Fixed64.Mul(input0[ndx], input1[ndx]), output0[ndx], input0[ndx], input1[ndx]);
	}

	// Fixed32.Mul()
	public static void Fixed32_Mul()
	{
		int[] input0 = new int[]{ -51609158, 5436916, 33181295, 28139202, -28461126, -315388, 15977254, -46495440, -22667640, 65269134, 56059607, 13793610, 15222915, -17333326, 40759371, 52485702, -23607955, 7652863, -37996586, 9989492, 6185441, -43222261, -60501149, 31914027, -60538816, -58597058, 40521745, 5115366, -1374874, 52220433, -33077682, -37092907, 25337929, 47759201, -2147483648, -2147483648, 1879373246, -2147483648, -2147483648, -2147483648, -2035791709, -2147483648, 250323306, -2147483648, -2147483648, -554213370, -2147483648, -2147483648, 1999847605, -2147483648, -2147483648, -1306734006, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2062326481, -2147483648, 1450620450, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648 };
		int[] input1 = new int[]{ -39480746, 16829544, -31844030, -11803577, -5483394, -61460398, -35188590, -30614360, 19810505, 31622899, 21677678, 10539316, 62782290, 52381123, 50652890, 5522468, 47016782, 45525657, -25381210, 64163455, 64070116, 57149102, 402065, -64268731, 23142019, -35400068, 24698866, -54674112, 20415434, -9352074, 32810817, 27616515, 53991680, 32999714, 30233, 26723, 52264, 58821, 32389, -48845, 18985, 27270, -10890, -38545, 56566, -36851, -45092, 36558, -9136, 27312, -14555, -19657, 39328, -38254, 49310, 53241, -58033, -13630, -42394, 48755, 44087, -39843, 22293, -26659, -25400, -49360, 37910, 45446, -9, -25, 13, -2, 20, -26, 25, -63, -45, 27, -57, -47, -55, 21, 39, -29, -2, 35, -4, 21, 61, -22, 0, -19, -25, 6, -23, 36, -1, 14, -48, 29 };
		int[] output0 = new int[]{ 1026050129, 1396191666, 1057033591, -773136304, -1913626239, 295774414, 11183366, 244953231, 1737862516, 1429357838, 1363253822, -2076717562, 1698372406, -969149034, 1438218670, 127802017, 243069963, 1021219471, 1830664038, 1190343734, 1752120142, 963766293, -371176064, -1232134696, 97419028, 1587142956, -1908245194, 27418260, -428293601, 1138009638, 619417357, 1549119328, -600243060, -1721342261, -990674944, -875659264, 1498772633, -1927446528, -1061322752, 1600552960, -589744654, -893583360, -41595777, 1263042560, -1853554688, 311635084, 1477574656, -1197932544, -278787350, -894959616, 476938240, 391944432, -1288699904, 1253507072, -1615790080, -1744601088, 1901625344, 446627840, 1389166592, -1597603840, -1387356378, 1305575424, 493449122, 873562112, 832307200, 1617428480, -1242234880, -1489174528, 294912, 819200, -425984, 65536, -655360, 851968, -819200, 2064384, 1474560, -884736, 1867776, 1540096, 1802240, -688128, -1277952, 950272, 65536, -1146880, 131072, -688128, -1998848, 720896, 0, 622592, 819200, -196608, 753664, -1179648, 32768, -458752, 1572864, -950272 };
		for (int ndx = 0; ndx < 100; ndx++)
			Util.Check("Fixed32.Mul", Fixed32.Mul(input0[ndx], input1[ndx]), output0[ndx], input0[ndx], input1[ndx]);
	}

	// Fixed64.DivPrecise()
	public static void Fixed64_DivPrecise()
	{
		long[] input0 = new long[]{ -4125679963921L, 65670050030L, -3565399107660L, 2259431355052L, 3982961203854L, -2261115835052L, -2211540627029L, 305169874142L, 3814655831776L, -3110465427448L, -1622256894755L, 1222383298569L, 2268820079056L, 75742078035L, -665291758309L, -3348301707559L, -3646971879698L, -4137201487926L, 4047395831884L, -1974170814919L, 1350753926628L, -2281419463062L, 2915401815357L, -3429753051597L, 2693207143254L, 1868840367720163328L, -240231236955206144L, 1281410015266142208L, 3314474176374292480L, -3981731190460901376L, 2631426384304105472L, 1551809834814424064L, 4466037174771719168L, 4145922812396342272L, 2010739249658144768L, -4083863554302253056L, -3424851984074606592L, 518567726573462528L, -4378232345095124480L, 1046566258588011520L, 2509244571949809664L, -4029434941268220928L, -651788687215377408L, -1008111848705953792L, 3228183576073314304L, 305564157778536448L, -4254098714917023744L, 1931614574660613120L, 2124152177603970048L, 2259043575582128128L, 2677372565773606912L, -3127362087790919168L, -898953966337094656L, -2090619164590259712L, 1617584097887363072L, 1511253064209799168L, 2439840206811569152L, 3768943856089560064L, -3556255417635223552L, -1488780854708825088L, -2101954416513337344L, 1473184608679074816L, 3700661340704524288L, 4513737304921606144L, -4034344303638199808L, 1576433754212219904L, -3337515889949047296L, 2632610051521630208L, 2851478222068316160L, 581052083350839296L, 3430098217909637120L, -1445233760367607808L, -3109749556478220288L, -4077810768558331392L, 4110842554593397760L, 4291782267086L, 4293188678277L, 4294480868009L, 4293482981683L, 4292277775216L, 4292592066872L, 4294959094525L, 4292152599254L, 4292079515352L, 4293829635669L, 4293731400873L, 4293447038349L, 4292227020504L, 4293962606469L, 4294882185715L, 4292625740032L, 4294402947461L, 4290946920700L, 4294192227153L, 4293112372489L, 4293623586145L, 4292480292680L, 4293635907253L, 4291775512804L, 4291862269366L };
		long[] input1 = new long[]{ -710570935370L, -179643450817L, 45842906666L, 2998811829137431040L, -851744683362428160L, -233879177839982L, 317279578985119L, 730202888728909L, -4533538647042L, -50080062829L, 636204734400873L, 699012412821782L, -9206508955L, -2648308932327L, 643137132998L, 237926322724135L, -1021956928875131520L, -14001290523402682L, 136927164067321232L, 6211348697L, -218782219160280960L, -919542483916160L, 62602305208119416L, 55819471691L, -328077238798L, -1246475167879172608L, -2244995618020870656L, -4572373405359749632L, -4228998101394147328L, -183907246266755584L, -1589144241782030336L, -2830148654258895872L, -43668047067034624L, -1057021162477394432L, -3614855283582648832L, -4378928930809018368L, -460426822983779840L, -1292100590453398528L, -3382705583797110784L, -3076836558502628352L, -441329489263925760L, -1877563448452431872L, -4209708177045683200L, -1886477038899098624L, -3764744247803783168L, -2782813690818663424L, -2899314221362787328L, -1402401975652992512L, -3609087329332517888L, -3478644851755277312L, 4336188536553103872L, 4388501828800698880L, 546441317016959040L, 2520977327393232384L, 1606492469397128448L, 1652839053487910144L, 3769092376059510272L, 3648399942400155648L, 3861332768788518400L, 783249480067824128L, 2280379811332109312L, 4536857356552462336L, 3307484544447258624L, 440029797799813568L, 2547047211956384768L, 1318679993429562368L, 4572630276616424448L, 2791870127582693888L, 4279213871199837696L, 279983658973197792L, 1127921215617359360L, 3189634908840259072L, 450952198138844608L, 2436538122138259456L, 2364567902734070784L, -4294453449797L, -4293841658559L, -4291681361186L, -4294955145933L, -4293683614097L, -4291740139980L, -4294339457563L, -4293207006177L, -4290817996332L, -4291058553024L, -4293990272749L, -4294668997509L, -4291259512952L, -4292663028566L, -4293777015753L, -4292804299374L, -4293417335827L, -4292345477076L, -4292219798718L, -4294280346397L, -4293420702801L, -4293376230705L, -4294277149909L, -4294742767467L, -4293274639773L };
		long[] output0 = new long[]{ 24937215465L, -1570058445L, -334037993623L, 3236L, -20084L, 41523228L, -29937302L, 1794973L, -3613914718L, 266759794847L, -10951726L, 7510733L, -1058436817656L, -122836782L, -4442919243L, -60442435L, 15327L, 1269107L, 126953L, -1365081804357L, -26516L, 10655975L, 200017L, -263898541919L, -35257662628L, -6439444978L, 459593461L, -1203666809L, -3366177484L, 92989295373L, -7111934817L, -2354990251L, -439256731104L, -16846023072L, -2389047040L, 4005559506L, 31947806971L, -1723729129L, 5558971737L, -1460905630L, -24419676537L, 9217420220L, 664989347L, 2295181617L, -3682837922L, -471604717L, 6301909161L, -5915722860L, -2527831360L, -2789166095L, 2651920577L, -3060706914L, -7065677074L, -3561769811L, 4324620831L, 3927050533L, 2780253931L, 4436873933L, -3955629216L, -8163765498L, -3958913086L, 1394639332L, 4805530976L, 44056912064L, -6802927234L, 5134476485L, -3134852531L, 4049964202L, 2861975605L, 8913376246L, 13061337497L, -1946063393L, -29617934448L, -7188093521L, 7466875580L, -4292295793L, -4294314144L, -4297768946L, -4293495127L, -4293561036L, -4295819863L, -4295587023L, -4293912456L, -4296230034L, -4297740902L, -4294708365L, -4293745251L, -4295935639L, -4296267571L, -4296072772L, -4294788646L, -4295953263L, -4293567885L, -4296940987L, -4293799135L, -4295170252L, -4294071025L, -4294325950L, -4291999886L, -4293554368L };
		for (int ndx = 0; ndx < 100; ndx++)
			Util.Check("Fixed64.DivPrecise", Fixed64.DivPrecise(input0[ndx], input1[ndx]), output0[ndx], input0[ndx], input1[ndx]);
	}

	// Fixed32.DivPrecise()
	public static void Fixed32_DivPrecise()
	{
		int[] input0 = new int[]{ -16256000, 16738993, -29065943, 60322351, 42675832, 44233949, 51887654, 17024888, -16075785, -860319, 27401488, 34492483, -19990937, 16582791, -1769652, 46979582, -58210799, -22535994, 23088677, -38316976, 3180730, 30394008, 13164544, -52864753, -56134354, 180429138, -426302909, -723357943, 515521074, -898441198, 309428083, -1015178038, -683822119, 834284852, 596075677, 657321224, 142073068, -616131072, 515831051, -552705012, 666691655, -51655661, 979699051, -426546730, 785093881, -466325546, -159001240, -816604538, -163840058, -362888203, -521225672, -353405798, -82313358, -1056106718, 426879090, -734311444, -683440194, 514223938, -195332545, 768844339, 368430442, -221420531, -861772099, 107366961, -1028239875, 81053333, -836994035, 596839267, 401735083, -443875644, -912662436, 920826729, 314746596, 258383994, -489738119, 65483587, 65490756, 65492227, 65498915, 65478875, 65491992, 65515609, 65525602, 65518715, 65523543, 65501497, 65502757, 65520409, 65495925, 65517779, 65517531, 65502835, 65484829, 65501186, 65509801, 65518375, 65513884, 65473186, 65522368, 65504918 };
		int[] input1 = new int[]{ -104438, -88872, 1607055, 3741464, -31746300, -747303, 401398437, 1063914, -2920586, -1537336, 27118070, 17466138, -29597786, -494822, 759269, 324370463, -1212205, -103933242, 803005711, 74934, -80653777, -1110645, 107712450, 315529004, -898434679, -833642784, -29501243, -396878794, -984766839, -710282900, -261584096, -785607895, -584208301, -606485198, -1016693843, -54414746, -284064825, -486241231, -741265616, -342465407, -436325862, -650682189, -277633811, -611221378, -594469075, -740356035, -979718805, -1053168456, -292666666, -855388893, 954390309, 735004075, 739790013, 1049419929, 22041065, 146076086, 1023667278, 969529695, 944363877, 87200930, 451989802, 866161549, 480716035, 790688037, 961074625, 824176340, 1069435989, 148296045, 484925005, 10190392, 211255407, 317074844, 205553721, 439769538, 975617029, -65475642, -65522282, -65483239, -65510495, -65475392, -65509362, -65502779, -65488775, -65474968, -65524221, -65524623, -65511179, -65501188, -65519691, -65519794, -65518441, -65533727, -65517088, -65531179, -65498089, -65488473, -65485791, -65519589, -65518281, -65489554 };
		int[] output0 = new int[]{ 10200819, -12343670, -1185314, 1056614, -88098, -3879170, 8471, 1048715, 360729, 36675, 66220, 129421, 44264, -2196284, -152746, 9491, 3147077, 14210, 1884, -33511374, -2584, -1793463, 8009, -10980, 4094, -14184, 947017, 119447, -34307, 82896, -77522, 84686, 76710, -90151, -38422, -791664, -32777, 83042, -45605, 105768, -100136, 5202, -231259, 45734, -86551, 41278, 10636, 50815, 36688, 27802, -35791, -31511, -7291, -65953, 1269264, -329443, -43754, 34759, -13555, 577826, 53420, -16753, -117485, 8899, -70116, 6445, -51291, 263759, 54293, -2854633, -283127, 190325, 100349, 38505, -32897, -65543, -65504, -65544, -65524, -65539, -65518, -65548, -65572, -65579, -65535, -65512, -65527, -65555, -65512, -65533, -65535, -65505, -65503, -65506, -65547, -65565, -65564, -65489, -65540, -65551 };
		for (int ndx = 0; ndx < 100; ndx++)
			Util.Check("Fixed32.DivPrecise", Fixed32.DivPrecise(input0[ndx], input1[ndx]), output0[ndx], input0[ndx], input1[ndx]);
	}

	// Fixed64.Mod()
	public static void Fixed64_Mod()
	{
		long[] input0 = new long[]{ 1742027882811L, -3641271435695L, 1912568458890L, 2657099023237L, -2769854035289L, 323864870150L, -1991993078927L, 344335934160L, 3508115515633L, -3871225519802L, 324785974151L, -52196210024L, -2314802767077L, 1383520918644L, -2436195487134L, 4126987871921L, -2462310075146L, 1661047678773L, 586109122272L, 3397955299582L, -3462406131612L, -4079085631899L, -274535130127L, 1855978906864L, 3162463871472L, -3767035079754L, 348002018162L, -2737050315274L, 2869642635336L, -2625356699222L, 1526146218710L, 928230990432L, -4238377743973L, 3789602447764L, -757595254352L, 743869518346L, -2980604955387L, -2837936063321L, 1352716246629L, -2540940051183L, -28126930013L, -4049086791885L, 3530322935643L, -1815390474845L, 1708910938795L, -2491014059159L, 2089592298973L, 2595737699208L, -1841225990857L, -1397818894650L, -2679083766644475904L, 2986714076423774208L, 2413883992852900864L, -4509151323524395520L, -2480309072320505856L, -1676819745695499776L, 2198198208390439936L, 3649801974344148992L, -29534091369110016L, -2964060872705895424L, -2647544189687689216L, 3153002067602402304L, 50115767934654464L, -1741686666861964800L, -1098817868662804992L, 1714323683609477120L, 2287235740926199808L, -2395792199024320512L, -295011431717285376L, 3685419880448424960L, 1263662213958392832L, -946361085227977728L, 2636170012475988992L, 866307408803888128L, 2670697701261210624L, 4293495441139L, 4293555634945L, 4292540322166L, 4293240972953L, 4291020985246L, 4294160434125L, 4290835563504L, 4291392975208L, 4291623918260L, 4294043558007L, 4291118401046L, 4292457011926L, 4291986762334L, 4293098191195L, 4290992188812L, 4293469123279L, 4293134509531L, 4293775286637L, 4294497844365L, 4291418569566L, 4293021034619L, 4292193048250L, 4293000024757L, 4293235357029L, 4292103761972L };
		long[] input1 = new long[]{ 25043908458L, 38376457684L, 5598213162L, 10079177187L, 7653874922L, 30067287500L, 4721112295L, 12538892084L, 8963913797L, 10124233678L, 14138585505L, 25316093203L, 12677939689L, 33430865608L, 8232634972L, 15533218719L, 5177860652L, 15609093253L, 21616661674L, 7044820218L, 7432198070L, 23321889374L, 4823190570L, 22030284823L, 11859107597L, -5957134395L, -67568852255407L, 35689128975829496L, 144156563574995L, -2101083703017664L, -8172618816L, 585283773551136896L, 19531656826028L, -1061781131309614976L, -220786808579L, 2420846366014L, 249457538156666848L, -2155386435640686L, -57990063120L, 8073215831303144L, 700699635155645952L, -33978413537228536L, -256798650459278L, 91669286271574L, 8285072067387729L, -19637689631830L, -733254747379679104L, 612814269216837760L, 133978379747728L, -13146550004044632L, -496596838540412928L, -2634752806411635712L, -1634379829499197440L, 827077246223432704L, 3984337913488239616L, -3650955224603269120L, 569757229890166784L, -2134490997113911296L, 2609936382284576768L, -733546958850632192L, -2701357918023470080L, -3329483863015122944L, -978484618823503360L, 1828890626318601216L, 3424299187423616000L, 611440342783790080L, 4279706787416450048L, -3371778660856360448L, 4118546248457259008L, -168023898848879104L, -3988770620387486720L, -2228224908886310400L, -2603249917065507840L, -3703022206918823424L, -4518402283652328960L, -4293562840801L, -4291801751774L, -4294277010773L, -4291153976752L, -4293773385295L, -4291478680860L, -4294952626323L, -4291635615376L, -4293161511583L, -4291852051838L, -4292531364896L, -4291217132774L, -4293552185573L, -4293686502145L, -4293285089805L, -4291398659746L, -4294843721401L, -4291412580388L, -4294595193907L, -4293968303577L, -4291319853226L, -4293498272493L, -4293118810365L, -4294417799791L, -4294239742847L };
		long[] output0 = new long[]{ 13998199209L, -33884413399L, 3577770648L, 6275423056L, -6805188447L, 23191995150L, -4404802732L, 5785847892L, 3225221006L, -3768254806L, 13737093041L, -1564023618L, -7417743679L, 12855428716L, -7568170394L, 10684911386L, -2826265446L, 6483793955L, 2459257074L, 2351954506L, -6434029062L, -21076880823L, -4436458207L, 5434981732L, 7941250670L, -2126142114L, 348002018162L, -2737050315274L, 2869642635336L, -2625356699222L, 6039118934L, 928230990432L, -4238377743973L, 3789602447764L, -95234828615L, 743869518346L, -2980604955387L, -2837936063321L, 18944794869L, -2540940051183L, -28126930013L, -4049086791885L, 3530322935643L, -1815390474845L, 1708910938795L, -2491014059159L, 2089592298973L, 2595737699208L, -1841225990857L, -1397818894650L, -196099573942411264L, 351961270012138496L, 779504163353703424L, -373765092407232000L, -2480309072320505856L, -1676819745695499776L, 488926518719939584L, 1515310977230237696L, -29534091369110016L, -29873037303366656L, -2647544189687689216L, 3153002067602402304L, 50115767934654464L, -1741686666861964800L, -1098817868662804992L, 491442998041896960L, 2287235740926199808L, -2395792199024320512L, -295011431717285376L, 156918004621963776L, 1263662213958392832L, -946361085227977728L, 32920095410481152L, 866307408803888128L, 2670697701261210624L, 4293495441139L, 1753883171L, 4292540322166L, 2086996201L, 4291020985246L, 2681753265L, 4290835563504L, 4291392975208L, 4291623918260L, 2191506169L, 4291118401046L, 1239879152L, 4291986762334L, 4293098191195L, 4290992188812L, 2070463533L, 4293134509531L, 2362706249L, 4294497844365L, 4291418569566L, 1701181393L, 4292193048250L, 4293000024757L, 4293235357029L, 4292103761972L };
		for (int ndx = 0; ndx < 100; ndx++)
			Util.Check("Fixed64.Mod", Fixed64.Mod(input0[ndx], input1[ndx]), output0[ndx], input0[ndx], input1[ndx]);
	}

	// Fixed32.Mod()
	public static void Fixed32_Mod()
	{
		int[] input0 = new int[]{ -751635, 4712258, -22667879, 55675425, -4815174, -25790123, -48580122, 44325219, -30831075, -12035275, 6445272, -39488635, -58242345, -60528, 12737838, -51475269, -40468966, 29685498, -27506844, 18564073, 3189296, 52789538, -62826512, -28525667, -64928400, 60229846, 56555462, -28904459, -35333367, -25392456, 11994825, 2002770, -59678211, 55067826, 50808811, -49608112, 100576, -64379027, -54754071, -14005743, 46638711, -35192096, 35927761, -29912900, 58378182, -8159465, 51345282, 14442490, -23763261, -21213331, 512992809, -769926978, -212531326, -277474108, -596182530, -928177125, -383762891, 989508420, 842399158, -922105790, -870799457, 618951999, 690377925, 828681860, -584975213, 241846117, -669257198, 729303720, 771502553, -408891390, -124654553, -11352854, 641751670, 291070818, 663311095, 65510726, 65499315, 65500887, 65509187, 65520361, 65486465, 65492918, 65520631, 65507289, 65497298, 65506864, 65532052, 65502707, 65493849, 65477987, 65530820, 65533485, 65522998, 65509164, 65516931, 65503543, 65486633, 65528972, 65516604, 65506334 };
		int[] input1 = new int[]{ 246662, 99585, 278660, 442412, 99769, 67844, 323465, 607714, 125319, 110722, 293948, 306200, 130614, 85659, 613647, 131812, 127395, 166809, 128852, 75099, 612162, 539587, 308528, 135725, 299646, -645133, -8148776, 75963929, 571711, -91373, -39643223, 9145462, 1358707, -338561, -570556, 147432, 3636721, -83489463, -844635860, 31468209, 246489, -28170732, -2602202, 602734, 250261331, -158284252, -990527, 1512752, 408728653, -471419, 671975442, 26531563, -254405928, -67039878, 76117446, 978853986, -701090968, 701344085, -1031056470, -439443407, 39870114, -842094101, 948379152, 959576476, -740416134, 563184174, -100725220, 739850041, 868994571, 89635677, -325794958, 651445589, -13972312, -1071476742, -564143507, -65535269, -65513075, -65529065, -65476611, -65500649, -65471090, -65471700, -65495399, -65485634, -65530828, -65504252, -65516949, -65485911, -65487404, -65473819, -65481993, -65492902, -65495348, -65505681, -65509771, -65524366, -65533450, -65502425, -65522228, -65511146 };
		int[] output0 = new int[]{ -11649, 31763, -96419, 373925, -26262, -9403, -60372, 569811, -2601, -77299, 272364, -295035, -119115, -60528, 464898, -68589, -84751, 160305, -61368, 14620, 128486, 449599, -195328, -23417, -204864, 232477, 7662806, -28904459, -458996, -82135, 11994825, 2002770, -1253810, 220944, 29327, -70960, 100576, -64379027, -54754071, -14005743, 52290, -7021364, 2099135, -378934, 58378182, -8159465, 828405, 827722, -23763261, -470895, 512992809, -511651, -212531326, -9314596, -63360408, -928177125, -383762891, 288164335, 842399158, -43218976, -33527063, 618951999, 690377925, 828681860, -584975213, 241846117, -64905878, 729303720, 771502553, -50348682, -124654553, -11352854, 12997630, 291070818, 99167588, 65510726, 65499315, 65500887, 32576, 19712, 15375, 21218, 25232, 21655, 65497298, 2612, 15103, 16796, 6445, 4168, 48827, 40583, 27650, 3483, 7160, 65503543, 65486633, 26547, 65516604, 65506334 };
		for (int ndx = 0; ndx < 100; ndx++)
			Util.Check("Fixed32.Mod", Fixed32.Mod(input0[ndx], input1[ndx]), output0[ndx], input0[ndx], input1[ndx]);
	}

	// Fixed64.Min()
	public static void Fixed64_Min()
	{
		long[] input0 = new long[]{ -97361149045337L, -427995522799300L, 346154426761190L, -178652565883191L, 199759968293020L, -113706705852948L, 40773063418986L, 223493693104072L, -392103023182587L, 234094575509008L, 80722694637589L, -44277569820618L, 147481815068676L, -342459773959470L, -85978401040036L, 31411703414627L, 50925618623714L, -205718861495795L, -55198810625703L, 85228643839687L, -247676028315333L, 194062470690367L, 37029000617243L, 33772277015726L, 28435822213241L, -290020588735051L, 315266634746807L, -124209423457839L, -339943005558298L, 193146777889941L, -405655784388898L, -289908490334999L, -339885441158271L, -23163610210786L, -365989888370427L, -422785995196875L, -329952876353646L, -353512567564617L, -918516600427L, 45921471821383L, 402104570387244L, 385795669179650L, -264413011523126L, -12046547005609L, -36741593817109L, 195400345890990L, 146618131868274L, -190364671888645L, -311418007545015L, -375191411174712L, -1075970111516260864L, -257991098531128320L, -2296677779854254080L, 2263102637506318336L, 1314662304922287104L, 2696695932884954112L, 4049150511908319232L, -3046745697636347392L, 549099047072142336L, -3259931677987386368L, -3440294277001561088L, -908421461536324096L, -2014645148753521152L, 4180859304758922240L, -3887706805755171328L, 3799817068870063104L, 4373035116836964352L, 1059692593478733824L, 3293034283738229760L, -759971500338441216L, -1651711723353677312L, -641458839892121088L, -3369087546016583680L, 1053301892592707584L, 3162911261533526016L, 1553770418666484736L, -3308532424124958720L, 3069814224691943424L, 3038457050701334528L, 3274863698734567424L, 4328927507788521472L, 1477884209141186560L, -1697811359709768704L, -4092103208545297408L, -716797810454112256L, -4430381464365285376L, -1497519442417976320L, -252965772044103168L, -936185431525687296L, 1561255949666444288L, -1031597846582915584L, 4066393448400123904L, -1345260876018919424L, 3849624507544845312L, -1972040954353037824L, -3249731813554437120L, -270688658246556672L, -1141390941730247168L, 3230551640652805120L, -3312358866325322240L };
		long[] input1 = new long[]{ -203405893094718L, 172306183080236L, -384870587179219L, -265737092723743L, -78083034636360L, 138073109864295L, -35527793816543L, -117114579854535L, 222408341503566L, 60283827428071L, 523389000243L, -264514242723174L, 133939969062370L, -155753071472528L, 210253630297907L, -58865544627411L, -133888858262346L, -258851304320537L, -405966615189042L, -92689135443161L, -68132149831726L, -25058543411668L, 224696384704632L, 328376447152912L, 112620803052443L, -203974967894983L, 28978752613494L, -380421181977147L, -358982858767164L, 262532205922251L, -7141991003325L, 76134577035452L, -242288145512824L, -394248323983586L, -32944058615340L, -148465237869134L, -334534632755779L, 355348381165472L, -374577305174426L, -74566268634722L, 42238528219668L, 216658433100889L, -146424179468184L, 368294385571500L, -384098646778859L, 237122083510418L, -177641029482720L, 320836789549401L, 207196552296483L, -407372778789697L, 2784729886181995520L, 1644587394808512512L, -4459761505994834432L, -1626958478195571712L, 1889265836325080064L, 4177174746803248128L, -1500589570941932544L, 1261706345980426240L, 3711877394400180224L, 4372577904683190272L, 1393542338582525952L, -3632349731211011584L, -1473516729910294528L, 1885921366764963840L, -2977173167348520448L, -306492467715359232L, -3822296120253942784L, -2534227958635611648L, 285971096785646592L, -4069011359817273344L, 685650492860651520L, 14314870453680128L, -2615807993422966784L, -2879907684355602944L, -4340059672182913536L, -1106419153326412800L, -3907883982300590080L, -2607026035134040064L, -1586343171481642496L, 1800957056660574208L, -2787226941514346496L, 2444544536032675840L, 4450948602466526208L, 1739129898599269376L, -4121552205874816000L, -1927345905447378432L, 1325959696708633600L, 4540833136913190912L, -1369683026442989056L, -282286538829972480L, 1681894125004035072L, 1852460230028985344L, 646842851983104000L, -697077317781489664L, -4443972407343469056L, -2010934133799291904L, 928224159883029504L, 1380503775643504640L, 2215111656465977344L, 2946137531789709312L };
		long[] output0 = new long[]{ -203405893094718L, -427995522799300L, -384870587179219L, -265737092723743L, -78083034636360L, -113706705852948L, -35527793816543L, -117114579854535L, -392103023182587L, 60283827428071L, 523389000243L, -264514242723174L, 133939969062370L, -342459773959470L, -85978401040036L, -58865544627411L, -133888858262346L, -258851304320537L, -405966615189042L, -92689135443161L, -247676028315333L, -25058543411668L, 37029000617243L, 33772277015726L, 28435822213241L, -290020588735051L, 28978752613494L, -380421181977147L, -358982858767164L, 193146777889941L, -405655784388898L, -289908490334999L, -339885441158271L, -394248323983586L, -365989888370427L, -422785995196875L, -334534632755779L, -353512567564617L, -374577305174426L, -74566268634722L, 42238528219668L, 216658433100889L, -264413011523126L, -12046547005609L, -384098646778859L, 195400345890990L, -177641029482720L, -190364671888645L, -311418007545015L, -407372778789697L, -1075970111516260864L, -257991098531128320L, -4459761505994834432L, -1626958478195571712L, 1314662304922287104L, 2696695932884954112L, -1500589570941932544L, -3046745697636347392L, 549099047072142336L, -3259931677987386368L, -3440294277001561088L, -3632349731211011584L, -2014645148753521152L, 1885921366764963840L, -3887706805755171328L, -306492467715359232L, -3822296120253942784L, -2534227958635611648L, 285971096785646592L, -4069011359817273344L, -1651711723353677312L, -641458839892121088L, -3369087546016583680L, -2879907684355602944L, -4340059672182913536L, -1106419153326412800L, -3907883982300590080L, -2607026035134040064L, -1586343171481642496L, 1800957056660574208L, -2787226941514346496L, 1477884209141186560L, -1697811359709768704L, -4092103208545297408L, -4121552205874816000L, -4430381464365285376L, -1497519442417976320L, -252965772044103168L, -1369683026442989056L, -282286538829972480L, -1031597846582915584L, 1852460230028985344L, -1345260876018919424L, -697077317781489664L, -4443972407343469056L, -3249731813554437120L, -270688658246556672L, -1141390941730247168L, 2215111656465977344L, -3312358866325322240L };
		for (int ndx = 0; ndx < 100; ndx++)
			Util.Check("Fixed64.Min", Fixed64.Min(input0[ndx], input1[ndx]), output0[ndx], input0[ndx], input1[ndx]);
	}

	// Fixed32.Min()
	public static void Fixed32_Min()
	{
		int[] input0 = new int[]{ -2147483648, -2147483648, -2147483648, -2147483648, 872086984, -2147483648, -499214010, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, 1988154551, 1983533414, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -1618928232, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -961651010, -299069815, 112557522, 1745651090, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, 1216487204, 817774521, -1414817471, -1796362149, 1941898905, -2147483648, 901114088, 197266351, 620512511, 696391062, -717525243, -588598176, -173319452, -859459986, 637655822, 1048941481, 158280760, 52913359, -397639940, 216552884, -619324662, 645265330, 56106265, 261333435, 982625510, 461579851, -1027220772, -1031694306, -455217308, 879667322, -551577780, 708881540, -738226600, -857530792, 31646555, 854424045, 756015141, -550570057, -288369751, -373788054, 847140179, 836610104, 600273389, -387549253, 797933053, -293784262, -190787646, -368280206, 700650396, 50947604, -879034745, -953307748, 690038029, -697121113, -606928952, 178989568 };
		int[] input1 = new int[]{ -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -1681999301, -2147483648, -1114968839, -2147483648, -1717727146, -2147483648, 2085823032, 611835153, 594926468, -655989493, 1871410599, -2147483648, 969930038, -2147483648, -2147483648, -2147483648, 388789303, -2147483648, -2147483648, -2147483648, -1374884793, -2147483648, -408944534, -2147483648, -243318893, 897485825, -2147483648, -2147483648, 1167964993, -2147483648, -939931454, 1614772922, 159590225, -2147483648, 1058028775, -2147483648, -2147483648, -930858102, -1522747342, -2147483648, -2147483648, -2147483648, -244887533, -2147483648, 285733519, 73487750, -657316577, 572039598, -813476292, 859066571, -421258163, 814587012, 174227019, -352664960, -924113399, -389530483, 182635281, 856973600, -780815483, -364891005, -732458712, 1049889937, 443154528, -382192943, -1028749882, -630086304, 537142205, 202667949, -421374325, 414801257, -658602879, 567576910, 684960244, -672011855, -1054898312, 1032636336, 823139983, 926398810, -505051297, -391214432, -966995303, 213332473, -634053585, 1061815431, 184126444, 859428200, 511965550, 76856190, -443412686, -874998986, 522826335, 917418619, -241978735, 559598083 };
		int[] output0 = new int[]{ -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -1681999301, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, 969930038, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -961651010, -2147483648, -2147483648, 1167964993, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -1522747342, -2147483648, -2147483648, -2147483648, -244887533, -2147483648, 285733519, 73487750, -657316577, 572039598, -813476292, -588598176, -421258163, -859459986, 174227019, -352664960, -924113399, -389530483, -397639940, 216552884, -780815483, -364891005, -732458712, 261333435, 443154528, -382192943, -1028749882, -1031694306, -455217308, 202667949, -551577780, 414801257, -738226600, -857530792, 31646555, -672011855, -1054898312, -550570057, -288369751, -373788054, -505051297, -391214432, -966995303, -387549253, -634053585, -293784262, -190787646, -368280206, 511965550, 50947604, -879034745, -953307748, 522826335, -697121113, -606928952, 178989568 };
		for (int ndx = 0; ndx < 100; ndx++)
			Util.Check("Fixed32.Min", Fixed32.Min(input0[ndx], input1[ndx]), output0[ndx], input0[ndx], input1[ndx]);
	}

	// Fixed64.Max()
	public static void Fixed64_Max()
	{
		long[] input0 = new long[]{ 3411571151L, 2855559663L, -266135274L, 3396023259L, 535990510L, -631687998L, 2440349475L, 855029186L, -321311598L, -618142906L, 1775710510L, 339626998L, -3776460223L, -910011794L, -1486033886L, -3532031651L, -555714574L, 1319913178L, 1153132298L, 2736563091L, -1886550102L, 511802550L, 2440806799L, 1820323682L, 2029689742L, -3257745039L, -273240126L, -2453823235L, -1710644750L, -2480468651L, 3862866983L, -2009118702L, -1056744710L, -3793518651L, -340032781158340L, -300081556339736L, 66122231830790L, -45225125021059L, -184969155486132L, 254164949118354L, -184816429486061L, 283646029932083L, -66283894230865L, -423105635597023L, -65122753430325L, 163281096276033L, -188198347487636L, -323111412350460L, -424728188397779L, -346902565561539L, 46381272221597L, 309147481943958L, 406427370789257L, 264773332323294L, 67147350231267L, 388551471180933L, -319493848348775L, 218817228301894L, 282517045531557L, 367083647970936L, 326489797552033L, 398552197185590L, -299371704339405L, 331045173554155L, -173202884280653L, 298168929938845L, 329547436753457L, 290214730335141L, 3538608475044533248L, 4126761120738994176L, -291216978433357824L, -1437873930175559168L, -4106607420484826112L, -220746585231884288L, 224497689410873344L, 3949178039876491264L, -4264967086714939904L, -3807252722414790656L, -721085914394370048L, -1292054361569794560L, 2458959777724625920L, -4190530411472847360L, -924454479970477056L, 4140869508492338176L, -2877477647692968960L, 1659455716895695872L, -1110070270666704384L, 270441942440057856L, -792856243873093120L, -3796563025551438848L, -4283997197754147328L, 2817615102163049472L, 843307790203621376L, -481382982039137792L, 749623377929331712L, 4270671232783413248L, 4346763944336399360L, -1131762935013156864L, -1551662010629961728L, 2359746741810430976L };
		long[] input1 = new long[]{ -1804651278L, -2780185619L, 101713326L, 4191503971L, -1125362562L, 2906450103L, 289760090L, -428043106L, -3120325803L, 2376895859L, -1823416078L, -3898088515L, 2919205731L, -1337093298L, -2501508647L, -2536586391L, 1350685922L, -3523575131L, -1778425114L, 590489262L, -170024858L, -1395198694L, -3880214431L, 2208508339L, -2928633779L, -501231746L, 3936519423L, 599205414L, -1729293358L, -2135810242L, -186042594L, -510138082L, -2898595587L, -4277908867L, -223173278303923L, -379566037976749L, 109715858651090L, -249203012316044L, 262108371922053L, -2510731001169L, -185631373886441L, 128848213859999L, 356260754365896L, -394412537183662L, -143523142266833L, -26647744612408L, -291421556735703L, 287266625133769L, 55152000225682L, -255523499918987L, 169534433078945L, 101744988247378L, -27944449413012L, -125136161458271L, -65441507430473L, -299087522739273L, -410084437590960L, 276801733128895L, 101754559047383L, -122556073857069L, 357171881166321L, -153871897071652L, 153521004671488L, 32167661814979L, 179593978283630L, 66205046230829L, 263230389122576L, -48916348222778L, 1499143257884199936L, 2007806169245701120L, 4157579443837427712L, 1077114990884117504L, 2159240308081972224L, -1353449974201899008L, 587399894693428224L, 4532381362825232384L, 3043549026490890240L, -40164856986166272L, -3558146753729538048L, 4015690620712858624L, -918464125871199232L, -2227050398539064832L, 836790417847074816L, 3413948264695828480L, 3883953584157304832L, 2119235745717818368L, -1388810732024109056L, -4342766077106271744L, -2790744476781735936L, -2055713179380398080L, -4344065064195747840L, 2723485482168584192L, 3799072300065753088L, 1502853937830980608L, 2330504298048207872L, 986461579981700096L, 3641316055266171904L, 565512475054846976L, 4214100113967479808L, 1478481866725605376L };
		long[] output0 = new long[]{ 3411571151L, 2855559663L, 101713326L, 4191503971L, 535990510L, 2906450103L, 2440349475L, 855029186L, -321311598L, 2376895859L, 1775710510L, 339626998L, 2919205731L, -910011794L, -1486033886L, -2536586391L, 1350685922L, 1319913178L, 1153132298L, 2736563091L, -170024858L, 511802550L, 2440806799L, 2208508339L, 2029689742L, -501231746L, 3936519423L, 599205414L, -1710644750L, -2135810242L, 3862866983L, -510138082L, -1056744710L, -3793518651L, -223173278303923L, -300081556339736L, 109715858651090L, -45225125021059L, 262108371922053L, 254164949118354L, -184816429486061L, 283646029932083L, 356260754365896L, -394412537183662L, -65122753430325L, 163281096276033L, -188198347487636L, 287266625133769L, 55152000225682L, -255523499918987L, 169534433078945L, 309147481943958L, 406427370789257L, 264773332323294L, 67147350231267L, 388551471180933L, -319493848348775L, 276801733128895L, 282517045531557L, 367083647970936L, 357171881166321L, 398552197185590L, 153521004671488L, 331045173554155L, 179593978283630L, 298168929938845L, 329547436753457L, 290214730335141L, 3538608475044533248L, 4126761120738994176L, 4157579443837427712L, 1077114990884117504L, 2159240308081972224L, -220746585231884288L, 587399894693428224L, 4532381362825232384L, 3043549026490890240L, -40164856986166272L, -721085914394370048L, 4015690620712858624L, 2458959777724625920L, -2227050398539064832L, 836790417847074816L, 4140869508492338176L, 3883953584157304832L, 2119235745717818368L, -1110070270666704384L, 270441942440057856L, -792856243873093120L, -2055713179380398080L, -4283997197754147328L, 2817615102163049472L, 3799072300065753088L, 1502853937830980608L, 2330504298048207872L, 4270671232783413248L, 4346763944336399360L, 565512475054846976L, 4214100113967479808L, 2359746741810430976L };
		for (int ndx = 0; ndx < 100; ndx++)
			Util.Check("Fixed64.Max", Fixed64.Max(input0[ndx], input1[ndx]), output0[ndx], input0[ndx], input1[ndx]);
	}

	// Fixed32.Max()
	public static void Fixed32_Max()
	{
		int[] input0 = new int[]{ 33482, 21754, 25870, -59124, -53097, 37091, -37375, 43878, -50301, -14648, 26127, 54839, 62147, -52409, -12443, -21903, 46803, 27673, -60040, -33880, -61883, -25872, 7656, -15018, 24729, -45156, 26854, -56208, 13183, 59864, -52873, -30320, 5079, -6038, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, 173132058, -1445877829, -2147483648, -2147483648, 1023000882, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, 1663125272, -2147483648, -2147483648, -2147483648, -2147483648, -1687732669, -2147483648, -2147483648, 230005612, -2147483648, -2147483648, -2147483648, -1070312817, -588322148, 70306583, 584691339, 354721333, -786585385, 718488564, 434393559, 352078760, -497007218, 525885217, -216093175, -578152054, 805381686, -986026942, -586046515, 645943096, -775533879, -73605951, -698561704, 219436460, 426109956, 93448837, -804141295, -427581421, -756524816, 583586003, 286562913, 829982738, -157014002, -801791413, 738289778 };
		int[] input1 = new int[]{ -41951, 30729, 8017, 5480, 36076, -47433, 1955, 1921, 54122, 40525, 10194, -51036, 42091, 40861, -31736, -10513, 32750, -41463, 2540, 28230, 17357, -6181, -51438, -24646, -18318, 57594, -55298, -46703, -34841, -44630, -27310, -9087, -15775, 2650, -2147483648, 1143618576, 1940664389, -857256778, -2147483648, 1514755203, -2147483648, -2147483648, -2147483648, -1856983402, 56637997, -2147483648, 1376997733, -2147483648, -2147483648, -2147483648, -2147483648, -1590111234, -2147483648, 737597977, -2147483648, -2147483648, -2147483648, 295153354, -2147483648, -2147483648, -2147483648, -1895910032, -2147483648, 1786030619, -2147483648, 2104074796, -2147483648, -2147483648, 934427007, 153778402, -679950759, -849652676, 44325479, -686408492, 458496665, 102366126, 476101311, 1066104249, 62632394, 590928848, 596214531, 503221646, 793018231, 1006693449, -398340780, -1061656722, 720421983, -874406514, -655404257, 370141997, -147607554, -422680950, 391970837, -199293944, -61469062, 37504326, -296429565, -641816172, 678152644, -564649060 };
		int[] output0 = new int[]{ 33482, 30729, 25870, 5480, 36076, 37091, 1955, 43878, 54122, 40525, 26127, 54839, 62147, 40861, -12443, -10513, 46803, 27673, 2540, 28230, 17357, -6181, 7656, -15018, 24729, 57594, 26854, -46703, 13183, 59864, -27310, -9087, 5079, 2650, -2147483648, 1143618576, 1940664389, -857256778, -2147483648, 1514755203, -2147483648, 173132058, -1445877829, -1856983402, 56637997, 1023000882, 1376997733, -2147483648, -2147483648, -2147483648, -2147483648, -1590111234, -2147483648, 737597977, -2147483648, -2147483648, 1663125272, 295153354, -2147483648, -2147483648, -2147483648, -1687732669, -2147483648, 1786030619, 230005612, 2104074796, -2147483648, -2147483648, 934427007, 153778402, 70306583, 584691339, 354721333, -686408492, 718488564, 434393559, 476101311, 1066104249, 525885217, 590928848, 596214531, 805381686, 793018231, 1006693449, 645943096, -775533879, 720421983, -698561704, 219436460, 426109956, 93448837, -422680950, 391970837, -199293944, 583586003, 286562913, 829982738, -157014002, 678152644, 738289778 };
		for (int ndx = 0; ndx < 100; ndx++)
			Util.Check("Fixed32.Max", Fixed32.Max(input0[ndx], input1[ndx]), output0[ndx], input0[ndx], input1[ndx]);
	}

	// Fixed64.Ceil()
	public static void Fixed64_Ceil()
	{
		long[] input0 = new long[]{ -3075830515L, 3445349051L, -307113438L, 1367245466L, 1646362490L, 3749470231L, 1773479314L, 1034439062L, -641154886L, 3591078983L, -403684770L, 908296138L, -2841057047L, 2305047251L, -1306456014L, 571755022L, -1903204898L, 2602537511L, -1555352518L, 3271590551L, 785223350L, -4004506891L, 1279808850L, -2037827254L, -3089423467L, 3265888059L, -671526762L, -3320489599L, 1795209574L, -2610997939L, -2699784527L, 176702642L, -2743160875L, -1785841474L, 114457861453298L, 323447637150617L, -197496727091966L, -249013983515956L, -191455598689153L, -104786605848795L, -172513891080333L, -244771842313980L, 143849612266985L, -191772871889301L, -241071453512257L, 279624093930210L, -314463405146433L, 355780339565673L, -378568705976284L, 347733602361926L, -224174509104389L, 50671152223595L, 328305512352879L, 373598732373970L, 125114770258261L, -336629091956755L, -212942709499159L, -256425347919407L, 16170163807529L, 267544172724585L, 12602969805868L, 79900161837206L, 353419678364573L, -232512424308272L, 199589621492941L, 371457988372973L, -64351028229965L, 323975172350862L, -3365642307933721600L, -264103004499906560L, -1877163778120486400L, -3981469429383956992L, 238506193404735488L, 4066776580957941760L, 753511388485911552L, -1140341221657844736L, -1232693966436487680L, -1178356196255775232L, -4211301350067345408L, -1707998017118277120L, 2271559685814118400L, 70477340311077888L, -4112184048974222336L, 2805516497112163328L, 4215203791714046976L, 1168737101595828224L, 1276265439012087808L, -2345246386751535616L, 1350743719602396160L, 231823262943753216L, 1147761473449841664L, -3978944770296781312L, 1764292917997342720L, -316786499306317824L, 3351225047607141376L, 1901410762598275072L, -1811346526719861760L, -570529422060673536L, 409463243533019136L, -1965298783408114176L };
		long[] output0 = new long[]{ 0L, 4294967296L, 0L, 4294967296L, 4294967296L, 4294967296L, 4294967296L, 4294967296L, 0L, 4294967296L, 0L, 4294967296L, 0L, 4294967296L, 0L, 4294967296L, 0L, 4294967296L, 0L, 4294967296L, 4294967296L, 0L, 4294967296L, 0L, 0L, 4294967296L, 0L, 0L, 4294967296L, 0L, 0L, 4294967296L, 0L, 0L, 114460878438400L, 323449692094464L, -197495481171968L, -249013613887488L, -191452462186496L, -104784317120512L, -172511656411136L, -244770186199040L, 143851339644928L, -191770289766400L, -241067924389888L, 279628140773376L, -314460325543936L, 355782205898752L, -378567007404032L, 347737732153344L, -224171523047424L, 50672024158208L, 328307300106240L, 373602025209856L, 125116692299776L, -336626651758592L, -212940183568384L, -256422432473088L, 16170551869440L, 267546397769728L, 12605729013760L, 79903571574784L, 353419973885952L, -232512349536256L, 199591425212416L, 371458836529152L, -64347200028672L, 323977973071872L, -3365642304218988544L, -264103002229440512L, -1877163775098880000L, -3981469425382457344L, 238506195441156096L, 4066776581211684864L, 753511390282514432L, -1140341218979348480L, -1232693963714985984L, -1178356193559576576L, -4211301345958821888L, -1707998014175444992L, 2271559686903824384L, 70477342425743360L, -4112184044911853568L, 2805516497953226752L, 4215203791898673152L, 1168737103199076352L, 1276265440565264384L, -2345246383511961600L, 1350743721120890880L, 231823264983285760L, 1147761475062857728L, -3978944766296457216L, 1764292919323262976L, -316786497011318784L, 3351225048194088960L, 1901410763860344832L, -1811346523728904192L, -570529419647516672L, 409463245489831936L, -1965298780345466880L };
		for (int ndx = 0; ndx < 100; ndx++)
			Util.Check("Fixed64.Ceil", Fixed64.Ceil(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed32.Ceil()
	public static void Fixed32_Ceil()
	{
		int[] input0 = new int[]{ -13049, -31881, 36580, 11524, 14200, -43162, -61193, 57839, -19237, -30239, 31688, 49788, -44817, -38796, -56992, -64614, 5093, -51477, -29844, -51689, -26992, -42027, -35296, 14412, 45472, -35667, -16116, -57644, -55367, 49223, -56000, 56126, 42971, 33618, -2147483648, -137319949, -2147483648, -442577920, -2147483648, -2147483648, 1226632578, -2147483648, -2147483648, -1610099954, -2147483648, -2147483648, -2147483648, -166737252, -1304500321, -2147483648, -2147483648, -2147483648, -2147483648, -802738351, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -1566806571, -2147483648, -2147483648, -2147483648, -292476712, -2147483648, -2147483648, -2147483648, -1289959512, -451771877, 162470228, -475719278, -917778817, 883524028, -30082819, 25884760, 208231135, -457714477, 759242177, 701344063, -853958699, -392247720, 837012333, 343018487, -598567420, 447220021, 808306558, 563438510, -238172370, 566134824, 415101414, -78442303, 127625328, 483693210, 677262367, 1057979079, 259114306, 715968883, -182940306, -685861485, 1008930962 };
		int[] output0 = new int[]{ 0, 0, 65536, 65536, 65536, 0, 0, 65536, 0, 0, 65536, 65536, 0, 0, 0, 0, 65536, 0, 0, 0, 0, 0, 0, 65536, 65536, 0, 0, 0, 0, 65536, 0, 65536, 65536, 65536, -2147483648, -137297920, -2147483648, -442564608, -2147483648, -2147483648, 1226637312, -2147483648, -2147483648, -1610088448, -2147483648, -2147483648, -2147483648, -166723584, -1304494080, -2147483648, -2147483648, -2147483648, -2147483648, -802684928, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -1566769152, -2147483648, -2147483648, -2147483648, -292421632, -2147483648, -2147483648, -2147483648, -1289945088, -451739648, 162529280, -475660288, -917766144, 883556352, -30081024, 25886720, 208273408, -457703424, 759300096, 701366272, -853934080, -392232960, 837025792, 343080960, -598540288, 447283200, 808321024, 563478528, -238157824, 566165504, 415105024, -78381056, 127664128, 483721216, 677314560, 1058013184, 259129344, 715980800, -182910976, -685834240, 1008992256 };
		for (int ndx = 0; ndx < 100; ndx++)
			Util.Check("Fixed32.Ceil", Fixed32.Ceil(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed64.Floor()
	public static void Fixed64_Floor()
	{
		long[] input0 = new long[]{ 1654158818L, 76847538L, -2597152711L, 2790169051L, 668588798L, -3481796711L, -1847432666L, 1544855742L, 3665345647L, -894249438L, 3729938511L, -2813193499L, -1352607894L, 1191014090L, -3752798767L, 3469396115L, -1604645250L, 1223434674L, 2314409671L, -1544975398L, -3855320455L, 1399464202L, 1185040130L, 827474126L, -3331317167L, 1881588866L, -1310920818L, -3469920651L, -57280302L, 3362049111L, 2264016303L, 3195870611L, 1485447358L, 3064619699L, -77502632236090L, 264912887523359L, 165023475076845L, 287687219533964L, 123210881457374L, 97570950245435L, 78569160636586L, -358606899566989L, -32306783415044L, -113617855852907L, 222543444303629L, -179554301083611L, -243185808713242L, -355120854365366L, 216688094300903L, -353244709164492L, -165386481877014L, -265452643523611L, 124879639858151L, 309649675144191L, 359607701167455L, -404027267988139L, 318677470348395L, 87034045840528L, 182651892285053L, 308196722743515L, 212409140298910L, -267247931124447L, -269283125125394L, -399167075985876L, 113670155452931L, -376089939575130L, -367356200171L, -12226029805693L, -2500666199405775872L, -2262331446063191040L, -2658376376386119168L, -200306698421748736L, 4602372231517819904L, -3174267657580611584L, 2109151377250479104L, 4322579464517699584L, -2762131327333048320L, -2119296429310771712L, 3110637558146951168L, 2962661074144000000L, 19842381697055744L, -2206195390254675456L, -1440783607311196672L, -880254091038462976L, 774110554158294016L, 669559032806473728L, -2521031001597607936L, 2881834904901692416L, 4041038074596641792L, -1105654438693971456L, 4034393206135855104L, -3774280898418171904L, -3483877779780562944L, 2625415672059835392L, 3378620341898611712L, -898503269648711680L, 3652579293472564224L, -672553621445593088L, 2171199580098743296L, 1816090996705336320L };
		long[] output0 = new long[]{ 0L, 0L, -4294967296L, 0L, 0L, -4294967296L, -4294967296L, 0L, 0L, -4294967296L, 0L, -4294967296L, -4294967296L, 0L, -4294967296L, 0L, -4294967296L, 0L, 0L, -4294967296L, -4294967296L, 0L, 0L, 0L, -4294967296L, 0L, -4294967296L, -4294967296L, -4294967296L, 0L, 0L, 0L, 0L, 0L, -77502684856320L, 264909287849984L, 165021233446912L, 287685499420672L, 123209726820352L, 97568772063232L, 78567836745728L, -358608294379520L, -32311038967808L, -113619064848384L, 222539435474944L, -179555402776576L, -243189638234112L, -355125075902464L, 216685395050496L, -353248175194112L, -165390600634368L, -265454748696576L, 124876174131200L, 309645667205120L, 359604726792192L, -404027573534720L, 318673688461312L, 87033217286144L, 182647779229696L, 308193968259072L, 212407607623680L, -267250045026304L, -269285859524608L, -399169965522944L, 113666309488640L, -376093106241536L, -369367187456L, -12227771891712L, -2500666200388796416L, -2262331447157194752L, -2658376377295699968L, -200306700475957248L, 4602372227227189248L, -3174267658249961472L, 2109151374120845312L, 4322579460357357568L, -2762131328194314240L, -2119296430471380992L, 3110637554550964224L, 2962661070616920064L, 19842379540332544L, -2206195391374819328L, -1440783608787763200L, -880254092776046592L, 774110551650336768L, 669559030347202560L, -2521031002571145216L, 2881834901412249600L, 4041038070567403520L, -1105654440326594560L, 4034393202109710336L, -3774280898808119296L, -3483877780305739776L, 2625415668689797120L, 3378620338177835008L, -898503271377797120L, 3652579289624215552L, -672553623279894528L, 2171199576940216320L, 1816090993712168960L };
		for (int ndx = 0; ndx < 100; ndx++)
			Util.Check("Fixed64.Floor", Fixed64.Floor(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed32.Floor()
	public static void Fixed32_Floor()
	{
		int[] input0 = new int[]{ 38194, 30294, 46885, -322, 49412, 43146, -40372, -1371, -48260, 58980, 43138, 13207, 34611, 51304, -18790, -1773, 45231, 36955, -6372, -57706, 43975, 24526, 6243, 45711, -23945, -49678, -18873, -37441, -27586, -22794, -56014, 35841, 4564, -47139, -2147483648, -2147483648, -1270138413, -2147483648, 361390158, -2147483648, -1564849179, -2147483648, -2147483648, -2147483648, 668512698, -2141116092, -2147483648, -2147483648, -943570993, -1574990201, 753553213, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -351579660, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, 1621490995, 776549446, 183852530, -894691426, 1071257643, -527467849, 422263973, 384666417, -862496073, -1059828226, 127753875, -434330606, 1032213654, 631918388, -804982727, 614890739, 879816911, 576812008, 984790144, 639402669, 771284432, -474683104, 913835142, 187976238, -227330548, 356517622, 583187221, -469073686, -208367571, 79749131, 805155412, -835790168, -10029246 };
		int[] output0 = new int[]{ 0, 0, 0, -65536, 0, 0, -65536, -65536, -65536, 0, 0, 0, 0, 0, -65536, -65536, 0, 0, -65536, -65536, 0, 0, 0, 0, -65536, -65536, -65536, -65536, -65536, -65536, -65536, 0, 0, -65536, -2147483648, -2147483648, -1270153216, -2147483648, 361365504, -2147483648, -1564868608, -2147483648, -2147483648, -2147483648, 668467200, -2141126656, -2147483648, -2147483648, -943587328, -1575026688, 753532928, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -351600640, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, 1621426176, 776536064, 183828480, -894697472, 1071251456, -527499264, 422248448, 384630784, -862519296, -1059848192, 127729664, -434372608, 1032192000, 631898112, -805044224, 614858752, 879755264, 576782336, 984743936, 639369216, 771227648, -474742784, 913833984, 187957248, -227344384, 356515840, 583139328, -469106688, -208404480, 79691776, 805109760, -835846144, -10092544 };
		for (int ndx = 0; ndx < 100; ndx++)
			Util.Check("Fixed32.Floor", Fixed32.Floor(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed64.Round()
	public static void Fixed64_Round()
	{
		long[] input0 = new long[]{ -1969626350L, 1743900474L, -1123170298L, 2941178487L, -1748387166L, 503785354L, 3089664399L, -1897770166L, 4265262695L, 2259389855L, -3454899667L, 1065156990L, 1814246710L, -2580666107L, 3966352803L, -1305447630L, -2651632231L, -1801286190L, -3976148243L, 3597148903L, -2079377210L, -2518713223L, -1333574538L, 3745824511L, 4278472463L, 1625523782L, -1436007210L, -147652990L, -729616654L, -1922831338L, 525986474L, -3164967263L, -440791118L, 2597761855L, 180351367483982L, -351119421563502L, 219820668302362L, 381335176777573L, 97268751845294L, -249150461516019L, -344547111560442L, 16041355007469L, 311484233145046L, 13684502206372L, 281527294331096L, 398171525985413L, 157139839073173L, -28823069813421L, 266136337923929L, 372412017973417L, -247680535115335L, -217468457901266L, 290180259935125L, -264534228323183L, -225570707105039L, -374588042374431L, -121749228256693L, -57402751426730L, 295767331937727L, 92105634642890L, -235517473109671L, -105764990649250L, 312681378345603L, 189312673888155L, -256156391519282L, 400503489186498L, -278901918729873L, 351145215163514L, -95791177485820928L, 3417268957316982784L, 849665845043215360L, -2330037692800952832L, 1633154428084438016L, 3017562060566368256L, 2950269646812670976L, 2206729001286746112L, -1437298198399196672L, 3032835037292500992L, -3612513880011731968L, -4293045396770909184L, -4553569321269530112L, 3379270372314261504L, 1595527658400704512L, -170477493407141888L, -4016860952056923136L, -1711862555678573568L, -1902458519870621696L, -2244567229390429184L, 599686559182424064L, 1346930523081180160L, 2148842321102532608L, -1635022214873057280L, -3692908280486539264L, -4556247469603034624L, 4465302920047354880L, 2047782517969674240L, 1426538021122484224L, -3299878889653210112L, -1714291484239644160L, 3334188853661194240L };
		long[] output0 = new long[]{ 0L, 0L, 0L, 4294967296L, 0L, 0L, 4294967296L, 0L, 4294967296L, 4294967296L, -4294967296L, 0L, 0L, -4294967296L, 4294967296L, 0L, -4294967296L, 0L, -4294967296L, 4294967296L, 0L, -4294967296L, 0L, 4294967296L, 4294967296L, 0L, 0L, 0L, 0L, 0L, 0L, -4294967296L, 0L, 4294967296L, 180349971726336L, -351117871415296L, 219820721176576L, 381337261309952L, 97268124352512L, -249151052840960L, -344546571452416L, 16041702850560L, 311483913207808L, 13683765805056L, 281526516318208L, 398173533110272L, 157139968458752L, -28823525523456L, 266137648496640L, 372412319268864L, -247682174025728L, -217467079098368L, 290180875419648L, -264535625695232L, -225571682385920L, -374589867687936L, -121749437939712L, -57402237911040L, 295768627871744L, 92105573662720L, -235518826643456L, -105763569664000L, 312682209083392L, 189313568473088L, -256156144500736L, 400501405384704L, -278902291300352L, 351143641219072L, -95791179588698112L, 3417268957873176576L, 849665846795042816L, -2330037693863428096L, 1633154429471424512L, 3017562061308690432L, 2950269647586328576L, 2206729002406641664L, -1437298199877386240L, 3032835038027710464L, -3612513880477007872L, -4293045396919287808L, -4553569321296592896L, 3379270372888150016L, 1595527659805212672L, -170477495475240960L, -4016860952333910016L, -1711862557028909056L, -1902458521132204032L, -2244567230492704768L, 599686561050656768L, 1346930524601450496L, 2148842322249383936L, -1635022216259174400L, -3692908280914378752L, -4556247469628850176L, 4465302920115519488L, 2047782519163584512L, 1426538022605684736L, -3299878890264068096L, -1714291485588848640L, 3334188854256074752L };
		for (int ndx = 0; ndx < 100; ndx++)
			Util.Check("Fixed64.Round", Fixed64.Round(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed32.Round()
	public static void Fixed32_Round()
	{
		int[] input0 = new int[]{ 37777, 35933, 62499, 57582, -20784, 60854, 9144, -64140, -16754, -242, 28803, 3859, -22958, 40602, 13228, -18423, 26723, -15401, 20433, 50776, 22611, 54876, -20477, 45033, -47510, -30226, -46168, 22420, 44962, -52710, -54448, -39067, 1924, -33182, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -1244048740, 1634320578, -2147483648, -2147483648, -179194845, -960221384, -2147483648, -2147483648, -912532022, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -1133004428, 233477304, -2147483648, -2147483648, 136239691, -281812049, -64659979, 1009791621, -553193633, 119597516, -767162398, -237453908, -1000295482, -479108678, 896144083, 931985892, -490691799, 768627452, -502576274, -604845519, -902560070, 670906432, 463025144, -884884452, -949497240, -264603214, 648054034, 550396979, 927424493, -927584462, -464535960, 742863801, -825768543, 236536481, 329235930, -196565003 };
		int[] output0 = new int[]{ 65536, 65536, 65536, 65536, 0, 65536, 0, -65536, 0, 0, 0, 0, 0, 65536, 0, 0, 0, 0, 0, 65536, 0, 65536, 0, 65536, -65536, 0, -65536, 0, 65536, -65536, -65536, -65536, 0, -65536, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -1244069888, 1634336768, -2147483648, -2147483648, -179175424, -960233472, -2147483648, -2147483648, -912523264, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -1132986368, 233504768, -2147483648, -2147483648, 136249344, -281804800, -64684032, 1009778688, -553189376, 119603200, -767164416, -237436928, -1000275968, -479133696, 896139264, 931987456, -490668032, 768606208, -502595584, -604831744, -902561792, 670892032, 463011840, -884867072, -949485568, -264634368, 648085504, 550371328, 927399936, -927596544, -464519168, 742850560, -825753600, 236519424, 329252864, -196542464 };
		for (int ndx = 0; ndx < 100; ndx++)
			Util.Check("Fixed32.Round", Fixed32.Round(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed64.Fract()
	public static void Fixed64_Fract()
	{
		long[] input0 = new long[]{ -2673417691L, 3606738583L, 1944770862L, -3983018879L, -2965259043L, -3883386863L, -4039209019L, 3699140095L, -1855608386L, 2573150819L, 2880584843L, -2976569567L, -2439955259L, 3159460315L, 2581528315L, 3939363987L, 1140231814L, 3859174755L, -2623261359L, 868815782L, 2595878403L, 3666326291L, -4121870931L, -2691595671L, 575502958L, 1834739458L, -3965498783L, -2797403979L, -1958433386L, -1745137506L, -1941708754L, -652360562L, 1061588858L, 75869054L, 210639396698086L, -127453848659350L, -316522834747392L, -232225351508138L, -374909033174580L, -402182071587280L, 242786745513056L, 244792777913990L, 261103787121586L, -207617248696679L, 35596959416576L, 127381841059316L, 34657588216138L, -374472963574377L, -199689887092987L, -150254053469967L, -246374390314727L, -286728163533518L, -72556001033786L, -384683935579132L, 91282887842506L, -204477668695217L, 343364221959891L, 34139923815897L, -26355454212272L, -50503120623517L, -421285537596176L, 305316225542174L, 136260618663451L, 418449641594855L, 21989227810239L, -76202189035484L, 25680887011958L, 177914298282847L, -3480964636606316032L, -471265817201511424L, 3016811914463001600L, -893870705036187136L, 3557626414146417664L, -3109994343844403200L, 2937667031644332032L, -4452825245477714432L, -3478578704962865664L, 2415134038790017024L, 1339387731577203712L, 3861875510920366080L, -3013782545178703872L, 4374636950660557824L, 3752150203241897984L, 4122174795744399360L, -3840088275688978432L, -3617859705548468224L, -4533088709579474944L, 658698645352764416L, 3713007249972428800L, -154400468738053120L, -443684520761266688L, 846473318541200384L, 2401174828135833600L, 1128404055837756416L, -4406564114056250880L, 3940280839025025024L, -3446330832064063488L, 2922197770617714688L, 2146305249559866368L, -3411251802621765632L };
		long[] output0 = new long[]{ 1621549605L, 3606738583L, 1944770862L, 311948417L, 1329708253L, 411580433L, 255758277L, 3699140095L, 2439358910L, 2573150819L, 2880584843L, 1318397729L, 1855012037L, 3159460315L, 2581528315L, 3939363987L, 1140231814L, 3859174755L, 1671705937L, 868815782L, 2595878403L, 3666326291L, 173096365L, 1603371625L, 575502958L, 1834739458L, 329468513L, 1497563317L, 2336533910L, 2549829790L, 2353258542L, 3642606734L, 1061588858L, 75869054L, 1315600358L, 3600816746L, 3370065920L, 3530186582L, 2957060556L, 2960977456L, 834204768L, 1116878470L, 4135263154L, 1470391961L, 270467328L, 1700994548L, 1497104714L, 939996567L, 322367237L, 1082413297L, 2113653017L, 3853147442L, 3176464838L, 3400221700L, 1947900618L, 1429300047L, 3061481171L, 3523747289L, 2760083280L, 1399810147L, 3509501168L, 4180338718L, 2781197851L, 3862847463L, 3290222015L, 3415697444L, 1277549174L, 3867980639L, 526533120L, 1928033280L, 3552295936L, 1731242496L, 3804132352L, 699279360L, 3515441152L, 73975296L, 527644160L, 3272118272L, 2771184640L, 3945809920L, 744081408L, 4184583168L, 3894714368L, 4067020800L, 359303168L, 462786560L, 36599808L, 2454213632L, 3876487168L, 2075585536L, 1940876800L, 2541652992L, 3265617920L, 2672937984L, 95517184L, 3982319616L, 542660608L, 3508238336L, 3146935296L, 558995456L };
		for (int ndx = 0; ndx < 100; ndx++)
			Util.Check("Fixed64.Fract", Fixed64.Fract(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed32.Fract()
	public static void Fixed32_Fract()
	{
		int[] input0 = new int[]{ -50017, 43676, 57863, 41762, -262, 40644, -28772, -32411, -34908, 11671, -47303, -47463, 51711, 6633, -30413, -60914, 58802, 27748, 52885, -10767, -12744, 60093, 39918, 18262, 65144, -34693, 18710, -31014, -47110, 51288, 51232, -25424, -61715, 1974, -2147483648, -2096918668, -2147483648, -2147483648, -669394797, -2147483648, -2147483648, -2147483648, -2126645957, -2147483648, -2042692307, -2147483648, -2147483648, -2147483648, -1908667514, -2147483648, -2147483648, -1118739999, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2066087052, -2147483648, -2147483648, -2147483648, -1579915372, 537521475, 919002282, -1068536441, 774043523, -509443420, 279005421, 194525420, 315606785, 259266661, -19256602, -439851368, 392974923, 81735706, -143822601, 878313490, -743899047, 886301322, -51048380, -230459765, 460187620, 617791254, 301495178, -405133501, 495437804, -501290683, -673794565, -845646828, 666054866, 308498895, 1063819852, 247719998, 23786486 };
		int[] output0 = new int[]{ 15519, 43676, 57863, 41762, 65274, 40644, 36764, 33125, 30628, 11671, 18233, 18073, 51711, 6633, 35123, 4622, 58802, 27748, 52885, 54769, 52792, 60093, 39918, 18262, 65144, 30843, 18710, 34522, 18426, 51288, 51232, 40112, 3821, 1974, 0, 36724, 0, 0, 55443, 0, 0, 0, 62779, 0, 64813, 0, 0, 0, 2950, 0, 0, 25057, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 884, 0, 0, 0, 26516, 60739, 56490, 28039, 63363, 33444, 18669, 14572, 50945, 6245, 10982, 26264, 21067, 12314, 28919, 18, 89, 57994, 4164, 30347, 59364, 48918, 29578, 10051, 51180, 59717, 46587, 29716, 12498, 20943, 39500, 59454, 62454 };
		for (int ndx = 0; ndx < 100; ndx++)
			Util.Check("Fixed32.Fract", Fixed32.Fract(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed64.CeilToInt()
	public static void Fixed64_CeilToInt()
	{
		long[] input0 = new long[]{ -2531593827L, -1565211454L, -348578490L, -631906178L, 4162299359L, -3280168963L, -2990371059L, -1860402954L, 1926481450L, -3604181615L, 336594942L, 323323798L, -4235253499L, -3104210987L, 1929540862L, 2012778758L, -3366288419L, 3938919423L, -604268806L, -2388524551L, -512005714L, -906743434L, 788388938L, -3350862107L, 1001575842L, -1960929690L, 806369534L, -3637562715L, 203641706L, 2408849511L, -4266535735L, 1076754530L, 3227060891L, 2440415875L, -19147377408916L, -240281301511889L, 406825537989442L, -14980715406975L, -284292825532384L, 253040695917831L, -150878975870258L, -335640340356294L, 420923632796007L, 178037933882905L, -342558152359516L, 235110949109482L, 192203742289501L, -319591904348821L, -32975183015355L, -110039877851241L, 173554059080817L, 159004345474042L, 56458092226290L, -91556275042634L, -368781563571727L, 267011690324337L, 194136690290401L, -129268367860195L, 266148527523935L, 182826175485135L, 20842879809705L, -364777563969862L, 223092263503885L, 381259923577538L, -363261317569156L, 355480770765533L, 139123020264784L, -238070207910860L, 1484158250125464576L, 40143536768498688L, 2404634802251494400L, 1158015557549962240L, 2670267478681936896L, 1245853544374096896L, 3667077977789179904L, -1557537255310686208L, -881555423180084224L, 3546544436444903424L, -4531456656365973504L, 3162635296999727104L, 442381827115012096L, -314261380657640960L, 1059951124740270080L, -3211483209915364864L, -3888726070214463488L, -1676768004224460800L, -4061743794112719872L, -163577752996956672L, 1968452461930918912L, 1539076425006959616L, -52841650534708736L, 1144578464595359744L, 1593083757583633408L, -403966063348701696L, -2118480952459834880L, -2314967417056449536L, -1387659633543604736L, -4185800183598933504L, 1200470437412330496L, -2883449846965478400L };
		int[] output0 = new int[]{ 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, -4458, -55944, 94722, -3487, -66192, 58916, -35129, -78147, 98004, 41453, -79758, 54742, 44751, -74410, -7677, -25620, 40409, 37022, 13146, -21317, -85863, 62169, 45201, -30097, 61968, 42568, 4853, -84931, 51943, 88769, -84578, 82767, 32393, -55430, 345557521, 9346646, 559872669, 269621508, 621720096, 290072883, 853808126, -362642401, -205253116, 825744224, -1055061969, 736358412, 103000046, -73169679, 246789103, -747731702, -905414593, -390402973, -945698421, -38085913, 458316054, 358344155, -12303155, 266492941, 370918717, -94055678, -493247283, -538995353, -323089685, -974582550, 279506305, -671355483 };
		for (int ndx = 0; ndx < 100; ndx++)
			Util.Check("Fixed64.CeilToInt", Fixed64.CeilToInt(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed32.CeilToInt()
	public static void Fixed32_CeilToInt()
	{
		int[] input0 = new int[]{ -50889, 118, -4321, 59933, 14573, -55510, 51851, 56446, -546, 31398, -12265, 44759, -20864, 61203, -43925, -57889, -5187, 14143, 47901, 33935, 46426, -41982, 1235, 64755, -64214, -47629, 59353, -21848, -17725, 19473, 63121, -18579, -32196, 42116, -2147483648, -2147483648, -2147483648, 2066489902, 532474734, -2147483648, -1014366098, -2147483648, -2147483648, -2147483648, -2147483648, 2002559464, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -354057760, -2147483648, -333314621, -2147483648, 816386825, 863610873, -2147483648, -2147483648, -2147483648, 1141976358, 255466995, -567375682, -820733424, -946090722, 650176929, -929261946, 780758988, -351556578, 483687470, -658719435, 76364513, 501651553, -306449541, 758777837, -543203018, -983586801, -745639318, 773065820, -558484316, -692490907, -251018705, -25434301, 642312231, -954377630, 55634601, 452008109, -931890895, 812244564, 773791264, 135477048, -774852102, -610097295, -617891095 };
		int[] output0 = new int[]{ 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, -32768, -32768, -32768, 31533, 8125, -32768, -15477, -32768, -32768, -32768, -32768, 30557, -32768, -32768, -32768, -32768, -32768, -32768, -32768, -32768, -32768, -32768, -32768, -5402, -32768, -5085, -32768, 12458, 13178, -32768, -32768, -32768, 17426, 3899, -8657, -12523, -14436, 9921, -14179, 11914, -5364, 7381, -10051, 1166, 7655, -4676, 11579, -8288, -15008, -11377, 11797, -8521, -10566, -3830, -388, 9801, -14562, 849, 6898, -14219, 12394, 11808, 2068, -11823, -9309, -9428 };
		for (int ndx = 0; ndx < 100; ndx++)
			Util.Check("Fixed32.CeilToInt", Fixed32.CeilToInt(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed64.FloorToInt()
	public static void Fixed64_FloorToInt()
	{
		long[] input0 = new long[]{ -3730975551L, 2265952007L, -257841326L, -2804517883L, -2984701055L, 4173210211L, 1497806894L, -1570721882L, 300285518L, 927128674L, 2051183174L, -378686850L, 2056325786L, 772060550L, 1041414874L, 3235055471L, 174407182L, -746433998L, 4185596727L, 154902102L, 3183775263L, -2542486847L, -4025807239L, -543784362L, -3760390471L, 288065998L, -3502292015L, -4284451499L, 4169024991L, -206424078L, -2902125607L, -3830436627L, -1549120058L, 183203302L, -178978991083343L, -352580795164183L, 237999654710827L, 316513797147388L, -429282351599900L, 321402036749664L, 56322313426227L, 309572554744156L, 299060695539261L, 326610141552089L, -377690154375875L, 85614362239867L, 246117991514607L, -325899540751758L, -47401116222072L, -428104450799351L, -137420941863991L, -300662510340006L, -299003784339234L, 169967601079147L, -136037235063347L, 310647859144656L, 199679195092982L, -400902425986684L, -333909470755488L, 102220024247599L, 338053493157418L, 148729109869257L, -144477957867277L, -378825769976404L, -46571301421686L, 158665250673884L, -312453408745497L, -242184481112775L, -1860920031410823680L, 292332149512414208L, -3693573489316621312L, 1400413285531944960L, -803779269129875968L, -3568463844999919104L, 4173254648545984512L, -4517143355722841088L, -1329428213514250240L, -3217941281658427392L, -1140152878751892992L, -345279720383142912L, 2278322717415207936L, 4350448274658806784L, 520256859902354432L, 4461507019359447040L, -3357786056831434752L, -4499480538933017600L, 3709314694787646464L, 1123317800944642048L, -2954284281595130880L, -645642254004490240L, -1318160474182129664L, 2248472836428028928L, 2372180642073369600L, -1095277286600894976L, 4432892366672205824L, 3619475596800027648L, 263644237567971328L, 2667064481049650176L, -604680785811244032L, -1147386290876492800L };
		int[] output0 = new int[]{ -1, 0, -1, -1, -1, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, 0, 0, -1, 0, 0, 0, -1, -1, -1, -1, 0, -1, -1, 0, -1, -1, -1, -1, 0, -41672, -82092, 55413, 73694, -99951, 74832, 13113, 72077, 69630, 76044, -87938, 19933, 57303, -75880, -11037, -99676, -31996, -70004, -69618, 39573, -31674, 72328, 46491, -93343, -77745, 23799, 78709, 34628, -33639, -88203, -10844, 36942, -72749, -56388, -433279209, 68063882, -859977093, 326059126, -187144445, -830847734, 971661565, -1051729395, -309531627, -749235340, -265462529, -80391700, 530463344, 1012917671, 121131739, 1038775550, -781795489, -1047616950, 863642127, 261542806, -687847911, -150325302, -306908152, 523513377, 552316345, -255014116, 1032113182, 842724832, 61384457, 620974339, -140788217, -267146689 };
		for (int ndx = 0; ndx < 100; ndx++)
			Util.Check("Fixed64.FloorToInt", Fixed64.FloorToInt(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed32.FloorToInt()
	public static void Fixed32_FloorToInt()
	{
		int[] input0 = new int[]{ -4795, 8973, 42252, 54148, 52701, 24666, 31080, -60449, 32165, -22101, 757, 10662, 20565, 19492, 48756, 55295, -50235, -19911, 55448, -8700, 37033, 1896, -60507, 48265, -42649, -18905, 51726, -61393, -48170, -57666, -2403, 8742, 28399, -65433, -2147483648, -2147483648, -2147483648, 1878042069, -2147483648, -684716842, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, 121454885, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, 1219679642, -2147483648, 394455868, -2147483648, -2147483648, 607083816, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, 2046289841, 321179149, 415379552, 585312393, -57007377, -501546382, -53084928, -733189832, 900200791, 296521949, -665612721, 953522668, -217170134, -496313736, 614528105, 47970502, -915374390, -463097064, -426985107, 430734405, 463529789, -198148152, -965923234, 318821337, -654580596, 869237119, 75853148, 331170254, 149276383, 981488312, -663518981, 1070732917, 1041833478 };
		int[] output0 = new int[]{ -1, 0, 0, 0, 0, 0, 0, -1, 0, -1, 0, 0, 0, 0, 0, 0, -1, -1, 0, -1, 0, 0, -1, 0, -1, -1, 0, -1, -1, -1, -1, 0, 0, -1, -32768, -32768, -32768, 28656, -32768, -10448, -32768, -32768, -32768, -32768, -32768, -32768, -32768, -32768, 1853, -32768, -32768, -32768, -32768, -32768, 18610, -32768, 6018, -32768, -32768, 9263, -32768, -32768, -32768, -32768, -32768, -32768, -32768, 31223, 4900, 6338, 8931, -870, -7653, -811, -11188, 13735, 4524, -10157, 14549, -3314, -7574, 9376, 731, -13968, -7067, -6516, 6572, 7072, -3024, -14739, 4864, -9989, 13263, 1157, 5053, 2277, 14976, -10125, 16338, 15897 };
		for (int ndx = 0; ndx < 100; ndx++)
			Util.Check("Fixed32.FloorToInt", Fixed32.FloorToInt(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed64.RoundToInt()
	public static void Fixed64_RoundToInt()
	{
		long[] input0 = new long[]{ 3530981463L, -594796150L, -352890602L, 2713045759L, -1836628382L, -1698802594L, 3556637847L, -937654478L, 2939818975L, 1493493378L, -1624639366L, -1374005810L, -4208153619L, -1377474290L, -1911853898L, -4231529471L, -2721408019L, 2856759731L, -850328926L, 417006478L, -2246243251L, -3016531947L, -2161318175L, 853442242L, -3908734435L, 664604666L, 589989306L, 1985369170L, 2757946563L, 765102430L, 3969817211L, -454803570L, -2650415263L, 3941724055L, -10469470604875L, 290450849935251L, -148396427069102L, 177380354682599L, 247009811515023L, 414138163192848L, -96961098245151L, -163437519476106L, 320926747949443L, 200888130693545L, 205591372295735L, -164567613476632L, -270513606325967L, 55945547426051L, -207970080296843L, 126124319458731L, -97645374245469L, -322577377550211L, 249122029516006L, -42904210219978L, 211860987098655L, 225254611504892L, -272844527127053L, 308863445143825L, 232681289908350L, 179373424683527L, 200617539493419L, -272369861926832L, 59936625427910L, -212025075098731L, 181864346284687L, 312513149945525L, -301855784340562L, -385491037979508L, 3245049345716877312L, -559843728106843648L, 1661510347646680064L, -215010647815470592L, -4196511269399429632L, -748122381347961344L, -3122816857043432448L, 3954697695624679424L, -2073215214069421056L, 133968420243236864L, 3320542097582972928L, 2181745670435519488L, -993454461052709888L, -4578900565946731520L, -246850369971943936L, -3004613013335773184L, -2741704316834872320L, 3114520973088522240L, 1448416979675488256L, 2226504748713657344L, -2654132068227399168L, 2080617959574712320L, 1436652037749082112L, -298104473891776512L, 4017896747845345280L, -3885445844775190528L, -2319025778900970496L, -2728248759815856128L, 2213224400590596096L, 1110840607411339264L, -4407419688721881600L, 3463622172837315584L };
		int[] output0 = new int[]{ 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, -1, 0, 0, -1, -1, 1, 0, 0, -1, -1, -1, 0, -1, 0, 0, 0, 1, 0, 1, 0, -1, 1, -2438, 67626, -34551, 41300, 57511, 96424, -22576, -38053, 74722, 46773, 47868, -38316, -62984, 13026, -48422, 29366, -22735, -75106, 58003, -9989, 49328, 52446, -63527, 71913, 54175, 41764, 46710, -63416, 13955, -49366, 42344, 72763, -70281, -89754, 755546928, -130348776, 386850524, -50061068, -977076420, -174185816, -727087459, 920774810, -482708033, 31191954, 773123954, 507977249, -231306642, -1066108366, -57474331, -699565982, -638352781, 725155923, 337235858, 518398534, -617963278, 484431619, 334496619, -69407857, 935489486, -904650857, -539940265, -635219915, 515306462, 258637734, -1026182363, 806437380 };
		for (int ndx = 0; ndx < 100; ndx++)
			Util.Check("Fixed64.RoundToInt", Fixed64.RoundToInt(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed32.RoundToInt()
	public static void Fixed32_RoundToInt()
	{
		int[] input0 = new int[]{ -44587, -47991, 27957, 41758, 61169, 53691, -55121, -16891, -27704, 41663, -1702, 21999, 65477, -61036, -24047, 30145, 27483, -13692, -58926, 49026, -38433, -12164, 44432, -48988, 37164, -37688, 5382, 61115, -43212, 59928, -40788, 20287, -998, 63502, 1005595834, -2147483648, -2147483648, 2026990323, -2147483648, -2147483648, -2147483648, -2147483648, -619069821, -1384527194, -2147483648, -2147483648, -417739962, -2147483648, -2147483648, 243476370, -71835879, -2039191184, 917649173, -2147483648, -2147483648, -2147483648, -2147483648, 1141012302, -2147483648, -2147483648, -1722678458, -2147483648, -2147483648, -2147483648, 1691596274, -2147483648, -2147483648, -2147483648, -91030845, -948993223, -129406126, -955552418, -670049845, 552590505, -825018003, 903802048, 975874052, -118923381, 832528251, 634838363, 524700895, 300169584, -635518150, 325863280, -80097953, 739569431, -891693406, -334422025, -395703788, 695982047, 995525530, 436373061, 256833125, -100228151, 911685049, 311464407, -890991471, -813122876, 569749754, -201119622 };
		int[] output0 = new int[]{ -1, -1, 0, 1, 1, 1, -1, 0, 0, 1, 0, 0, 1, -1, 0, 0, 0, 0, -1, 1, -1, 0, 1, -1, 1, -1, 0, 1, -1, 1, -1, 0, 0, 1, 15344, -32768, -32768, 30929, -32768, -32768, -32768, -32768, -9446, -21126, -32768, -32768, -6374, -32768, -32768, 3715, -1096, -31116, 14002, -32768, -32768, -32768, -32768, 17410, -32768, -32768, -26286, -32768, -32768, -32768, 25812, -32768, -32768, -32768, -1389, -14480, -1975, -14581, -10224, 8432, -12589, 13791, 14891, -1815, 12703, 9687, 8006, 4580, -9697, 4972, -1222, 11285, -13606, -5103, -6038, 10620, 15191, 6659, 3919, -1529, 13911, 4753, -13595, -12407, 8694, -3069 };
		for (int ndx = 0; ndx < 100; ndx++)
			Util.Check("Fixed32.RoundToInt", Fixed32.RoundToInt(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed64.Abs()
	public static void Fixed64_Abs()
	{
		long[] input0 = new long[]{ 2683975319L, -403162402L, -483789874L, 1753375950L, -3617778115L, -519835982L, -2951172247L, 2685995835L, -4017644503L, 2129320550L, 2561537475L, 3008525111L, 1712628110L, -2238277579L, -4209996003L, 1965314402L, 3514306759L, 421492638L, 3167169723L, 2445294103L, 2125600346L, 2844912343L, 1712207494L, 1146915722L, -3483107723L, 2031850542L, -554574882L, 2015680518L, 2858589119L, -250962350L, 2884206787L, 2861020423L, 1540274750L, -160375798L, 415034543193265L, -179300131083493L, -261049908321560L, -48125800022L, 62626394229162L, -409552312790712L, 161448267875180L, -195780216691167L, -161501089475204L, 58283159027140L, -407257657989644L, -332139028354664L, -426210315998469L, -102935721447933L, -48588389822625L, -261354149921702L, 202651816694367L, 30950877014412L, -212469393498938L, 412867221192256L, 136488845863557L, 413403027192505L, 217959739901495L, 266426169924064L, 94151637843842L, -135466136263081L, -426022839598382L, -67188547031287L, 412237401191963L, 52828514224600L, 354008105964847L, 399548434786054L, -282671693531629L, -242196338712781L, -2248045706225210368L, 2016457728032492544L, 301556300454473728L, -837711121396812800L, 4391814504865183744L, 3186571050967233536L, -3719609044206184960L, -227165955024624640L, 177120094125196288L, -3399027874720091136L, 992701166738313216L, 4438043239348318208L, 2146395310729138176L, -4101892371025342976L, -1925651678287270912L, 1263969493098761216L, 2166259933914346496L, -1847125073191017472L, 741684010619894784L, 1832415407195822080L, 2973945993345312768L, -4594167748761978368L, 346140633693125632L, -1052045245290855424L, 3600223758074060800L, -2484683668312210432L, -4434835083460306432L, -2156716911715182080L, -1916853442072285184L, 2310339422289130496L, 1436363579155414016L, -4051328438285528064L };
		long[] output0 = new long[]{ 2683975319L, 403162402L, 483789874L, 1753375950L, 3617778115L, 519835982L, 2951172247L, 2685995835L, 4017644503L, 2129320550L, 2561537475L, 3008525111L, 1712628110L, 2238277579L, 4209996003L, 1965314402L, 3514306759L, 421492638L, 3167169723L, 2445294103L, 2125600346L, 2844912343L, 1712207494L, 1146915722L, 3483107723L, 2031850542L, 554574882L, 2015680518L, 2858589119L, 250962350L, 2884206787L, 2861020423L, 1540274750L, 160375798L, 415034543193265L, 179300131083493L, 261049908321560L, 48125800022L, 62626394229162L, 409552312790712L, 161448267875180L, 195780216691167L, 161501089475204L, 58283159027140L, 407257657989644L, 332139028354664L, 426210315998469L, 102935721447933L, 48588389822625L, 261354149921702L, 202651816694367L, 30950877014412L, 212469393498938L, 412867221192256L, 136488845863557L, 413403027192505L, 217959739901495L, 266426169924064L, 94151637843842L, 135466136263081L, 426022839598382L, 67188547031287L, 412237401191963L, 52828514224600L, 354008105964847L, 399548434786054L, 282671693531629L, 242196338712781L, 2248045706225210368L, 2016457728032492544L, 301556300454473728L, 837711121396812800L, 4391814504865183744L, 3186571050967233536L, 3719609044206184960L, 227165955024624640L, 177120094125196288L, 3399027874720091136L, 992701166738313216L, 4438043239348318208L, 2146395310729138176L, 4101892371025342976L, 1925651678287270912L, 1263969493098761216L, 2166259933914346496L, 1847125073191017472L, 741684010619894784L, 1832415407195822080L, 2973945993345312768L, 4594167748761978368L, 346140633693125632L, 1052045245290855424L, 3600223758074060800L, 2484683668312210432L, 4434835083460306432L, 2156716911715182080L, 1916853442072285184L, 2310339422289130496L, 1436363579155414016L, 4051328438285528064L };
		for (int ndx = 0; ndx < 100; ndx++)
			Util.Check("Fixed64.Abs", Fixed64.Abs(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed32.Abs()
	public static void Fixed32_Abs()
	{
		int[] input0 = new int[]{ 57987, 37457, -49296, 29466, 21371, -22709, 7847, -12168, 50321, -41481, -4972, 16025, -38989, 16834, 14363, 58821, -48423, -20595, 42812, 14730, -15109, -3636, -13682, -32195, -41799, -46300, 2469, 32184, 42770, 43325, -41524, 35221, -3179, 6143, -2147483648, -2147483648, -2147483648, 870443149, -2147483648, -1204239908, -2147483648, -2147483648, -2147483648, 1820754697, 522168161, -2147483648, -2147483648, -2147483648, 1586312528, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -391164969, -1439576175, -2147483648, 572977871, 213531387, -2147483648, -2147483648, 1059714987, -2147483648, -2147483648, -2147483648, -2147483648, 2040230332, 192569477, 349290160, -1036373639, 137765946, -281585080, -174997742, 799983098, -619607316, 338242869, 551254591, 460697073, -502877592, 995042463, -521979370, -806325596, 549567896, 418639957, -571467729, 740586594, -145169176, 796378740, 147327445, 121899881, -940946385, -1025005112, -90839053, 215219385, 913852138, 198426110, 561306531, 297610164, 744088267 };
		int[] output0 = new int[]{ 57987, 37457, 49296, 29466, 21371, 22709, 7847, 12168, 50321, 41481, 4972, 16025, 38989, 16834, 14363, 58821, 48423, 20595, 42812, 14730, 15109, 3636, 13682, 32195, 41799, 46300, 2469, 32184, 42770, 43325, 41524, 35221, 3179, 6143, -2147483648, -2147483648, -2147483648, 870443149, -2147483648, 1204239908, -2147483648, -2147483648, -2147483648, 1820754697, 522168161, -2147483648, -2147483648, -2147483648, 1586312528, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, 391164969, 1439576175, -2147483648, 572977871, 213531387, -2147483648, -2147483648, 1059714987, -2147483648, -2147483648, -2147483648, -2147483648, 2040230332, 192569477, 349290160, 1036373639, 137765946, 281585080, 174997742, 799983098, 619607316, 338242869, 551254591, 460697073, 502877592, 995042463, 521979370, 806325596, 549567896, 418639957, 571467729, 740586594, 145169176, 796378740, 147327445, 121899881, 940946385, 1025005112, 90839053, 215219385, 913852138, 198426110, 561306531, 297610164, 744088267 };
		for (int ndx = 0; ndx < 100; ndx++)
			Util.Check("Fixed32.Abs", Fixed32.Abs(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed64.Nabs()
	public static void Fixed64_Nabs()
	{
		long[] input0 = new long[]{ 2308550971L, 238351766L, 1479457930L, 3937412431L, -3839691331L, 613786954L, 690888046L, 45896570L, -2827597611L, -304434354L, 2685641943L, 1146508286L, -2963486215L, -1907950146L, 454737370L, 437829274L, 1630311774L, 2791190523L, -1216109614L, 2288680059L, 2993443267L, 1839240122L, 2446537683L, -4113999167L, -3385406179L, 3913258279L, 356116942L, 3531983187L, 2734098783L, 3839491135L, 1022833586L, 3402712647L, -3280389587L, 3161402519L, -2509404601168L, -55314920625758L, 72759188233881L, -286774752333539L, 174299562281164L, -323419441950603L, 131820833061383L, -137851748664192L, -204804639095369L, -80501797837486L, 219863513502381L, 363605853569317L, 349466796762733L, 210289699097923L, 347687371161904L, -387191902780300L, -226987051505699L, 229748121506984L, -83363155438819L, 319672789548859L, 427787709999204L, -382565644778146L, 208678137897173L, 129848980260465L, 302785131540995L, -345798231561024L, -403729728388001L, 145387215467701L, 160676508274820L, -237212145110460L, 296769935538194L, 357789659166608L, 13193057806143L, -182992143885212L, 2589984674342433792L, -3529476047424090112L, 4300555787041589248L, 218068376768837632L, -3486195314069792768L, -2444783958984702976L, -3569649934579000320L, 82671096067483648L, -437743906678266880L, -1120354711595686400L, -2166453452255892480L, -2927554312097859072L, -4162228093102483456L, 2736095222687670272L, -4552512669119908864L, 2481471595414023168L, 1948191104026459136L, 3243043548744070144L, -62946067909394944L, -2343065922048654336L, 3412880565890316288L, -530863212925288960L, 1777082136609876992L, 3998689044203332608L, -1718665032259328512L, 972821519757496320L, -3749360883974852608L, 4466018096526981120L, 1406263267215022080L, -4263713072228040704L, 560761627042935808L, 3130715306199420928L };
		long[] output0 = new long[]{ -2308550971L, -238351766L, -1479457930L, -3937412431L, -3839691331L, -613786954L, -690888046L, -45896570L, -2827597611L, -304434354L, -2685641943L, -1146508286L, -2963486215L, -1907950146L, -454737370L, -437829274L, -1630311774L, -2791190523L, -1216109614L, -2288680059L, -2993443267L, -1839240122L, -2446537683L, -4113999167L, -3385406179L, -3913258279L, -356116942L, -3531983187L, -2734098783L, -3839491135L, -1022833586L, -3402712647L, -3280389587L, -3161402519L, -2509404601168L, -55314920625758L, -72759188233881L, -286774752333539L, -174299562281164L, -323419441950603L, -131820833061383L, -137851748664192L, -204804639095369L, -80501797837486L, -219863513502381L, -363605853569317L, -349466796762733L, -210289699097923L, -347687371161904L, -387191902780300L, -226987051505699L, -229748121506984L, -83363155438819L, -319672789548859L, -427787709999204L, -382565644778146L, -208678137897173L, -129848980260465L, -302785131540995L, -345798231561024L, -403729728388001L, -145387215467701L, -160676508274820L, -237212145110460L, -296769935538194L, -357789659166608L, -13193057806143L, -182992143885212L, -2589984674342433792L, -3529476047424090112L, -4300555787041589248L, -218068376768837632L, -3486195314069792768L, -2444783958984702976L, -3569649934579000320L, -82671096067483648L, -437743906678266880L, -1120354711595686400L, -2166453452255892480L, -2927554312097859072L, -4162228093102483456L, -2736095222687670272L, -4552512669119908864L, -2481471595414023168L, -1948191104026459136L, -3243043548744070144L, -62946067909394944L, -2343065922048654336L, -3412880565890316288L, -530863212925288960L, -1777082136609876992L, -3998689044203332608L, -1718665032259328512L, -972821519757496320L, -3749360883974852608L, -4466018096526981120L, -1406263267215022080L, -4263713072228040704L, -560761627042935808L, -3130715306199420928L };
		for (int ndx = 0; ndx < 100; ndx++)
			Util.Check("Fixed64.Nabs", Fixed64.Nabs(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed32.Nabs()
	public static void Fixed32_Nabs()
	{
		int[] input0 = new int[]{ -12067, 15710, 60817, 37673, -54659, 27801, 19062, -43513, 33969, -1435, 13381, -17773, -14935, 22268, -59151, -34950, 21343, 54789, 1654, 64733, -10047, -30225, -10886, -21186, -9874, -61246, -38013, 2169, -46996, -48657, 46726, -11165, 41645, -9741, -2147483648, -932360532, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -173094265, -1560044748, -2147483648, -2147483648, 622425180, 1884390738, 744042929, -2147483648, -2147483648, -2147483648, 329015457, 877182425, -1099874643, -2147483648, -2147483648, 1646784976, -1798751871, -2147483648, 27894949, -2147483648, -2147483648, 1709168418, 1737377341, -2147483648, 611705496, -2147483648, 848759879, 257356616, -213237847, -120581739, -575631267, 29015478, 617828407, -862885218, 606879955, -996505806, -4263670, -866740281, -31694313, 142192307, 987383894, -469659539, 660140513, -811665356, 836896970, -535132967, -1053139749, 292315505, -588525191, -629200711, 764979915, 291641018, -6472914, -907758999, -432535756, 765351905, 533492188, 328705824 };
		int[] output0 = new int[]{ -12067, -15710, -60817, -37673, -54659, -27801, -19062, -43513, -33969, -1435, -13381, -17773, -14935, -22268, -59151, -34950, -21343, -54789, -1654, -64733, -10047, -30225, -10886, -21186, -9874, -61246, -38013, -2169, -46996, -48657, -46726, -11165, -41645, -9741, -2147483648, -932360532, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -173094265, -1560044748, -2147483648, -2147483648, -622425180, -1884390738, -744042929, -2147483648, -2147483648, -2147483648, -329015457, -877182425, -1099874643, -2147483648, -2147483648, -1646784976, -1798751871, -2147483648, -27894949, -2147483648, -2147483648, -1709168418, -1737377341, -2147483648, -611705496, -2147483648, -848759879, -257356616, -213237847, -120581739, -575631267, -29015478, -617828407, -862885218, -606879955, -996505806, -4263670, -866740281, -31694313, -142192307, -987383894, -469659539, -660140513, -811665356, -836896970, -535132967, -1053139749, -292315505, -588525191, -629200711, -764979915, -291641018, -6472914, -907758999, -432535756, -765351905, -533492188, -328705824 };
		for (int ndx = 0; ndx < 100; ndx++)
			Util.Check("Fixed32.Nabs", Fixed32.Nabs(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed64.Sign()
	public static void Fixed64_Sign()
	{
		long[] input0 = new long[]{ 2418923679L, 748317502L, 2134882090L, 3753156803L, -348395806L, 3242867751L, 21527934L, -4195405639L, 2398523939L, -1564240266L, -1237472630L, -2860842395L, -3198675611L, -2006836194L, 558452818L, 3744479299L, -2842433523L, 2106907154L, 2774525855L, 90301746L, -1738840410L, -1753548110L, 3872154063L, -2069189798L, -911440062L, -2631115839L, 752720674L, 825878150L, -4153013723L, 1807382334L, 2573569447L, 3661079495L, -1825024686L, 2963089315L, -159091751074082L, 341987253959250L, 272885443527072L, -409858851990855L, 276472494328742L, 369266159971952L, 102677793447813L, 324802622751248L, -24408851411366L, 164664856276678L, -188823264287927L, -378822566776403L, -361309453168247L, 77178856235939L, -368685603971682L, 52459633824428L, 350636481963277L, 45791711421323L, -400808552786641L, -225130028704834L, -124130358657802L, -12249550605704L, 117113073454535L, -9089540604232L, 36962957017212L, -201224726293702L, -180482021884043L, 349061707962544L, 425257537998026L, -370382569172472L, 15715758207318L, -60358483028106L, 325914958751766L, -186679763086929L, 4165096731825589248L, 1539259987614308352L, -3521167123948463616L, -3262899861167557632L, 3905359546551713792L, 3625845269526163456L, 3606152367723462656L, -742921261849429504L, 2990916117809314816L, -2222067682422603264L, 4417384751587616768L, -1522760995293093376L, -3557294426059184128L, 4591212029576906752L, 233825422079257600L, -410859541696566784L, 2787417466263686144L, -2340021623458028544L, 3623017222538990592L, -4153976077943555584L, -97253515066542080L, 3034979896716481536L, -2197117890971006464L, -1584002680592204800L, -186026623645633536L, 517548831481358336L, 1291190136840025088L, 1966158880674310144L, 3533059579158979584L, -896821510778670080L, -3012357255985894912L, 3232305932930575360L };
		int[] output0 = new int[]{ 1, 1, 1, 1, -1, 1, 1, -1, 1, -1, -1, -1, -1, -1, 1, 1, -1, 1, 1, 1, -1, -1, 1, -1, -1, -1, 1, 1, -1, 1, 1, 1, -1, 1, -1, 1, 1, -1, 1, 1, 1, 1, -1, 1, -1, -1, -1, 1, -1, 1, 1, 1, -1, -1, -1, -1, 1, -1, 1, -1, -1, 1, 1, -1, 1, -1, 1, -1, 1, 1, -1, -1, 1, 1, 1, -1, 1, -1, 1, -1, -1, 1, 1, -1, 1, -1, 1, -1, -1, 1, -1, -1, -1, 1, 1, 1, 1, -1, -1, 1 };
		for (int ndx = 0; ndx < 100; ndx++)
			Util.Check("Fixed64.Sign", Fixed64.Sign(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed32.Sign()
	public static void Fixed32_Sign()
	{
		int[] input0 = new int[]{ -41998, 38889, 18122, -12595, -7492, 34335, 17024, -47148, -20062, 57152, 21163, -16088, 1374, -38256, -45688, -27248, -15596, 5191, -30591, -29884, 4839, 43226, 38432, -49476, -12438, 38007, 21811, -17392, -32358, -42230, 4770, -10287, -54305, -48695, -2147483648, -2147483648, -1841392722, -2147483648, -2147483648, -2147483648, 1525752915, -2147483648, -2147483648, 700118789, -2147483648, -2147483648, -2147483648, -2147483648, -1249292648, -1993866642, -2147483648, -2052001957, -2147483648, -2147483648, -2147483648, -1968863907, -2147483648, 206304818, -2147483648, 2003626175, -2147483648, -2147483648, -2147483648, -2147483648, -1315390097, -2147483648, -2147483648, -1546674967, -960345575, 716858260, 928997524, -516330080, 57966272, -587654548, 334138778, 610742954, -800798251, -558763271, 976972353, 44164123, 1014030380, -226124862, 993470256, 870254367, 742271247, -659379370, -460960641, -677992802, 676380801, 656135229, -399154509, 738247058, -810380498, -301177672, 954984562, -313910042, 784619932, 72079864, -743520847, 918338731 };
		int[] output0 = new int[]{ -1, 1, 1, -1, -1, 1, 1, -1, -1, 1, 1, -1, 1, -1, -1, -1, -1, 1, -1, -1, 1, 1, 1, -1, -1, 1, 1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 1, -1, 1, -1, 1, 1, -1, -1, 1, 1, 1, -1, 1, 1, 1, -1, -1, -1, 1, 1, -1, 1, -1, -1, 1, -1, 1, 1, -1, 1 };
		for (int ndx = 0; ndx < 100; ndx++)
			Util.Check("Fixed32.Sign", Fixed32.Sign(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed64.Rcp()
	public static void Fixed64_Rcp()
	{
		long[] input0 = new long[]{ -116670726766L, -135933526L, 12175L, 45154491665L, -56332945L, -22L, 1730398329053145L, 95619155553222224L, -38692L, -7507125463L, 14329L, 179136807010769L, -29290209936L, -843032359L, 5057392562120L, 12039236467999L, -396667L, -2119933572886929152L, 1089844L, 7205L, -655591329265792256L, -100L, 38285790781L, 41206L, -5003895410L, -45L, 359L, 1322L, -180603L, -428761L, 142130894790703984L, 119575930722L, -40L, -3L, 205428040159741504L, 10270197354L, -1910L, -20488757L, 1395019478L, 267983321289867L, -10640279L, -10209835L, 327867764851008384L, 216225L, -75544225249L, -18773194337L, 191134L, 1063894328396L, -4724073546114L, -35574L, 10L, 30805493542020064L, -8337L, -474425332807514112L, 1447012378042236416L, 1160342672L, -16373770308381450L, -1362628910285678080L, 9L, 1238634L, -290526413974610688L, -1308617698836L, 529442366486L, 416172958094630400L, -243581844665L, -552637155754L, 4440684397498L, 9060152526L, -18925364522L, -492L, 6301033731L, 89283432869039408L, -1519644424L, -18754983138L, 3122922893720212L, 64211745721L, -1414L, -177064L, 2515496870188L, 1229220455803407616L, -1097335004529418L, -1557988638L, 1290851780L, 5L, -42356L, -4L, 14342664L, 392L, -10L, -177040838L, 2892609622254L, 6466L, -2270507L, -1126L, 4253847073857541L, 37497298178558L, -88932349067816L, -3633160582991654400L, 4093752168858L, 630406847838107392L };
		long[] output0 = new long[]{ -158109448L, -135704160384L, 1515132966404096L, 408525119L, -327459251712L, -838488366205894656L, 10660L, 192L, -476758600581120L, -2457231348L, 1287371347722240L, 102975L, -629792146L, -21881418848L, 3647481L, 1532218L, -46504358117376L, -9L, 16926039916544L, 2560269830062080L, -29L, -184467440908894208L, 481816952L, 447671319920640L, -3686476628L, -409927642586808320L, 51383688025341952L, 13953663915524096L, -102139744092160L, -43023372451840L, 129L, 154268035L, -461168601735364608L, -6148914694099828736L, 89L, 1796143130L, -9657981155147776L, -900334964736L, 13223287584L, 68835L, -1733671104512L, -1806762254336L, 56L, 85312725450752L, -244184704L, -982610868L, 96512103022592L, 17338887L, -3904839L, -518545709989888L, 1844674406941458432L, 598L, -2212635799977984L, -39L, 12L, 15897670176L, -1127L, -14L, 2049638228503298048L, 14892812386304L, -64L, -14096359L, 34841835L, 44L, -75731195L, -33379488L, 4154032L, 2036030126L, -974710104L, -37493382209077248L, 2927574272L, 206L, -12138855344L, -983564992L, 5906L, 287279902L, -13045788024242176L, -104181222998016L, 7333240L, 15L, -16811L, -11840101920L, 14290366160L, 3689348813882916864L, -435516661039104L, -4611686018427387904L, 1286144901120L, 47058020370219008L, -1844674406941458432L, -104194853760L, 6377197L, 2852883426967552L, -8124504842240L, -16382543704096768L, 4336L, 491948L, -207425L, -6L, 4506072L, 29L };
		for (int ndx = 0; ndx < 100; ndx++)
			Util.Check("Fixed64.Rcp", Fixed64.Rcp(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed64.RcpFast()
	public static void Fixed64_RcpFast()
	{
		long[] input0 = new long[]{ -19496111432380740L, -97289073781401L, 56L, 9593316524L, -26036641862742L, -522L, 20271514L, 2050014686780L, -151L, -22535010L, 820445L, 92473608168L, -541693L, -33L, 5205513884L, 186475309L, -1013L, -104286843050L, 9825551262250L, 52794003399L, -38530L, -11324606702L, 879348543L, 106L, -785086990L, -974411L, 39323122425L, 1349288L, -20332675813821L, -83L, 3329771596804828L, 1795L, -199466089797L, -18401896783686L, 63L, 11L, -27714691L, -620536505189977600L, 899215L, 81L, -1049624260370L, -32265069824491L, 2L, 2108513678087L, -215L, -31L, 55052264267486552L, 67065L, -997776525849L, -22811851L, 36988231299L, 852L, -369766L, -77L, 16361031919389L, 1721570L, -110637L, -2425175527773140992L, 12L, 26720368L, -61319683643L, -15L, 464967039024538048L, 1L, -31210667407L, -457L, 2138003739358219776L, 135753475925L, -2476285056899593216L, -461517788L, 6L, 7534L, -115975L, -121290884762L, 231958593686964896L, 5507282468L, -4387356824L, -1923288155710134L, 2284581631783893248L, 25098383L, -81625729L, -586337L, 6236361324567L, 891320L, -10383827182L, -3904668790946L, 22389471942279592L, 2572362221L, -1L, -168894941059736L, 470145058032285L, 52701939L, -50782764881401896L, -155196250989046304L, 6092402495L, 69863846156L, -320014880421106L, -1L, 67L, 2177437759414814976L };
		long[] output0 = new long[]{ -947L, -189610L, 329407573016969216L, 1922867060L, -708494L, -35338889744875520L, 909974992896L, 8998412L, -122162576481058816L, -818588700672L, 22483643367424L, 199482952L, -34054227820544L, -558998015499567104L, 3543661020L, 98924297088L, -18209851297497088L, -176884229L, 1877418L, 349408069L, -478758100795392L, -1628917972L, 20977529376L, 174024365099188224L, -23496555520L, -18931326124032L, 469102849L, 13671485505536L, -907238L, -222250602682384384L, 5539L, 10276786722045952L, -92481206L, -1002448L, 292802438094651392L, 1676994258025840640L, -665588377600L, -30L, 20514251112448L, 227737148256681984L, -17574583L, -571731L, -9223372036854775808L, 8748661L, -85798270978228224L, -595051452745908224L, 335L, 275060248543232L, -18488047L, -808655376384L, 498721889L, 21650934232776704L, -49888112214016L, -239565763067772928L, 1127489L, 10714965835776L, -166731279761408L, -8L, 1537228673524957184L, 690355675136L, -300831717L, -1229789653142339584L, 39L, 0L, -591045959L, -40365222426312704L, 8L, 135882846L, -8L, -39969715200L, 3074457347049914368L, 2448490487611392L, -159059061506048L, -152087799L, 79L, 3349520980L, -4204560876L, -9592L, 8L, 734977817600L, -225989824256L, -31460860657664L, 2957962L, 20695911333888L, -1776471366L, -4724316L, 823L, 7171057696L, 0L, -109220L, 39235L, 350017169408L, -364L, -119L, 3027856316L, 264040517L, -57643L, 0L, 275327343327707136L, 8L };
		for (int ndx = 0; ndx < 100; ndx++)
			Util.Check("Fixed64.RcpFast", Fixed64.RcpFast(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed64.RcpFastest()
	public static void Fixed64_RcpFastest()
	{
		long[] input0 = new long[]{ -67L, -405531L, 124899L, 2161L, -3390386L, -4909471L, 33909734200868600L, 14059155521253L, -1541L, -2970L, 1809596070037610L, 265288481L, -1L, -2245251350809L, 1509645897253409280L, 104580L, -11109891L, -521660756333L, 810116735L, 36861973759357880L, -94135L, -831144121L, 120697718223L, 14661L, -4527060522308L, -588768305198L, 684182L, 3446228L, -19L, -3320152L, 79364614312974L, 3100474118L, -28468919875303L, -1L, 371982L, 201L, -4L, -2884605531L, 1212395979977904384L, 2115L, -531030599152759L, -1592L, 1668575L, 1745976080778327L, -430422264484758848L, -1772203L, 49646667L, 22617L, -474095535980112256L, -58255L, 6288L, 613L, -8055397464L, -8451L, 23130874019688L, 374374868613L, -15494761607647L, -8L, 2202359783L, 26556115720176L, -7L, -9839664522L, 706186902223L, 2141351541458716L, -172625981L, -583651L, 42974134167789L, 1L, -6035906L, -7500189584287141L, 22277L, 17761642728523884L, -1984282079513L, -383023L, 69L, 59L, -498L, -318801606572491L, 157090L, 2554481L, -11859L, -30L, 33522620L, 1576024009645811L, -527L, -129373373744L, 1775010259255970816L, 3368344303L, -209184L, -4582215476361L, 59907015L, 2541399487002288128L, -1L, -45654L, 294L, 53968L, -10399792843L, -3593500155L, 10114213L, 737464627067L };
		long[] output0 = new long[]{ -275419251064438784L, -45495518756864L, 147638549741568L, 8539342695825408L, -5442798731264L, -3757733314560L, 543L, 1312492L, -11970847904366592L, -6209923125870592L, 10197L, 69519209344L, 0L, -8217571L, 12L, 176443160788992L, -1659750078464L, -35349041L, 22771229152L, 500L, -195917148061696L, -22198212576L, 152867484L, 1258327143088128L, -4075838L, -31343221L, 26951842332672L, 5354775789568L, -970896746890657792L, -5557533155328L, 232494L, 5948473040L, -648189L, 0L, 49576966946816L, 91796998918766592L, -4611686018427387904L, -6392413664L, 15L, 8724316384395264L, -34727L, -11589390820179968L, 11058676547584L, 10567L, -43L, -10412819922944L, 371532726784L, 815325346004992L, -39L, -316698206404608L, 2934016642646016L, 30091709979295744L, -2289325304L, -2183388307914752L, 797192L, 49254881L, -1190752L, -2305843009213693952L, 8377883672L, 694657L, -2635879665016766464L, -1875118926L, 26112918L, 8611L, -106823665408L, -31616052035584L, 429195L, 0L, -3055517016064L, -2461L, 827748470751232L, 1038L, -9296616L, -48154164527104L, 267447782099386368L, 312606976825622528L, -37028090618052608L, -57878L, 117423869526016L, 7220467793920L, -1555216845504512L, -614715360288964608L, 550265266176L, 11700L, -35012448574504960L, -142540801L, 10L, 5477794808L, -88211495452672L, -4027036L, 307955149824L, 7L, 0L, -403921470226432L, 62756151405576192L, 341940094631936L, -1773605000L, -5135345584L, 1823723200512L, 25004027L };
		for (int ndx = 0; ndx < 100; ndx++)
			Util.Check("Fixed64.RcpFastest", Fixed64.RcpFastest(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed32.Rcp()
	public static void Fixed32_Rcp()
	{
		int[] input0 = new int[]{ -377371, -7913, 78708522, 13, -3, -1610, 38261, 210, -18, -528858, 28359, 260974295, -10854719, -47, 47257, 547806850, -28, -29147347, 1578898, 48558359, -1556, -166, 3504608, 1907311, -12263, -285, 70271008, 7476, -57, -47731766, 149348, 665331, -6433, -813422, 5650997, 21836822, -134, -952, 16379395, 25022940, -16, -6530744, 6052, 1250907, -117, -35742, 149, 51596702, -6869029, -56, 22, 3570371, -40095154, -83592, 914, 4532, -2424413, -82, 1217929, 11788155, -24614, -10, 7, 425, -7, -45767593, 81132, 26, -8972, -2323694, 8149934, 32174382, -3, -67751017, 5895433, 255854, -29542810, -5, 32357, 368408652, -3, -2, 1168705, 2, -4164926, -44914627, 17817471, 82635704, -1779, -2493, 18, 3, -839300, -2, 2033, 3, -1775894, -28, 353254, 2765 };
		int[] output0 = new int[]{ -11382, -542774, 54, 330382100, -1431655766, -2667682, 112254, 20452225, -238609294, -8122, 151449, 16, -396, -91382284, 90885, 7, -153391690, -148, 2720, 88, -2760262, -25873297, 1225, 2251, -350238, -15070060, 61, 574500, -75350304, -90, 28758, 6455, -667647, -5281, 760, 196, -32051994, -4511521, 262, 171, -268435456, -658, 709677, 3433, -36709123, -120166, 28825282, 83, -626, -76695845, 195225786, 1202, -108, -51381, 4699088, 947697, -1772, -52377650, 3526, 364, -174493, -429496730, 613566757, 10105805, -613566757, -94, 52938, 165191050, -478708, -1849, 526, 133, -1431655766, -64, 728, 16786, -146, -858993459, 132736, 11, -1431655766, -2147483648, 3674, -2147483648, -1032, -96, 241, 51, -2414260, -1722811, 238609294, 1431655766, -5118, -2147483648, 2112625, 1431655766, -2419, -153391690, 12158, 1553333 };
		for (int ndx = 0; ndx < 100; ndx++)
			Util.Check("Fixed32.Rcp", Fixed32.Rcp(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed32.RcpFast()
	public static void Fixed32_RcpFast()
	{
		int[] input0 = new int[]{ -473032490, -11, 11501, 5, -7381, -764, 2006375, 635442032, -15224760, -3836653, 164727, 865351, -2738786, -3549703, 6179567, 18073, -9403, -7, 109619, 169, -5, -1054206, 16103887, 7, -257986, -5003582, 76, 2, -66645, -3662895, 154694570, 2075483, -17031, -23, 836254983, 365135465, -254292, -395356, 297103, 10889, -44, -30107174, 10, 498022, -16254361, -22352, 1277, 253878022, -482, -120789544, 367569, 493136, -278852, -4172, 1076, 897, -748, -3196, 24606, 1583933, -19, -1566617, 19069, 8, -26630381, -85221095, 101, 234103, -4557778, -18172051, 76314814, 25538341, -26029, -20, 7, 183, -194226, -64, 475, 23, -7835, -324, 5695806, 592440, -19, -627, 14, 8, -23333016, -1863688, 976227, 159, -32, -201405056, 1091, 30686, -3157, -2, 20080341, 204796571 };
		int[] output0 = new int[]{ -10, -390455653, 373446, 858989734, -581901, -5621692, 2140, 6, -283, -1120, 26073, 4963, -1569, -1210, 695, 237645, -456762, -613569418, 39180, 25414167, -858989734, -4075, 266, 613569418, -16648, -859, 56512134, -2147483648, -64446, -1173, 27, 2069, -252188, -186739199, 5, 11, -16890, -10864, 14456, 394434, -97613914, -143, 429494867, 8624, -265, -192154, 3363309, 16, -8910756, -36, 11684, 8709, -15403, -1029483, 3991644, 4788168, -5741966, -1343847, 174549, 2711, -226048540, -2742, 225230, 536870912, -162, -51, 42524034, 18346, -943, -237, 56, 168, -165006, -214747434, 613569418, 23469970, -22114, -67108864, 9042112, 186739198, -548176, -13256047, 754, 7249, -226048540, -6849975, 306784709, 536870912, -185, -2305, 4399, 27012224, -134217728, -22, 3936754, 139965, -1360451, -2147483648, 213, 20 };
		for (int ndx = 0; ndx < 100; ndx++)
			Util.Check("Fixed32.RcpFast", Fixed32.RcpFast(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed32.RcpFastest()
	public static void Fixed32_RcpFastest()
	{
		int[] input0 = new int[]{ -439, -5857830, 111, 28531, -3, -15454205, 37, 27701, -1103, -11, 4961201, 23, -13, -2131, 404, 66073768, -295330083, -34561072, 447858554, 84892, -11449896, -24, 10773002, 4, -37, -959316, 1589474, 138771, -19805248, -264643, 62302236, 148736, -3458, -2492, 56340543, 1436247, -5, -399, 374303, 1384, -33, -576995, 7943035, 3970391, -403354039, -84397, 23, 16184353, -996321, -17737, 111566, 98102, -6, -473, 35, 35, -583848201, -45, 1532, 3543, -19, -293173, 1501835, 4477145, -202, -66, 7183062, 5794152, -40630, -302253, 22700387, 1479354, -184, -646848, 5126, 39, -3365, -5, 13, 473643, -81091, -105452796, 149555259, 2233, -4, -1270, 47508, 14, -139, -3188464, 2641370, 137215637, -279703842, -211, 142, 121287, -412525007, -3, 39201, 12092516 };
		int[] output0 = new int[]{ -9786795, -733, 38704500, 150576, -1431655766, -278, 116098650, 155105, -3895408, -390310226, 865, 186697010, -330501700, -2016115, 10633908, 64, -15, -125, 9, 50575, -375, -178956971, 398, 1073741824, -116098651, -4477, 2702, 30961, -217, -16231, 68, 28883, -1242504, -1723307, 76, 2989, -858787934, -10766545, 11471, 3102106, -130186024, -7447, 540, 1081, -11, -50873, 186697010, 265, -4310, -242241, 38510, 43780, -715827883, -9078669, 122758925, 122758925, -8, -95414766, 2803463, 1212602, -226054515, -14655, 2859, 959, -21267818, -65093012, 598, 740, -105688, -14213, 189, 2902, -23337127, -6639, 837674, 110113944, -1276852, -858787934, 330501700, 9068, -52955, -41, 28, 1924131, -1073741824, -3381170, 90388, 306856779, -30910856, -1348, 1625, 31, -16, -20363124, 30256415, 35404, -11, -1431655766, 109560, 355 };
		for (int ndx = 0; ndx < 100; ndx++)
			Util.Check("Fixed32.RcpFastest", Fixed32.RcpFastest(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed64.Div()
	public static void Fixed64_Div()
	{
		long[] input0 = new long[]{ 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 2395924795115L, -1007624822469L, -1736404906808L, -3785242711762L, 1237631306576L, 3190423455485L, -1613364622751L, -638781354297L, 3276629931525L, 4250582587979L, 2347896835093L, 3608054171680L, -3759786947750L, 1844895478859L, 2957172987377L, -2331321439085L, 1630692310759L, -1512590506704L, 1584103134737L, 3510458343634L, 1488125362692L, 1305173034607L, 249903354116L, 2430609699131L, 3368600435568L, 3302217641080892416L, 1185196610282673152L, -1437857291472246784L, 765586873727833088L, -3656388323875501056L, -3440500233568401408L, 3261425420368991232L, 137388154810283008L, -3069694571197988352L, 2154437924757451776L, -3392356274382840832L, -1670559293987752448L, -4549858018552492032L, -4253487270487578624L, 2754108998435282944L, -624301759796604416L, -1272350065218852864L, 2268219691609926656L, 3486992455705334784L, 1836562425755308032L, 1308813478585412608L, 3202748805504362496L, 1096263870654016512L, 118589688537325568L, 3687407595608906752L, 4292472128794L, 4291056413086L, 4292133672368L, 4293629190699L, 4292139950538L, 4290718647490L, 4290713741238L, 4294242518895L, 4293606717201L, 4292845299879L, 4293646801199L, 4292995042653L, 4293546099367L, 4290913390130L, 4293500296209L, 4293297807353L, 4293735259451L, 4293126386797L, 4290905327236L, 4291663901472L, 4292542366782L, 4292334804744L, 4292962027887L, 4291395287988L, 4292422893816L };
		long[] input1 = new long[]{ -4396875775L, -4396875775L, -4396875775L, -4396875775L, -4396875775L, -4396875775L, -4396875775L, -4396875775L, -4396875775L, -4396875775L, -4396875775L, -4396875775L, -4396875775L, -4396875775L, -4396875775L, -4396875775L, -4396875775L, -4396875775L, -4396875775L, -4396875775L, -4396875775L, -4396875775L, -4396875775L, -4396875775L, -4396875775L, -717043655736641792L, -20357717406896776L, 4012094218346186752L, 26079469137439L, -174792180319469792L, -254161635028L, 5160124249272L, 469929525031236L, -3091554596611L, -154609720534718144L, 87842035551L, 853804255126062L, -174722796583530880L, -10005367455152328L, 152148662287L, 5166170662L, -20687476223L, -395615506277L, 385679983534L, 1248579074932689664L, -48640389282954336L, -150279368273078144L, 402216683815L, 13584788735285L, -3279713139581077504L, 900563647065940992L, -604759241978876416L, -1726564804265245696L, 3189384684044152832L, -3587370041937611776L, -3918576049985890304L, 192843295093308416L, 975219047812651008L, -596535607963853824L, 4469524228656193536L, 624722692361612288L, 4583194081545784320L, 4380881858881652736L, -2648871862863748608L, 1934449214422587392L, -1922747528774545920L, -3949438967729779712L, 1617888301831145472L, 4348538551809488896L, -4248687661711932928L, 1752477643349171200L, -3976215224089622016L, -2963706649572960256L, -759212510897408000L, 44764367530364928L, -4293120893307L, -4291410336886L, -4293452837585L, -4292706000696L, -4291573350676L, -4292943255831L, -4291770799190L, -4294516837485L, -4292136656648L, -4293644480205L, -4294905966097L, -4291448268344L, -4294612039409L, -4291074406978L, -4294854777971L, -4293069308991L, -4291383838216L, -4291925430940L, -4293708331391L, -4290746137968L, -4293896716609L, -4292401908150L, -4293332138875L, -4292016790906L, -4292510851632L };
		long[] output0 = new long[]{ -281738996L, -281738996L, -281738996L, -281738996L, -281738996L, -281738996L, -281738996L, -281738996L, -281738996L, -281738996L, -281738996L, -281738996L, -281738996L, -281738996L, -281738996L, -281738996L, -281738996L, -281738996L, -281738996L, -281738996L, -281738996L, -281738996L, -281738996L, -281738996L, -281738996L, -14352L, 212583L, -1859L, -623382841L, -30411L, -53913583044L, -1342864582L, -5838206L, -4552084671L, -118079L, 114798569570L, 18149915L, 92421L, -791952L, 83477308805L, -1938176320056L, -338551222443L, 16421314799L, 17640716168L, 12075L, -131403L, -37302L, 2668528649L, 768461644L, -4412L, 15748933281L, -8417201557L, 3576784372L, 1030973354L, 4377599201L, 3770970847L, 72637815904L, 605071890L, 22101341483L, 2070296513L, -23322444114L, -1565501569L, -4460629621L, 6896743090L, 6114819632L, 1394543788L, 1383665375L, 6021385615L, 3444034917L, -1856567536L, 3207636418L, -3459496183L, -1588692116L, -670877824L, 353792433415L, -4294318268L, -4294613087L, -4293647674L, -4295890979L, -4295534357L, -4292741646L, -4293909465L, -4294692960L, -4296438345L, -4294167882L, -4293708127L, -4296515349L, -4293901288L, -4294806143L, -4293612790L, -4295195914L, -4297320701L, -4296169115L, -4292163481L, -4295885973L, -4293612623L, -4294900162L, -4294597055L, -4294345381L, -4294879298L };
		for (int ndx = 0; ndx < 100; ndx++)
			Util.Check("Fixed64.Div", Fixed64.Div(input0[ndx], input1[ndx]), output0[ndx], input0[ndx], input1[ndx]);
	}

	// Fixed64.DivFast()
	public static void Fixed64_DivFast()
	{
		long[] input0 = new long[]{ 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 4096195087907L, -21320594009L, -3226163971502L, -2690217287252L, -3698386091722L, -4020319195872L, 483737694225L, -2818198535312L, -1882373530876L, 2333081759086L, 2911588503355L, -1183225398550L, -1221930898569L, -228234246106L, 4099055391908L, -542963278252L, 1251377630582L, -1476081858687L, -1167212854543L, 1483627518690L, -595889278277L, 2541407379183L, -191007658088L, -3603934175678L, 1484152258691L, -3642708234556080128L, -3924197629603027456L, -2258187927902053376L, 1294177677437808640L, 4588029166751311872L, -2942245428129294336L, -4429485920733979648L, -4206058350342690816L, 129490848115595264L, 2764339056488337408L, 4027463619997915136L, 2122083966166388736L, -4420056689398408192L, 1143827158850822144L, 961118597158873088L, -1970039340678379520L, -4354365357849026560L, -1731117735889097728L, -2393424641250971136L, 4113341546956000256L, -1794330957206879232L, 4034095994398832640L, -4088976953388690944L, 1882341180809598976L, -2367538744496906240L, 4291393613772L, 4292800918178L, 4293154073263L, 4294038347071L, 4291853170070L, 4291392505460L, 4290749060056L, 4293039211885L, 4292377448286L, 4293144296171L, 4290764949044L, 4294383180755L, 4291094868614L, 4290831660788L, 4292123520782L, 4293505608153L, 4293393279551L, 4292605187594L, 4290982519318L, 4292868519647L, 4294920176235L, 4292106238386L, 4291807532694L, 4291482272930L, 4294685976027L };
		long[] input1 = new long[]{ -4396875775L, -4396875775L, -4396875775L, -4396875775L, -4396875775L, -4396875775L, -4396875775L, -4396875775L, -4396875775L, -4396875775L, -4396875775L, -4396875775L, -4396875775L, -4396875775L, -4396875775L, -4396875775L, -4396875775L, -4396875775L, -4396875775L, -4396875775L, -4396875775L, -4396875775L, -4396875775L, -4396875775L, -4396875775L, -1172096551336L, -31170083956L, 124345356102810640L, 99519522459L, -3671947146893649L, -139556010235L, 419704767192674L, 4492545255336L, -11048262610L, -545115010343L, 8221212593L, 65918996201L, -10704440909912396L, -1215491336938L, 3923441205240500L, 32425211143959L, -5151410851L, -2401196669504909L, 3475337882597L, 70919596349L, -252078279978L, -84945138197672512L, 105492416531025456L, 16697113252146112L, -748932537159979L, -720480547343651328L, -3141146093844115456L, -3175107985112334336L, 4109916138737153024L, -212672197035499520L, -352072202574995456L, -2056957667629830144L, -3721113485351328256L, 652532485357077504L, 477697887212552192L, -3755165540868034048L, -1868850417943641088L, 1789709082767959040L, -4168949742693657600L, -4132766623187931648L, -4505900449891637760L, -3805985110061426176L, -2819930342939742208L, -260292930419916288L, 2060281976613449728L, 1838487696386243584L, 4500705996182351872L, -4497237707010001920L, 2008896476759068672L, 3213800383427341312L, -4291609078166L, -4293863983431L, -4293184426069L, -4294884435859L, -4293008712313L, -4292535991552L, -4291303808070L, -4292553305808L, -4291089615120L, -4291999494074L, -4294822243777L, -4293675189533L, -4292015982784L, -4291942830102L, -4292322081008L, -4290994445780L, -4293877645175L, -4291948091004L, -4292701493676L, -4290802722586L, -4291305704192L, -4294919939811L, -4291347347874L, -4291247411932L, -4290945926460L };
		long[] output0 = new long[]{ -281741636L, -281741636L, -281741636L, -281741636L, -281741636L, -281741636L, -281741636L, -281741636L, -281741636L, -281741636L, -281741636L, -281741636L, -281741636L, -281741636L, -281741636L, -281741636L, -281741636L, -281741636L, -281741636L, -281741636L, -281741636L, -281741636L, -281741636L, -281741636L, -281741636L, -15009987481L, 2937823907L, -111434L, -116102594184L, 4325847L, 123730004424L, 4950242L, -2694280840L, 731766091172L, -18382234688L, 1521082031984L, -77093006029L, 490272L, 806469904L, 4487225L, -71920335L, -1043320436312L, 2640254L, -1442476653L, 89851016394L, 10153001488L, -128497L, -7777L, -927042L, -8511358L, 21715013050L, 5365706784L, 3054681946L, 1352460265L, -92656695797L, 35892482002L, 9248932661L, 4854646912L, 852302789L, 24853874031L, -4606360280L, -4876893964L, -10607236376L, -1178414569L, -998849509L, 1877797301L, 4913756677L, 2636602303L, 39493144313L, 8574955452L, -4191768213L, 3849648422L, 3905029938L, 4024408211L, -3164044785L, -4294708480L, -4293860385L, -4294893473L, -4294077465L, -4293767821L, -4293779831L, -4294368964L, -4295410133L, -4296213198L, -4296069633L, -4290866179L, -4295631942L, -4294002309L, -4293812118L, -4294725314L, -4297437693L, -4294439241L, -4295581614L, -4293204051L, -4296992052L, -4298541693L, -4292109855L, -4295384736L, -4295159249L, -4298667756L };
		for (int ndx = 0; ndx < 100; ndx++)
			Util.Check("Fixed64.DivFast", Fixed64.DivFast(input0[ndx], input1[ndx]), output0[ndx], input0[ndx], input1[ndx]);
	}

	// Fixed64.DivFastest()
	public static void Fixed64_DivFastest()
	{
		long[] input0 = new long[]{ 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, -3729676599736L, 325891314151L, 3781174363760L, -2521451247174L, 3087324375437L, 2869718067336L, -2308196327074L, -951366630443L, 2999709383396L, -3806783487772L, -647988646301L, -575764730268L, 604519346281L, 3032439243412L, -3078358059433L, 3217249243498L, -635217402295L, -4284460307995L, 1959300722912L, -1102478694513L, 3955804535842L, -1540373762717L, -2970252311383L, 1615843914752L, -546819562254L, 2042222996335025152L, 4498707586553297920L, -654190501647896064L, 2418759313312075776L, -3659966070289440768L, 2260939996917723136L, -1072478749779586048L, -2286680152546465280L, 2491441391333720064L, 1076170901237442560L, 2741717395010294784L, -558640342694453248L, -2480845393476941824L, -4038165067891794944L, 3022518598857148416L, 3123165818841426944L, 4445443180239964160L, 1414585208736529408L, -1154312488285233664L, -2345938138479518720L, 1546722497589551104L, -2817128710001453056L, 2430155343317388288L, -2276632506049524224L, 1260998874672132096L, 4293507224647L, 4292916667933L, 4290969390022L, 4291038117984L, 4292768816470L, 4292935140675L, 4291635573404L, 4291427837136L, 4291211452920L, 4292616149716L, 4294486630851L, 4292684452518L, 4292920818599L, 4294863389379L, 4293033985569L, 4291550435652L, 4294874496507L, 4291654281256L, 4294952558505L, 4293190566921L, 4293600366667L, 4291931707936L, 4294278166953L, 4293428871329L, 4293822238047L };
		long[] input1 = new long[]{ -4396875775L, -4396875775L, -4396875775L, -4396875775L, -4396875775L, -4396875775L, -4396875775L, -4396875775L, -4396875775L, -4396875775L, -4396875775L, -4396875775L, -4396875775L, -4396875775L, -4396875775L, -4396875775L, -4396875775L, -4396875775L, -4396875775L, -4396875775L, -4396875775L, -4396875775L, -4396875775L, -4396875775L, -4396875775L, -668434543628L, -9236164374L, 60835150545734200L, 115300220988L, -55024590287104320L, -503743569389L, 840648661427851L, 50799778775278L, -821005988338471296L, -89391075343139L, 530221341485917824L, 316899297652L, -529023206265L, -602577615088L, 83553671244228L, 18625187672833804L, -2702347164653L, -66064997284826L, 618244908633L, 1988602913130865920L, -2697972144246982L, -166602314577L, 43934667667707L, 4174078662114L, -109692776055L, 1389082126712701952L, 3293160542891888640L, 3829890296746672128L, 2108096602001566720L, 2714579158806577152L, -3995448598751174144L, 855997082107000832L, -359354950988946944L, -4589572442990764032L, -4006516540499559424L, -2385356794289781760L, -3164747828204856320L, 1740946871629786112L, 2894478567072497664L, 2149429335757986816L, 113055090597908480L, 4194452725933236224L, -356372173509897728L, 1116641566337677312L, 1638698243023677440L, -1886136016345615872L, -3884095992388004352L, -908959208621902848L, -818320993313785344L, -3496263228517413376L, -4293734350533L, -4293821416943L, -4291283981220L, -4293144078043L, -4292137827588L, -4293127843615L, -4292629093196L, -4292836820757L, -4293282062117L, -4291248990834L, -4293009914681L, -4292921355737L, -4292286685382L, -4292881105669L, -4292986288027L, -4290745799336L, -4294885570667L, -4293091379697L, -4292223837954L, -4294301383531L, -4290860333916L, -4292524516712L, -4292757770246L, -4290978132236L, -4292704783736L };
		long[] output0 = new long[]{ -281802156L, -281802156L, -281802156L, -281802156L, -281802156L, -281802156L, -281802156L, -281802156L, -281802156L, -281802156L, -281802156L, -281802156L, -281802156L, -281802156L, -281802156L, -281802156L, -281802156L, -281802156L, -281802156L, -281802156L, -281802156L, -281802156L, -281802156L, -281802156L, -281802156L, 23962075682L, -151603635020L, 267051L, -93960844965L, -241007L, -24464842708L, -11792540L, -80419229L, -15689L, 182849490L, -5249L, -7804753047L, -4905990026L, -21622127471L, -158241592L, 742110L, 1009416514L, 278455682L, 13615243824L, -2382L, -6297137L, 39706720849L, -290297849L, 1662051042L, 21417071776L, 6314050647L, 5865809827L, -733916023L, 4927459765L, -5791110148L, -2431139455L, -5380865786L, 27323885103L, -2331271848L, -1153970843L, -4938049228L, 757869354L, -6120545193L, -5990489048L, 6038078259L, 118677358088L, 4551762484L, -17045196334L, -4438170435L, -6146987634L, -3523401154L, 3116313202L, -11485828715L, 11945708480L, -1549160530L, -4293254648L, -4292577652L, -4293151585L, -4291371853L, -4294102814L, -4293285164L, -4292480997L, -4292066827L, -4291408149L, -4294833983L, -4294954002L, -4293239627L, -4294106872L, -4295458861L, -4293524672L, -4294268203L, -4293478200L, -4292040414L, -4296201681L, -4292374836L, -4296205445L, -4292881124L, -4294996178L, -4295916630L, -4294592854L };
		for (int ndx = 0; ndx < 100; ndx++)
			Util.Check("Fixed64.DivFastest", Fixed64.DivFastest(input0[ndx], input1[ndx]), output0[ndx], input0[ndx], input1[ndx]);
	}

	// Fixed32.Div()
	public static void Fixed32_Div()
	{
		int[] input0 = new int[]{ 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, -23971589, 45908862, -12467334, 42592427, -7969516, -17455045, 23986347, -9521412, -19428601, 36070238, 38488994, -54806258, 13160484, 37265288, 49920341, -8848449, 60886090, 54511722, 44766689, -64801414, 23698839, 13437728, 28096290, -5530187, 9072385, -903555098, 32973939, 309263322, -932875501, 627945734, 460827568, -781900639, 960083597, -524549456, 512029448, 293852411, -634172185, 280257271, 348213374, -13942117, 98780341, -1050870223, -4025782, 558796354, -731433602, -253878229, -460595809, 531422630, -914598908, -763765230, 65531058, 65528295, 65471690, 65491499, 65472474, 65522481, 65520788, 65507813, 65530839, 65484088, 65479387, 65480990, 65485824, 65511212, 65497873, 65515405, 65484014, 65486593, 65473857, 65518120, 65532222, 65470793, 65482801, 65500000, 65508070 };
		int[] input1 = new int[]{ -67090, -67090, -67090, -67090, -67090, -67090, -67090, -67090, -67090, -67090, -67090, -67090, -67090, -67090, -67090, -67090, -67090, -67090, -67090, -67090, -67090, -67090, -67090, -67090, -67090, -58857044, -78158545, 6796452, 149537690, -52824674, -1008381, 724734, 130795, -176821, -82804, 71949040, 107202, -47653505, -335976, 112402947, 279378309, -166826, -82803, 85361152, 90510433, -572788354, -2632339, 125650967, 6934098, -3587354, 181511259, 168409015, 1020657751, 456759267, 287702744, -386117963, 968676760, 1069304748, -248272863, 237023516, 571942970, 222560025, -1061683653, -408298581, -409069433, 183745469, -851178364, -164780676, -150332014, -793279701, 336231036, -73486749, -296458651, -546386016, -646146193, -65488692, -65526972, -65491269, -65532297, -65502430, -65478245, -65484650, -65518286, -65504122, -65516953, -65499153, -65531567, -65514829, -65493644, -65523983, -65535897, -65472674, -65475992, -65477147, -65481824, -65498313, -65527431, -65522991, -65471234, -65499617 };
		int[] output0 = new int[]{ -4298, -4298, -4298, -4298, -4298, -4298, -4298, -4298, -4298, -4298, -4298, -4298, -4298, -4298, -4298, -4298, -4298, -4298, -4298, -4298, -4298, -4298, -4298, -4298, -4298, 26691, -38494, -120218, 18666, 9887, 1134426, 2169029, -4770788, 7200913, -28548127, 35058, -33504812, -18099, -7269024, 29105, -2075, -23918518, -43144333, 34369, -46920, -2711, -334552, 14654, -52267, -165739, -326235, 12831, 19857, -133849, 143040, -78216, -52899, 58842, 138464, 141573, 33671, -186741, -17299, -55891, 2233, 35231, 80911, 1601, -243602, 60426, -49484, 410762, -117477, 109701, 77465, -65578, -65537, -65516, -65495, -65506, -65580, -65572, -65525, -65562, -65503, -65516, -65485, -65506, -65553, -65509, -65515, -65547, -65546, -65532, -65572, -65569, -65479, -65495, -65564, -65544 };
		for (int ndx = 0; ndx < 100; ndx++)
			Util.Check("Fixed32.Div", Fixed32.Div(input0[ndx], input1[ndx]), output0[ndx], input0[ndx], input1[ndx]);
	}

	// Fixed32.DivFast()
	public static void Fixed32_DivFast()
	{
		int[] input0 = new int[]{ 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, -6578105, -36744194, -24880890, 2410832, -31882721, 54992432, 25452317, 8914226, 32393225, 33101604, 56555033, -6497895, 16567359, -8719227, -53851645, 55010541, -9056194, 28940471, 54052510, 62976508, 33212719, 3905964, 51434203, -34716366, 29980889, 1060938725, -754921563, 835617022, -1006544724, 411129281, 901970829, -370973051, -912597385, 622033997, -326147207, 1071351028, 231746738, -449561263, 210988063, -335724325, 796142501, -762953760, -799438354, -224377060, -665578427, -1044965290, -602179561, -77369454, -810526424, -565006045, 65496894, 65488787, 65487199, 65524385, 65486208, 65521218, 65515322, 65520700, 65522525, 65490282, 65491437, 65472823, 65517981, 65510371, 65525961, 65518246, 65505491, 65487958, 65499522, 65475919, 65516280, 65527500, 65491469, 65488654, 65510980 };
		int[] input1 = new int[]{ -67090, -67090, -67090, -67090, -67090, -67090, -67090, -67090, -67090, -67090, -67090, -67090, -67090, -67090, -67090, -67090, -67090, -67090, -67090, -67090, -67090, -67090, -67090, -67090, -67090, -442406009, -497255375, 151376, 966860, -277953, -3464717, 118167, 1273036, -8280748, -94725, 403250539, 432509951, -509406, -792234, 139671444, 89168885, -2249234, -543393703, 22388056, 352306067, -13367343, -3413138, 36273127, 74231, -768166, -238294231, 214714523, -448281120, -322178085, -685646276, 2780694, -494379279, -916050092, -1022832823, -741196187, -514501077, -705161856, -484446674, 659748687, -820449596, 154246121, 711371738, -168231124, 877677354, 624771721, -782417218, -915470962, -361707269, -520780210, -1042757363, -65482400, -65522756, -65506854, -65492198, -65477098, -65491129, -65488054, -65472676, -65492454, -65521413, -65484992, -65471408, -65486891, -65521808, -65495394, -65508207, -65497011, -65501922, -65503547, -65522756, -65505579, -65477423, -65523726, -65474518, -65474516 };
		int[] output0 = new int[]{ -4298, -4298, -4298, -4298, -4298, -4298, -4298, -4298, -4298, -4298, -4298, -4298, -4298, -4298, -4298, -4298, -4298, -4298, -4298, -4298, -4298, -4298, -4298, -4298, -4298, 974, 4842, -10771711, 163413, 7517399, -1040187, 14116123, 458901, -256366, -22901686, 9191, -985, -2131402, 721279, -25269, 40431, 263872, -3491, 158227, 11714, -162831, -74998, 92928, -30649680, -2557829, -291784, -230418, -122162, 204744, -39297, 21257992, 49177, 65288, -39856, 28837, -136466, -21539, 60817, 20958, 26816, 338261, -70289, 311427, -16755, -69816, 87527, 43108, 14018, 101997, 35509, -65550, -65502, -65516, -65568, -65545, -65566, -65563, -65584, -65566, -65505, -65542, -65537, -65567, -65524, -65566, -65546, -65544, -65522, -65532, -65489, -65547, -65586, -65504, -65550, -65572 };
		for (int ndx = 0; ndx < 100; ndx++)
			Util.Check("Fixed32.DivFast", Fixed32.DivFast(input0[ndx], input1[ndx]), output0[ndx], input0[ndx], input1[ndx]);
	}

	// Fixed32.DivFastest()
	public static void Fixed32_DivFastest()
	{
		int[] input0 = new int[]{ 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 13261083, 40206367, 50878425, -42697568, -24205204, 4323142, 60173558, 62626380, -38727317, -57920045, 62458795, -48599067, -8531730, 25316892, 63842078, -58771198, -65242483, -14481003, 43451416, 16401962, 28138871, -28334217, -2163869, -57279575, 959821, 72129073, 465305969, 1033406057, -135866328, -328244032, -392244407, -379547853, 698318871, 358459140, -1027962265, -767312359, -765829677, -3965998, -811487591, 1035424220, 1055103762, 291663118, -719186141, -659091427, -46188824, 368004846, -767247073, -280672283, 186966128, -295212645, 65523606, 65523225, 65509377, 65473035, 65475375, 65496079, 65493229, 65496295, 65475326, 65514313, 65475683, 65507499, 65481347, 65510198, 65516174, 65505805, 65525868, 65520586, 65508035, 65511285, 65535170, 65508418, 65486353, 65471143, 65489676 };
		int[] input1 = new int[]{ -67090, -67090, -67090, -67090, -67090, -67090, -67090, -67090, -67090, -67090, -67090, -67090, -67090, -67090, -67090, -67090, -67090, -67090, -67090, -67090, -67090, -67090, -67090, -67090, -67090, -1136492, -2892867, 179557501, 6885235, -145814, -136948, 930109543, 7868364, -898570, -8393976, 9117371, 2624189, -274690660, -79741, 702545, 837939, -93496, -102532, 74718375, 3300686, -5001440, -803944793, 135727311, 9963649, -91566554, 382394847, -563277190, 554344372, 341687159, -943572434, -378319853, 222100876, -433848785, 501093383, 104850148, -302208566, -1065184919, -952043913, 907646296, -681355840, -675758363, 118252618, -660144911, 1071377794, -855229401, -817711562, 82598420, 910536963, 522262208, -187775843, -65478085, -65532731, -65494738, -65502269, -65486409, -65479613, -65491022, -65471443, -65486621, -65486829, -65504461, -65471096, -65487420, -65513612, -65480816, -65471243, -65510429, -65534851, -65487082, -65477219, -65511109, -65495957, -65508887, -65490217, -65507326 };
		int[] output0 = new int[]{ -4299, -4299, -4299, -4299, -4299, -4299, -4299, -4299, -4299, -4299, -4299, -4299, -4299, -4299, -4299, -4299, -4299, -4299, -4299, -4299, -4299, -4299, -4299, -4299, -4299, -764997, -910525, 18562, -406565, 10882573, -2069522, 4241, 521467, 2825474, 452214, 449127, -1213409, 2035, -20804597, 5953113, -4597993, 45720262, 9257985, 38123, 325747, -368714, 2309, -1045, -376763, -687, 12358, -54157, 122206, -26052, 22803, 67928, -112038, -105523, 46869, -642662, 166444, 47110, 273, -58615, -99563, -102299, 161672, 71385, -40315, 3540, -29497, -608653, -20209, 23452, 102999, -65559, -65504, -65528, -65484, -65503, -65530, -65516, -65538, -65502, -65541, -65485, -65550, -65508, -65510, -65549, -65548, -65529, -65500, -65535, -65548, -65538, -65526, -65491, -65495, -65496 };
		for (int ndx = 0; ndx < 100; ndx++)
			Util.Check("Fixed32.DivFastest", Fixed32.DivFastest(input0[ndx], input1[ndx]), output0[ndx], input0[ndx], input1[ndx]);
	}

	// Fixed64.SqrtPrecise()
	public static void Fixed64_SqrtPrecise()
	{
		long[] input0 = new long[]{ 128951L, 274970144941838L, 3511605L, 176L, 86360573L, 21147L, 31684699796L, 77397985057L, 84065364490671L, 779785831217999232L, 168220127L, 1714122092274355968L, 91736162583584640L, 3218748656684893L, 7623056520L, 197435621340973L, 18558403475L, 145136482876387072L, 4520728L, 2166L, 7670902027L, 89050628530L, 96L, 56467336L, 253114192111L, 11110149L, 136869748664L, 2858987290898613760L, 85816683474394672L, 3631541868456L, 37522971064749L, 6174327L, 19L, 167298891949102656L, 1243055350502264832L, 6762636L, 940243843344224000L, 49793535793787560L, 2133667482878170L, 2L, 699776592210393856L, 90181276L, 3700046422L, 11484548299654L, 24328707825906L, 4L, 12108952090854L, 674L, 32687145375499L, 1959851L, 20L, 578430909L, 19374L, 194L, 4L, 6678045924016L, 2838867289900L, 286792717850438624L, 3206692176L, 7L, 712556205727L, 51108966981L, 4159275225918L, 23L, 20781L, 27L, 88393342392530960L, 2528757802529893888L, 11941429776934630L, 1127L, 968377619192085L, 1718808043398L, 68L, 2087753L, 14280L, 85L, 24L, 38894327L, 10703800109223L, 56415576930L, 4231292583269L, 202926376L, 87465L, 43787350282L, 179164047353L, 64870L, 318L, 458992752488196352L, 40758009939162776L, 186140L, 10985773843526L, 3L, 15528006L, 274492895521279L, 14014248L, 13691855L, 99990432793551L, 159838401L, 552631705L, 892957363513L };
		long[] output0 = new long[]{ 23533812L, 1086732616562L, 122809725L, 869433L, 609028600L, 9530250L, 11665536824L, 18232438525L, 600881012525L, 57871881280683L, 849999967L, 85802670865593L, 19849529419032L, 3718120521783L, 5721955823L, 920858043742L, 8927918905L, 24967107309629L, 139342667L, 3050065L, 5739884435L, 19556828404L, 642119L, 492468640L, 32971460041L, 218443875L, 24245640728L, 110811808549852L, 19198433503119L, 124889365276L, 401447298623L, 162845118L, 285664L, 26805657417389L, 73067654112644L, 170426818L, 63547750215320L, 14624007924865L, 3027215231776L, 92681L, 54822600978519L, 622354907L, 3986424259L, 222094032689L, 323250683628L, 131072L, 228051645946L, 1701413L, 374686829749L, 91746912L, 293085L, 1576179506L, 9121989L, 912810L, 131072L, 169357576874L, 110421203433L, 35096514697311L, 3711150498L, 173391L, 55320932748L, 14815915149L, 133656092529L, 314299L, 9447418L, 340535L, 19484519875020L, 104215795642362L, 7161567590926L, 2200097L, 2039399471562L, 85919871592L, 540423L, 94693351L, 7831483L, 604212L, 321059L, 408717338L, 214411919939L, 15566086788L, 134808246279L, 933574929L, 19381932L, 13713687959L, 27739930136L, 16691750L, 1168674L, 44399987173847L, 13230809489171L, 28274815L, 217217723446L, 113511L, 258248481L, 1085789118221L, 245338005L, 242499627L, 655328649428L, 828553380L, 1540628151L, 61929174651L };
		for (int ndx = 0; ndx < 100; ndx++)
			Util.Check("Fixed64.SqrtPrecise", Fixed64.SqrtPrecise(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed64.Sqrt()
	public static void Fixed64_Sqrt()
	{
		long[] input0 = new long[]{ 234L, 22083050025326L, 260478L, 28997721107L, 9333360670L, 54384174L, 8503576L, 42796990919260232L, 62920369520957264L, 222540861593516832L, 277472268734L, 72989L, 26793L, 262130749702385440L, 8471928L, 3511L, 584334L, 94L, 595847211L, 1477379695283365120L, 394267689963570304L, 888123699173627136L, 62L, 64152747837L, 473197239L, 295374068418079L, 110690L, 1142821L, 687019718211932544L, 4809965807829971L, 3923117L, 694397932541L, 324571362247852416L, 11L, 241013514L, 883636672640703104L, 779L, 13910126924590L, 4L, 3294L, 35180646962044140L, 34340L, 7L, 844623064858477440L, 3093721474712L, 150512243L, 564289514471137L, 273185381L, 32400283L, 3991L, 23L, 1052663232844L, 1237103250758249984L, 1725056812L, 10444779253268L, 1215L, 355930161251L, 18724784997783L, 61L, 145722097878803L, 491L, 7L, 287278922891458400L, 13L, 56725511731L, 1842768997799673088L, 1037070L, 2235L, 1087618469L, 44214865L, 4L, 193727159713L, 20L, 180865L, 41L, 11481214452327L, 121747175809189216L, 338L, 95629917775080224L, 3L, 2413960257273833984L, 1868589735862144L, 162663235296828000L, 172139297807365L, 205277596424518L, 17187061049302L, 2588583640666L, 188151114L, 5292583L, 198288L, 2482612L, 191870859L, 226991412320L, 148472L, 6L, 4728034799537487L, 551263L, 2571727917487812608L, 14889650L, 7742300899827L };
		long[] output0 = new long[]{ 1002508L, 307970734336L, 33447637L, 11159940264L, 6331388400L, 483299331L, 191108803L, 13557717155840L, 16439006216192L, 30916108042240L, 34521502624L, 17705516L, 10727304L, 33553584193536L, 190752845L, 3883249L, 50096856L, 635395L, 1599732435L, 79657374646272L, 41150537564160L, 61761333166080L, 516030L, 16599215312L, 1425610966L, 1126331264000L, 21803897L, 70059822L, 54320599203840L, 4545178640384L, 129806236L, 54611502400L, 37336622235648L, 217358L, 1017420841L, 61605118083072L, 1829147L, 244424918656L, 131072L, 3761332L, 12292262985728L, 12144512L, 173391L, 60229796626432L, 115271125376L, 804018104L, 1556793137152L, 1083199933L, 373039083L, 4140195L, 314299L, 67239528288L, 72892514435072L, 2721959282L, 211801769984L, 2284378L, 39098701472L, 283588349440L, 511852L, 791120497152L, 1452180L, 173391L, 35126251765760L, 236293L, 15608786408L, 88964219731968L, 66739655L, 3098265L, 2161315572L, 435776790L, 131072L, 28845308272L, 293085L, 27871297L, 419635L, 222061801344L, 22867010093056L, 1204864L, 20266410278912L, 113511L, 101822794104832L, 2832936951808L, 26431671123968L, 859844522496L, 938967822336L, 271694434048L, 105441372416L, 898945413L, 150769590L, 29182879L, 103260536L, 907788025L, 31223719728L, 25252372L, 160529L, 4506301956096L, 48658574L, 105097505538048L, 252884477L, 182353855360L };
		for (int ndx = 0; ndx < 100; ndx++)
			Util.Check("Fixed64.Sqrt", Fixed64.Sqrt(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed64.SqrtFast()
	public static void Fixed64_SqrtFast()
	{
		long[] input0 = new long[]{ 145L, 252452175812L, 1158352160083206656L, 3379404911152512512L, 885L, 557788627L, 51991347929L, 6839893771445L, 41078549L, 4195378689934169600L, 46040L, 1050687903L, 902989683369126L, 19L, 278390897007776L, 1212569L, 210L, 1668L, 293878L, 15220766865791182L, 711883L, 25419165849435404L, 1947667694388098L, 5485L, 17L, 108334107396L, 3935870633641405952L, 628887808038156L, 26973L, 40960L, 20827085L, 218320042584722528L, 104921931253342L, 12351L, 99900264387773776L, 9562049L, 7439317209399825L, 221977474630205824L, 194404068781L, 368020L, 330L, 1745309997799790592L, 4L, 5817766L, 4L, 10896698617790508L, 979909487500L, 11645499906L, 2459515896L, 25501783609178L, 22412338951032L, 330L, 8750997642199L, 4511362359L, 10875803L, 26330L, 597756061194956L, 211184249539554L, 189749599122639872L, 37693737222L, 653564675L, 381256830326787L, 253577212L, 1002L, 201438586623L, 972547L, 46181409883581L, 73107015050L, 899L, 29114144L, 751680506L, 4382L, 39589326876L, 3682606241980797440L, 46043252164920L, 1881030L, 5549701153625025L, 334779275L, 1273L, 7537L, 509845954927301824L, 337973523L, 255695L, 4877848498L, 8428298730L, 63051L, 24948L, 23257L, 5237476854369422L, 3794064699777L, 73771181704L, 35L, 1L, 5L, 2596827245029000L, 3998643L, 6882755659L, 21062198479557980L, 133190534419394L, 20422156586791L };
		long[] output0 = new long[]{ 789154L, 32928512736L, 70534153633792L, 120475758362624L, 1949615L, 1547784951L, 14943182920L, 171396080000L, 420039993L, 134235482882048L, 14062088L, 2124322491L, 1969322011648L, 285665L, 1093477110272L, 72166008L, 949696L, 2676537L, 35527187L, 8085267869696L, 55295282L, 10448707526656L, 2892244000768L, 4853695L, 270208L, 21570406336L, 130016078856192L, 1643477114880L, 10763164L, 13263676L, 299087288L, 30621348478976L, 671292191232L, 7283310L, 20714105962496L, 202653405L, 5652517978112L, 30876714975232L, 28895782464L, 39757395L, 1190533L, 86579253608448L, 131072L, 158074193L, 131072L, 6841162928128L, 64874330464L, 7072336168L, 3250151300L, 330952403968L, 310261602304L, 1190533L, 193869672448L, 4401789248L, 216130107L, 10634100L, 1602275712000L, 952376846336L, 28547951968256L, 12723619512L, 1675433108L, 1279654344704L, 1043612955L, 2074519L, 29413782928L, 64630663L, 445367118848L, 17719635440L, 1964981L, 353614231L, 1796796967L, 4338219L, 13039719576L, 125763047063552L, 444700457216L, 89883161L, 4882229628928L, 1199121428L, 2338287L, 5689602L, 46794922393600L, 1204829293L, 33139426L, 4577120240L, 6016629268L, 16456237L, 10351304L, 9994438L, 4742866718720L, 127652606016L, 17799947456L, 387712L, 65536L, 146544L, 3339648706560L, 131051168L, 5436964912L, 9511129481216L, 756347012608L, 296162818304L };
		for (int ndx = 0; ndx < 100; ndx++)
			Util.Check("Fixed64.SqrtFast", Fixed64.SqrtFast(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed64.SqrtFastest()
	public static void Fixed64_SqrtFastest()
	{
		long[] input0 = new long[]{ 235L, 13L, 12942368L, 84L, 33926L, 5113789821L, 38478417581L, 10958775069070L, 451857454410813L, 5L, 21880237L, 1785522L, 165819337844L, 25174259887687L, 340949416686L, 1L, 1491056469L, 239740633195204352L, 548741161804L, 3194844L, 38L, 1985677081L, 64371950183838L, 1093702948L, 1820023617481722L, 21338394L, 3746L, 7676123722L, 1418L, 11514719L, 1260355986762071L, 1215138070295136768L, 11591641325081L, 287597083L, 31L, 38037508949421048L, 26L, 3026L, 143777L, 1L, 7556756706501L, 10498657277L, 237365088L, 905850681745561L, 173401L, 41316L, 979706765L, 214304L, 69759913L, 1342879880574563L, 12367396384870654L, 132397698377L, 38382L, 41689204L, 523873913288L, 547997856485L, 960262L, 54572531485743904L, 214056L, 7332216247930457L, 1364980L, 5L, 7727691694L, 39241725L, 21155L, 83039770L, 710362816288L, 576L, 788061856544L, 41336872506953L, 341504708362167488L, 492624L, 1667441512387L, 332943463164L, 1949728070101L, 17123825809L, 8L, 327717612432176832L, 6307L, 44050993436L, 100444314444482416L, 80620398480287520L, 110L, 4870065L, 4293730691L, 9519L, 31658436658186L, 278048L, 2531730278793377L, 268829717L, 39611573328L, 2206L, 65209273692368104L, 90430619L, 5568396743857L, 1507510003420L, 1L, 6L, 42817825882L, 9629999898835020L };
		long[] output0 = new long[]{ 1004554L, 236299L, 235786412L, 600675L, 12070339L, 4686297436L, 12854310640L, 216949842944L, 1393150236672L, 146542L, 306566122L, 87569094L, 26685881520L, 328851124224L, 38266725472L, 65536L, 2530837560L, 32088617762816L, 48546876832L, 117149408L, 403970L, 2920068796L, 525761115392L, 2167272186L, 2795970818048L, 302739063L, 4010735L, 5741395380L, 2468054L, 222403398L, 2326412619776L, 72236703547392L, 223138558848L, 1111304039L, 364863L, 12780579717120L, 334178L, 3605411L, 24847531L, 65536L, 180148830976L, 6714853504L, 1009622226L, 1972533983232L, 27291624L, 13321185L, 2051108677L, 30339185L, 547335969L, 2401472985088L, 7288765116416L, 23844426208L, 12838548L, 423144677L, 47430265696L, 48513794944L, 64214752L, 15311001952256L, 30321664L, 5611880775680L, 76570335L, 146542L, 5760618952L, 410511757L, 9532363L, 597197943L, 55237560576L, 1572722L, 58183684608L, 421329653248L, 38296122130432L, 45993544L, 84633364672L, 37813851936L, 91503230400L, 8575829500L, 185363L, 37513968713728L, 5205037L, 13755263640L, 20772109238272L, 18606407352320L, 687321L, 144616041L, 4294345180L, 6393593L, 368713408512L, 34554368L, 3297232289792L, 1074526442L, 13042411128L, 3077814L, 16733902258176L, 623257450L, 154650267136L, 80471958528L, 65536L, 160543L, 13560969728L, 6430640295936L };
		for (int ndx = 0; ndx < 100; ndx++)
			Util.Check("Fixed64.SqrtFastest", Fixed64.SqrtFastest(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed32.SqrtPrecise()
	public static void Fixed32_SqrtPrecise()
	{
		int[] input0 = new int[]{ 443219, 1641, 911856, 2141663, 80503052, 146364, 328325143, 610374, 7023736, 9, 229224, 4328, 2250437, 3512263, 315661957, 9833, 253187581, 62, 119435521, 2, 2632309, 1986, 1310, 83, 51, 8672028, 6741, 197, 287530054, 2, 106038, 2, 3318, 2148, 461248765, 218472, 354, 9038, 35822, 470084354, 474, 13, 107598, 6470900, 82127543, 83, 34968, 83, 35826, 372, 4214736, 39457879, 41, 129319, 45, 446, 2, 21788, 82959, 18, 43, 3319257, 2279362, 6227517, 100312, 196966, 2, 2095, 8176203, 2889, 55, 56024, 1882725, 272808302, 6569948, 389187, 19820509, 217458, 1094, 662355453, 495, 161, 5929021, 1543985, 574, 2885568, 59893969, 27551305, 94, 2066981, 174445, 17484782, 116983789, 3858, 21652683, 153620, 6372, 18551985, 129, 833 };
		int[] output0 = new int[]{ 170431, 10370, 244457, 374641, 2296921, 97939, 4638654, 200003, 678459, 768, 122565, 16841, 384037, 479770, 4548320, 25385, 4073438, 2015, 2797735, 362, 415344, 11408, 9265, 2332, 1828, 753876, 21018, 3593, 4340918, 362, 83362, 362, 14746, 11864, 5498035, 119656, 4816, 24337, 48452, 5550445, 5573, 923, 83973, 651211, 2319980, 2332, 47871, 2332, 48455, 4937, 525563, 1608076, 1639, 92060, 1717, 5406, 362, 37787, 73734, 1086, 1678, 466402, 386497, 638847, 81080, 113614, 362, 11717, 732007, 13759, 1898, 60593, 351263, 4228328, 656176, 159705, 1139717, 119378, 8467, 6588484, 5695, 3248, 623349, 318098, 6133, 434866, 1981214, 1343727, 2482, 368051, 106922, 1070459, 2768871, 15900, 1191230, 100337, 20435, 1102643, 2907, 7388 };
		for (int ndx = 0; ndx < 100; ndx++)
			Util.Check("Fixed32.SqrtPrecise", Fixed32.SqrtPrecise(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed32.Sqrt()
	public static void Fixed32_Sqrt()
	{
		int[] input0 = new int[]{ 64, 33, 10954, 24, 13, 150, 41, 164, 21135020, 125509, 24177, 12367, 39, 134484, 40192771, 288418889, 601115315, 2, 21673, 37326958, 3531091, 101, 44, 7, 17786687, 3403, 514228, 975, 25, 85, 122, 2, 3371, 2, 20647607, 29, 15844969, 478221, 229783, 7, 137684, 729382, 2, 807892, 170, 28, 878162, 1739, 103090, 80609808, 274404, 4316, 1711, 3711, 253581, 677469702, 807575885, 2769, 1496, 4239049, 314168, 46123897, 13, 494184, 2055, 22630, 7, 30, 6993647, 2704703, 36, 2513, 13796, 5674, 542, 9, 78, 58980, 49681205, 1261025, 4162078, 591, 10163242, 335, 334697, 30385667, 1340189, 975321655, 11112, 32725006, 39, 11443, 638, 58203703, 26107, 3205224, 111911, 5664, 786, 8112663 };
		int[] output0 = new int[]{ 2048, 1470, 26793, 1254, 923, 3135, 1639, 3278, 1176904, 90693, 39805, 28468, 1598, 93880, 1622982, 4347622, 6276518, 362, 37687, 1564052, 481054, 2572, 1698, 677, 1079661, 14933, 183576, 7993, 1280, 2360, 2827, 362, 14863, 362, 1163254, 1378, 1019026, 177033, 122715, 677, 94990, 218633, 362, 230100, 3337, 1354, 239898, 10675, 82195, 2298443, 134101, 16818, 10589, 15595, 128913, 6663231, 7274977, 13471, 9901, 527077, 143489, 1738613, 923, 179963, 11605, 38510, 677, 1402, 677004, 421017, 1535, 12833, 30068, 19283, 5959, 767, 2260, 62171, 1804413, 287476, 522269, 6223, 816123, 4685, 148103, 1411153, 296362, 7994915, 26985, 1464467, 1598, 27384, 6466, 1953058, 41363, 458320, 85639, 19266, 7177, 729158 };
		for (int ndx = 0; ndx < 100; ndx++)
			Util.Check("Fixed32.Sqrt", Fixed32.Sqrt(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed32.SqrtFast()
	public static void Fixed32_SqrtFast()
	{
		int[] input0 = new int[]{ 7, 57876, 267102, 40925917, 4428489, 218, 335926394, 323928775, 13, 52379, 17369928, 27384, 59850, 1274574, 2, 1062, 9, 41698848, 2, 72617, 18131049, 8, 2932065, 229468933, 136890, 3415893, 7, 254524, 233387347, 181639, 92898, 14785693, 150, 12, 328001, 143, 2376432, 266645184, 81382, 3066, 97123545, 4442388, 142494469, 227804894, 3, 1549421, 205298792, 538275, 57146865, 49, 706260, 2881701, 3836, 11625906, 480441362, 1022050363, 21194861, 1249839, 597, 2, 55, 2639, 2, 80922, 605414905, 2, 365, 9773, 7, 15207300, 480245, 36, 1024, 1034061, 802821, 8, 60, 13820076, 121798569, 94864790, 17865608, 15696, 4782305, 9501786, 276149598, 34614764, 7707, 13856, 27, 344590, 7286, 3, 891887, 62774, 110, 73588, 3200695, 3521, 404026461, 3 };
		int[] output0 = new int[]{ 677, 61586, 132304, 1637729, 538720, 3779, 4692087, 4607518, 923, 58588, 1066927, 42362, 62628, 289018, 362, 8342, 767, 1653125, 362, 68985, 1090051, 724, 438358, 3877918, 94715, 473137, 677, 129154, 3910898, 109105, 78026, 984373, 3135, 886, 146616, 3061, 394639, 4180308, 73031, 14175, 2522915, 539564, 3055865, 3863829, 443, 318657, 3668007, 187818, 1935230, 1791, 215142, 434578, 15855, 872883, 5611261, 8184284, 1178581, 286199, 6254, 362, 1898, 13151, 362, 72824, 6298893, 362, 4890, 25307, 677, 998314, 177408, 1535, 8192, 260324, 229375, 724, 1982, 951679, 2825287, 2493413, 1082042, 32072, 559831, 789115, 4254109, 1506145, 22474, 30133, 1330, 150278, 21851, 443, 241763, 64140, 2684, 69444, 457993, 15190, 5145680, 443 };
		for (int ndx = 0; ndx < 100; ndx++)
			Util.Check("Fixed32.SqrtFast", Fixed32.SqrtFast(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed32.SqrtFastest()
	public static void Fixed32_SqrtFastest()
	{
		int[] input0 = new int[]{ 8488, 42012, 138520, 7, 109834, 38646, 5624, 3983791, 28, 117715588, 33581104, 3, 11018229, 6767, 155, 3795403, 592661, 313, 314648, 34, 327308, 28289587, 714, 24216, 4174, 252575, 44002, 17528347, 18711, 21, 2738, 18558785, 36728273, 75948079, 22351, 850, 121674401, 1272614, 173, 14291, 12309, 2077456, 956, 249, 11018140, 4751, 370, 263, 805, 31269, 133322463, 20406, 12017985, 23100324, 10521, 322185, 117, 11, 1933273, 466924563, 943029587, 344521, 425, 2, 85974, 3, 89, 155773965, 325121333, 196738406, 33493348, 500045636, 3, 44, 3051316, 169170821, 59132, 5, 2359974, 943390747, 1363, 333, 43513, 642507437, 175, 144083534, 3, 3, 14436, 74489858, 14, 21271581, 706811521, 397, 16272, 38363509, 9757, 720, 3118256, 6089237 };
		int[] output0 = new int[]{ 23583, 52473, 95270, 677, 84840, 50323, 19199, 510915, 1354, 2777352, 1483496, 443, 849800, 21059, 3187, 498691, 197062, 4528, 143593, 1492, 146459, 1361590, 6841, 39841, 16538, 128647, 53703, 1071714, 35014, 1173, 13396, 1102741, 1551310, 2230799, 38275, 7463, 2823590, 288785, 3367, 30601, 28404, 368972, 7914, 4039, 849796, 17644, 4924, 4151, 7263, 45264, 2955856, 36569, 887558, 1230508, 26259, 145306, 2768, 849, 355914, 5531477, 7860968, 150268, 5277, 362, 75066, 443, 2415, 3194893, 4615815, 3591084, 1481551, 5724049, 443, 1698, 447223, 3329709, 62246, 572, 393237, 7862470, 9451, 4671, 53404, 6488729, 3386, 3072610, 443, 443, 30756, 2209264, 957, 1180717, 6806339, 5101, 32655, 1585490, 25285, 6869, 452101, 631775 };
		for (int ndx = 0; ndx < 100; ndx++)
			Util.Check("Fixed32.SqrtFastest", Fixed32.SqrtFastest(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed64.RSqrt()
	public static void Fixed64_RSqrt()
	{
		long[] input0 = new long[]{ 4853L, 4375011L, 437918L, 13971391L, 1535584535691L, 273187002594163744L, 104227827L, 418687405160L, 75L, 4690671115L, 37L, 642L, 20038838L, 8246117266392L, 680514932423L, 61886442985249L, 83L, 284664L, 590338505803770L, 589728311220L, 1L, 1260L, 419154234L, 23L, 1785031246028442L, 2L, 2200602338759572480L, 200353741725280L, 14941178505996L, 20575568323365808L, 1155240559L, 12358L, 2509539L, 607810941996120576L, 720455550516472L, 1204240060503141120L, 594573856930600448L, 134L, 1001799L, 241613L, 603934399L, 27889175L, 164013771927747136L, 174445016005858016L, 409543174741095L, 492901646085719616L, 52586786L, 228754L, 556578341968L, 17078890323081L, 44584543118404L, 269L, 2285752761L, 29L, 51784247050568L, 3L, 48135458808975448L, 18759L, 36095542455L, 581784072171L, 572503563269751424L, 2399086798641L, 129230425276970800L, 16983L, 4L, 13995921271447840L, 1180051732410507L, 152042066L, 52783969360044272L, 2606059457843L, 480009069552132L, 2862545330232657408L, 1310422702752802560L, 2443315788L, 976L, 232045187640L, 35439L, 11080899695L, 262860L, 16701108030655298L, 231470153237L, 9619923169455L, 359L, 4034455559551830016L, 461L, 4282195L, 24934947223027L, 85170L, 11737L, 187081475436020L, 25L, 31694065663361L, 17164935960L, 7941067167879L, 1946269L, 1160923326400534L, 995246443L, 9657200748866L, 42963139593879872L, 134945352739934544L };
		long[] output0 = new long[]{ 4040495738880L, 134570608000L, 425347019776L, 75304333184L, 227144865L, 538529L, 27570710176L, 435005593L, 32501930983424L, 4109815132L, 46274199945216L, 11108931354624L, 62878697024L, 98020077L, 341209385L, 35780139L, 30895892692992L, 527562004480L, 11584818L, 366533619L, 281474976710656L, 7929659113472L, 13748422304L, 58691589832704L, 6662187L, 199032864768000L, 189744L, 19885708L, 72819445L, 1962293L, 8281396640L, 2532011646976L, 177681751040L, 361040L, 10486635L, 256497L, 365036L, 24315734786048L, 281222130176L, 572637310976L, 11453676384L, 53299355328L, 695023L, 673923L, 13908809L, 400921L, 38815168896L, 588512165888L, 377291179L, 68109857L, 42154858L, 17161832742912L, 5887422072L, 52268591022080L, 39114785L, 162509653540864L, 1282942L, 2055109408768L, 1481538760L, 369027637L, 372006L, 181725887L, 782992L, 2159894671360L, 140737488355328L, 2379244L, 8193873L, 22827477376L, 1225148L, 174360312L, 12847394L, 166365L, 245886L, 5694426584L, 9009794416640L, 584323711L, 1495199217664L, 2673943808L, 549006581760L, 2178046L, 585049071L, 90751534L, 14855680917504L, 140135L, 13109596667904L, 136021188736L, 56368381L, 964487209984L, 2598132187136L, 20579006L, 56294995394560L, 49997791L, 2148417588L, 99885019L, 201761528576L, 8261102L, 8922251776L, 90576211L, 1357975L, 766232L };
		for (int ndx = 0; ndx < 100; ndx++)
			Util.Check("Fixed64.RSqrt", Fixed64.RSqrt(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed64.RSqrtFast()
	public static void Fixed64_RSqrtFast()
	{
		long[] input0 = new long[]{ 417L, 1595043753747294720L, 19986081L, 984921717764854528L, 164085399025270656L, 71827653510174L, 949L, 4314290483156627968L, 139155353023965744L, 223L, 501129495067420L, 4344002L, 329125987976212416L, 9967081714753L, 2L, 59512L, 6664611008L, 147720091746763008L, 36L, 4372761357916L, 561L, 13855094038L, 12953L, 282L, 104168489158L, 15L, 166767026L, 165018L, 1255L, 3878987L, 233L, 16923673703L, 1189429605909L, 8983120L, 39983983866270L, 669240368397L, 481331L, 1685L, 24L, 29630267L, 4510L, 26653779556013L, 2822613L, 52L, 1721632897419042304L, 26559359278626L, 444094616732027L, 7942073461676092L, 3159454034819L, 32L, 174192L, 31070682762L, 262415643682L, 9825L, 240416845972658L, 139030304858L, 123134480865059L, 70836L, 9455083L, 10834239894588210L, 430706L, 26532699166026132L, 3436630412598477L, 35874141234L, 4414107435329902080L, 29611L, 16842675406685L, 36638270596L, 1149586583022471936L, 17319862L, 570193641468519936L, 3954081L, 6007925937102128L, 5727771676223L, 969490387L, 97116711L, 4908L, 246L, 755L, 18087498270321576L, 157273L, 96835816006L, 240868622429L, 38L, 22L, 34605957186L, 297416222234715520L, 121059398L, 172314587901L, 287L, 25064680731369252L, 6L, 822097930138563L, 10465L, 68L, 783953L, 35767262626233740L, 362852066079619L, 54L, 58141366014434L };
		long[] output0 = new long[]{ 13783874945024L, 222872L, 62960865408L, 283617L, 694870L, 33212258L, 9137049305088L, 135514L, 754563L, 18848687423488L, 12573582L, 135051900928L, 490633L, 89156952L, 199032864768000L, 1153808158720L, 3447918844L, 732360L, 46912528318464L, 134606041L, 11883976458240L, 2391309532L, 2473190490112L, 16761699860480L, 872122649L, 72676765728768L, 21796084608L, 692896343040L, 7945325027328L, 142915568384L, 18439885455360L, 2163703280L, 258092351L, 93914297984L, 44513921L, 344066640L, 405709846528L, 6857063596032L, 57456662020096L, 51708966848L, 4191354490880L, 54521320L, 167538059264L, 39033542737920L, 214523L, 54618161L, 13356885L, 3158396L, 158357626L, 49758216192000L, 674409639936L, 1596834732L, 549477049L, 2839669964800L, 18153147L, 754897425L, 25365514L, 1057590563840L, 91539215872L, 2704174L, 428891906048L, 1728045L, 4801523L, 1486124762L, 133974L, 1635719208960L, 68586602L, 1470544262L, 262524L, 67635277568L, 372763L, 141553132288L, 3631415L, 117609709L, 9039896224L, 28562644000L, 4017740800000L, 17946416316416L, 10244069720064L, 2092915L, 709752678400L, 904535484L, 573513172L, 45660736126976L, 60010880565248L, 1513095272L, 516134L, 25582078720L, 678067241L, 16614970114048L, 1777916L, 114913324040192L, 9817117L, 2751471534080L, 34134324445184L, 317907693568L, 1488333L, 14776461L, 38303504400384L, 36914332L };
		for (int ndx = 0; ndx < 100; ndx++)
			Util.Check("Fixed64.RSqrtFast", Fixed64.RSqrtFast(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed64.RSqrtFastest()
	public static void Fixed64_RSqrtFastest()
	{
		long[] input0 = new long[]{ 1L, 12121L, 31860452863182952L, 182417L, 264L, 203162163310352160L, 23849866789312L, 211282611004224352L, 46736529274047L, 2475545L, 28323790L, 499956840757L, 93L, 2410718924L, 68887866611L, 20511867778099L, 110154L, 89526732072059L, 1610986277L, 127553398L, 459145L, 139127L, 980556564056920832L, 3997284853691198L, 3186705894L, 83914074716782912L, 22181035166L, 574048105812L, 83259082330L, 1236L, 12521835518L, 62386155L, 4L, 59946652L, 11470226336791122L, 12L, 14016636256826L, 1320421L, 669277168837054720L, 505L, 6691517832081752L, 1L, 11945429884879L, 69606L, 46825771299726L, 50133L, 334334610409818624L, 341017L, 700637338142L, 15467089L, 7L, 399L, 225235L, 1986690788961L, 126629482L, 52270141680909L, 57006L, 7L, 263988713372145L, 14536L, 9159273L, 41L, 2537652L, 37792316929L, 911722482886362L, 2093740651090718720L, 111544439773L, 7210423054961L, 969246676691L, 5309181419L, 1L, 384723148522916480L, 616888185935912L, 3187023L, 87907741950L, 326174L, 53711900135L, 14087097929410L, 85L, 63564L, 1157479223124115968L, 65043L, 3778459238984291840L, 5382L, 173L, 31342600L, 276L, 10404328L, 2183181477006288384L, 219L, 1049656689480750L, 1758559052807L, 23066780808L, 46041267488932L, 254510256025494L, 161059731295507L, 2558164651363L, 316L, 352085535L, 103138731481634L };
		long[] output0 = new long[]{ 281474976710656L, 2554945089536L, 1577529L, 658691748864L, 17329697275904L, 624124L, 57614226L, 611957L, 41162163L, 178987259904L, 52887420160L, 398310517L, 29168641474560L, 5736573432L, 1072464662L, 62184039L, 848030410752L, 29749348L, 7008211064L, 24938680192L, 415521518080L, 755050133504L, 284263L, 4453830L, 4982871968L, 972223L, 1889810938L, 371674876L, 975842157L, 8009325256704L, 2513747728L, 35659946496L, 140737488355328L, 36370974784L, 2628239L, 81201186734080L, 75148370L, 244978916864L, 344259L, 12529022697472L, 3438653L, 281474976710656L, 81408097L, 1067479405568L, 41122421L, 1256336541696L, 487079L, 481946336256L, 336280697L, 71616095360L, 106418285051904L, 14083413327872L, 593168403456L, 199804826L, 25029924096L, 38906658L, 1179187351552L, 106418285051904L, 17335485L, 2335567290368L, 93066264704L, 43958260858880L, 176759461888L, 1448855876L, 9318679L, 194635L, 842497182L, 104795701L, 286006043L, 3863900944L, 281474976710656L, 453668L, 11340231L, 157568222464L, 949344119L, 492942198784L, 1213848448L, 74962412L, 30522309705728L, 1117006673920L, 261641L, 1103855431680L, 144765L, 3836060573696L, 21392291299328L, 50310692352L, 16953324617728L, 87281661952L, 190624L, 19022040072192L, 8693671L, 212164334L, 1852694814L, 41475883L, 17653090L, 22192999L, 176084551L, 15838000234496L, 14998174256L, 27697600L };
		for (int ndx = 0; ndx < 100; ndx++)
			Util.Check("Fixed64.RSqrtFastest", Fixed64.RSqrtFastest(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed32.RSqrt()
	public static void Fixed32_RSqrt()
	{
		int[] input0 = new int[]{ 1153434, 304, 1028616, 19, 3858, 16, 2136, 310918814, 8, 32, 49, 127406, 354178629, 63087, 337, 20, 12, 35, 15878, 6196, 53463503, 153, 2931878, 64931, 3578733, 2402, 4776, 6, 216099, 31965147, 639827, 14147, 284, 2396, 328549, 3694073, 372403, 99675497, 30946701, 2, 6, 95, 891, 46555134, 534975696, 333, 3238030, 4, 29113, 1081847, 1408299, 71494, 1997055, 6, 144058031, 15027, 111524, 31, 5888, 3, 3597511, 634, 2877, 288, 54562, 3792756, 896, 295581, 206179523, 98217, 58335, 135, 1235, 11383, 2063, 1115239, 184984278, 67620475, 130322, 21474, 796694, 2142, 248318, 214480301, 45, 17, 7606472, 88, 17862, 43, 66, 23507, 33852, 19267078, 832, 10160079, 35776318, 6, 1706, 282 };
		int[] output0 = new int[]{ 15621, 962239, 16542, 3848957, 270108, 4194304, 363010, 951, 5931641, 2965820, 2396745, 47002, 891, 66795, 913913, 3751499, 4843165, 2835867, 133144, 213139, 2294, 1356357, 9798, 65840, 8868, 342320, 242765, 6849269, 36090, 2967, 20974, 141054, 995544, 342749, 29269, 8729, 27492, 1680, 3015, 11863283, 6849269, 1721306, 562057, 2458, 725, 919385, 9323, 8388608, 98327, 16130, 14137, 62745, 11872, 6849269, 1397, 136862, 50238, 3013276, 218643, 9686330, 8845, 666308, 312787, 988606, 71824, 8614, 560487, 30858, 1168, 53533, 69463, 1443952, 477404, 157250, 369377, 15886, 1233, 2040, 46474, 114488, 18796, 362501, 33667, 1145, 2500999, 4069072, 6083, 1788457, 125532, 2558501, 2065132, 109426, 91185, 3822, 581645, 5263, 2804, 6849269, 406191, 999068 };
		for (int ndx = 0; ndx < 100; ndx++)
			Util.Check("Fixed32.RSqrt", Fixed32.RSqrt(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed32.RSqrtFast()
	public static void Fixed32_RSqrtFast()
	{
		int[] input0 = new int[]{ 399190504, 21, 23, 318276823, 37, 20837, 115, 350, 3340945, 258, 87226, 1770894, 261040, 294451687, 4329, 3358, 2744502, 14405, 12, 6096, 535391607, 20, 33, 9430361, 2965, 4, 4287388, 68843, 27, 218067, 33471275, 59958996, 79250, 923, 57761, 72725, 184, 837730, 11565225, 2339197, 166034364, 43358, 28455, 138, 538267, 40167, 96695893, 123444, 8900, 266171013, 7, 4966, 520676709, 300542567, 565, 39423062, 710829059, 2644, 214675, 14, 5218573, 1805330, 25, 30, 8287, 1562047, 44, 565, 10195, 63921750, 36, 6, 1337463, 5840, 39427, 24695, 764182, 256980507, 35, 79265002, 55, 69, 15, 110, 58905, 13477, 123647709, 283136, 3, 1573208, 109855, 74897246, 7, 1547525, 481298930, 183, 3379, 1857, 17916012, 370002152 };
		int[] output0 = new int[]{ 839, 3661062, 3498333, 940, 2758139, 116224, 1564465, 896781, 9178, 1044508, 56806, 12607, 32837, 977, 254995, 289519, 10127, 139783, 4843234, 214883, 725, 3751446, 2920576, 5463, 308115, 8388608, 8102, 63943, 3228744, 35927, 2899, 2166, 59595, 552222, 69806, 62212, 1236847, 18330, 4933, 10969, 1302, 80571, 99456, 1428187, 22867, 83710, 1706, 47751, 177839, 1028, 6341099, 238073, 735, 967, 705827, 2672, 629, 326275, 36209, 4483834, 7344, 12486, 3355474, 3063096, 184299, 13423, 2529269, 705827, 166157, 2098, 2796204, 6849367, 14506, 219542, 84492, 106763, 19192, 1046, 2835890, 1884, 2262209, 2019762, 4331872, 1599623, 69125, 144517, 1508, 31530, 9686468, 13376, 50618, 1938, 6341099, 13486, 764, 1240221, 288618, 389322, 3963, 872 };
		for (int ndx = 0; ndx < 100; ndx++)
			Util.Check("Fixed32.RSqrtFast", Fixed32.RSqrtFast(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed32.RSqrtFastest()
	public static void Fixed32_RSqrtFastest()
	{
		int[] input0 = new int[]{ 1797, 342249, 24, 149506, 14618006, 2, 3987563, 178288, 15245, 24598825, 103, 5, 150, 2908037, 291210573, 150256, 233400, 249792605, 558536, 660258872, 13564628, 169482, 346, 6958585, 1163, 522, 901438996, 927991087, 13030, 428, 14, 822, 28, 101, 88192, 172900, 5, 111102, 8102, 52129, 3629149, 1387, 37, 142, 30495, 39715, 992390, 2881, 5705984, 6406, 846194, 14525, 3570526, 29135801, 54, 11388185, 1978, 3736, 256, 55999, 2, 4613852, 27, 71, 3365955, 134629402, 207064680, 2, 65, 3368, 52381, 4, 61657, 21, 363, 19558, 9125, 4, 456, 31462895, 564876, 625624, 325, 4, 543990, 1080434, 247463, 1057, 3, 8315267, 174, 1648577, 864, 155361023, 38729, 844580494, 101, 560776355, 45479, 243216 };
		int[] output0 = new int[]{ 395896, 28673, 3422374, 43417, 4389, 11863283, 8407, 39717, 135969, 3380, 1652452, 7504160, 1370587, 9833, 983, 43308, 34742, 1062, 22461, 653, 4553, 40749, 901617, 6358, 492275, 734494, 558, 550, 146907, 810867, 4485195, 584931, 3171512, 1668546, 56475, 40339, 7504160, 50334, 186434, 73447, 8808, 450315, 2759781, 1408849, 96137, 84216, 16852, 312395, 7020, 209501, 18231, 139262, 8879, 3108, 2283019, 4969, 377437, 274644, 1048576, 70903, 11863283, 7815, 3228677, 1992414, 9140, 1445, 1165, 11863283, 2081365, 289020, 73272, 8388608, 67610, 3660420, 880056, 120019, 175748, 8388608, 786005, 2993, 22336, 21220, 930676, 8388608, 22756, 16146, 33748, 516225, 9679935, 5819, 1271368, 13059, 570754, 1346, 85293, 576, 1668546, 708, 78631, 34041 };
		for (int ndx = 0; ndx < 100; ndx++)
			Util.Check("Fixed32.RSqrtFastest", Fixed32.RSqrtFastest(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed64.Exp()
	public static void Fixed64_Exp()
	{
		long[] input0 = new long[]{ 63740265829L, 114057919453L, -268080923924L, -111783513452L, 339703025958L, 92407557043L, 367718277171L, 84306473839L, 52991996224L, 178139645082L, -124840709458L, -172662585480L, -339644808358L, -71143964633L, 330728490754L, -98526047445L, -20969829809L, -348042119962L, 47363025822L, -380936816777L, -160318893874L, 91214988642L, 419768081995L, -72394867033L, -303066663941L, 282104680331L, 201853695893L, 94813304244L, 109012935050L, -196869550291L, -204618678695L, -41680079419L, 38692089018L, 161199952275L, 457L, 34981446851L, 49564L, 2474187071L, 30L, 1L, 55843467L, 29890294423L, 94905589L, 2759L, 19524L, 6584532391L, 1240359L, 2556444359L, 1L, 13L, 281232L, 11L, 24355L, 50752L, 726L, 19627586729L, 7059255L, 162435392L, 233L, 5L, 1897546312L, 2388L, 21238974285L, 1238L, 54693L, 4013883659L, 103926986L, 27121L, -59L, -3158564395L, -10831090985L, -1978948L, -14261626388L, -554387L, -3069L, -3086L, -1262534071L, -11796568L, -1L, -239L, -518L, -1097559604L, -1950309L, -347693L, -115729766L, -51L, -2L, -12L, -28209L, -1000L, -4955L, -13105467L, -10608506L, -5L, -32L, -23380L, -1L, -76631L, -2166733347L, -208920L };
		long[] output0 = new long[]{ 11972598338420736L, 9223372036854775807L, 0L, 0L, 9223372036854775807L, -8963853560026497024L, 9223372036854775807L, 1438079641259606016L, 980290722856960L, 9223372036854775807L, 0L, 0L, 0L, 274L, 9223372036854775807L, 0L, 32550096L, 0L, 264344326373376L, 0L, 0L, 7183757579120541696L, 9223372036854775807L, 205L, 0L, 9223372036854775807L, 9223372036854775807L, -1843124046154170368L, 9223372036854775807L, 0L, 0L, 262055L, 35106723364864L, 9223372036854775807L, 4294967748L, 14797250027520L, 4295016856L, 7640862404L, 4294967320L, 4294967296L, 4351175652L, 4522501369856L, 4390929580L, 4294970052L, 4294986816L, 19896120512L, 4296207836L, 7788610944L, 4294967296L, 4294967304L, 4295248536L, 4294967304L, 4294991648L, 4295018044L, 4294968016L, 414613851648L, 4302032400L, 4460513828L, 4294967528L, 4294967296L, 6680887516L, 4294969680L, 603368411648L, 4294968532L, 4295021988L, 10935332512L, 4400162248L, 4294994412L, 4294967228L, 2058615047L, 344946507L, 4292988808L, 155190823L, 4294412940L, 4294964220L, 4294964200L, 3201077128L, 4283186968L, 4294967284L, 4294967050L, 4294966770L, 3326425848L, 4293017432L, 4294619612L, 4180783162L, 4294967236L, 4294967284L, 4294967274L, 4294939078L, 4294966290L, 4294962332L, 4281881860L, 4284371928L, 4294967282L, 4294967256L, 4294943910L, 4294967284L, 4294890660L, 2593379750L, 4294758374L };
		for (int ndx = 0; ndx < 100; ndx++)
			Util.Check("Fixed64.Exp", Fixed64.Exp(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed64.ExpFast()
	public static void Fixed64_ExpFast()
	{
		long[] input0 = new long[]{ -283936930732L, -295372575537L, 187058901887L, -321770074349L, -290304530335L, 361041271168L, -304514621141L, 319852362348L, -331069254354L, 378768318376L, -333230303155L, 411481725591L, 223327745503L, 428554938799L, 267766517924L, -410288723991L, 194249895490L, -42860416619L, 27945436213L, -185313904686L, 312894343545L, 130087782660L, 428116271599L, 330567118753L, 39417949018L, -193826448690L, 370586035172L, 328281352752L, -87764101040L, 358262472366L, -159589153474L, -88835740641L, 246593383914L, 10200091404L, 3L, 11L, 25L, 90494L, 6579L, 814354955L, 1L, 59L, 31956283496L, 119765L, 64L, 8280L, 4671899755L, 10897129L, 597L, 18L, 19090841L, 989508L, 7160895118L, 2056904L, 5798708L, 322105L, 47L, 718718042L, 1452218L, 2746098504L, 32719827662L, 630L, 111080L, 125L, 4613187L, 40527290L, 109L, 434L, -11057640432L, -37696913L, -2899110832L, -581L, -9L, -24240729L, -715L, -26207950L, -11354327L, -344779L, -39786581L, -76L, -7597L, -735L, -4018117L, -899L, -295L, -95183698L, -98816L, -113L, -2052906810L, -504197L, -10240567768L, -1530L, -2676383195L, -102911L, -1068962812L, -100291127L, -22829635L, -253756057L, -1115035567L, -68209L };
		long[] output0 = new long[]{ 0L, 0L, 9223372036854775807L, 0L, 0L, 9223372036854775807L, 0L, 9223372036854775807L, 0L, 9223372036854775807L, 0L, 9223372036854775807L, 9223372036854775807L, 9223372036854775807L, 9223372036854775807L, 0L, 9223372036854775807L, 199085L, 2875552970752L, 0L, 9223372036854775807L, 9223372036854775807L, 9223372036854775807L, 9223372036854775807L, 41570778578944L, 0L, 9223372036854775807L, 9223372036854775807L, 5L, 9223372036854775807L, 0L, 4L, 9223372036854775807L, 46170413152L, 4294967296L, 4294967304L, 4294967320L, 4295057772L, 4294973868L, 5191661532L, 4294967296L, 4294967352L, 7316183740416L, 4295087040L, 4294967356L, 4294975572L, 12745811200L, 4305876516L, 4294967892L, 4294967312L, 4314097656L, 4295956752L, 22753562832L, 4297024352L, 4300768972L, 4295289356L, 4294967340L, 5077331996L, 4296419516L, 8140268384L, 8739631087616L, 4294967924L, 4295078356L, 4294967420L, 4299582204L, 4335680548L, 4294967404L, 4294967728L, 327223979L, 4257439748L, 2186801248L, 4294966712L, 4294967280L, 4270797806L, 4294966578L, 4268842328L, 4283629406L, 4294622572L, 4255369060L, 4294967216L, 4294959694L, 4294966556L, 4290951576L, 4294966392L, 4294966996L, 4200839814L, 4294868488L, 4294967180L, 2663038236L, 4294463190L, 395788008L, 4294965762L, 2303194530L, 4294864394L, 3348636688L, 4195847630L, 4272201028L, 4048575506L, 3312907386L, 4294899092L };
		for (int ndx = 0; ndx < 100; ndx++)
			Util.Check("Fixed64.ExpFast", Fixed64.ExpFast(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed64.ExpFastest()
	public static void Fixed64_ExpFastest()
	{
		long[] input0 = new long[]{ -277859715129L, 138534559064L, 186625945886L, 41703917419L, -231842424707L, -64630040630L, -23329050210L, -229921441907L, -150067342669L, 376573731175L, 304507760341L, 117645908254L, -327963212752L, -84080616239L, 19513850609L, 188384943087L, 122182164656L, -260534267521L, 399587422386L, 323298672750L, -218409666701L, 428313779199L, -109683945051L, -78800059436L, 232862323508L, 77629151836L, -108794972250L, 102737989447L, 296650993938L, 13696799806L, -424654898797L, 320495920749L, 145958607867L, -206051689495L, 1L, 30362012L, 746067L, 5L, 3L, 386246996L, 893L, 334L, 1697339233L, 9278354997L, 17773113L, 1728L, 84L, 141857L, 12229095764L, 24L, 14L, 184933L, 595176288L, 23006478989L, 166L, 77L, 1181L, 1929L, 184810103L, 6341596L, 3L, 1181550581L, 13026L, 403480648L, 8277973279L, 27230279890L, 19164350172L, 1330120354L, -18466L, -511280672L, -59L, -1141783L, -38L, -47L, -2330985L, -1L, -24L, -42097L, -52997826L, -91488L, -22354L, -2824108093L, -13607451L, -40547437L, -20590L, -266611L, -3L, -24792644L, -3L, -563127093L, -25691L, -386L, -1372L, -21790L, -109691801L, -32461L, -1102880154L, -4L, -1L, -28033109L };
		long[] output0 = new long[]{ 0L, 9223372036854775807L, 9223372036854775807L, 70785688797184L, 0L, 1252L, 18794496L, 0L, 0L, 9223372036854775807L, 9223372036854775807L, 9223372036854775807L, 0L, 13L, 403745569024L, 9223372036854775807L, 9223372036854775807L, 0L, 9223372036854775807L, 9223372036854775807L, 0L, 9223372036854775807L, 0L, 46L, 9223372036854775807L, 303832271666806784L, 0L, 9223372036854775807L, 9223372036854775807L, 104211541248L, 0L, 9223372036854775807L, 9223372036854775807L, 0L, 4294967296L, 4325530508L, 4295715872L, 4294967296L, 4294967296L, 4699578692L, 4294968188L, 4294967628L, 6376138984L, 37256680608L, 4312833508L, 4294969028L, 4294967376L, 4295109620L, 74058484672L, 4294967316L, 4294967308L, 4295152836L, 4933633996L, 910593418752L, 4294967460L, 4294967368L, 4294968476L, 4294969228L, 4484210724L, 4301334136L, 4294967296L, 5654521652L, 4294980364L, 4718464280L, 29514587712L, 2434701631488L, 372185035520L, 5853470120L, 4294948872L, 3813314688L, 4294967234L, 4293828496L, 4294967254L, 4294967246L, 4292642714L, 4294967290L, 4294967270L, 4294925300L, 4242414258L, 4294876032L, 4294944994L, 2225508408L, 4281414384L, 4254704054L, 4294946752L, 4294701352L, 4294967288L, 4270304940L, 4294967288L, 3767534922L, 4294941664L, 4294966908L, 4294965926L, 4294945556L, 4186884478L, 4294934914L, 3322187566L, 4294967288L, 4294967290L, 4267091626L };
		for (int ndx = 0; ndx < 100; ndx++)
			Util.Check("Fixed64.ExpFastest", Fixed64.ExpFastest(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed32.Exp()
	public static void Fixed32_Exp()
	{
		int[] input0 = new int[]{ -2130636, -2316693, -5462089, -4854039, 6066654, 531611, -2013532, 2197033, -1629832, -3924982, -5933409, 4640812, 1082022, -2479097, -3530004, -4422553, -4163803, 2247641, -1262672, -1016277, 5682125, -2993364, 4021603, 1025920, -1254396, 5553112, -2954087, 3158389, -1291653, -4265503, -4483974, -5611078, -914375, -6212652, 10, 5, 55464, 1933, 28332, 118196, 16, 250, 116, 98412, 37940, 2473, 8820, 536332, 19, 3756, 43, 19, 8198, 3251, 33958, 4, 1410, 1219, 20033, 3, 58, 4366, 58, 25, 3, 479561, 435, 2347, -20, -12, -186, -6868, -233749, -1867, -53, -2251, -355616, -375368, -53435, -89961, -56, -79, -2569, -57131, -278492, -501669, -398, -95141, -53, -4, -2762, -90, -63234, -17226, -4034, -2406, -8, -9, -57256, -51849 };
		int[] output0 = new int[]{ 0, 0, 0, 0, 2147483647, 218445422, 0, 2147483647, 0, 0, 0, 2147483647, 2147483647, 0, 0, 0, 0, 2147483647, 0, 0, 2147483647, 0, 2147483647, 2147483647, 0, 2147483647, 0, 2147483647, 0, 0, 0, 0, 0, 0, 65545, 65540, 152765, 67497, 100978, 397863, 65551, 65786, 65651, 294191, 116922, 68055, 74976, 234762263, 65554, 69401, 65578, 65554, 74268, 68868, 110029, 65539, 66961, 66765, 88967, 65538, 65593, 70050, 65593, 65560, 65538, 98723132, 65972, 67924, 65515, 65523, 65349, 59015, 1851, 63695, 65482, 63322, 288, 213, 28998, 16608, 65479, 65457, 63016, 27408, 935, 31, 65138, 15346, 65482, 65531, 62831, 65445, 24971, 50387, 61623, 63173, 65527, 65526, 27356, 29708 };
		for (int ndx = 0; ndx < 100; ndx++)
			Util.Check("Fixed32.Exp", Fixed32.Exp(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed32.ExpFast()
	public static void Fixed32_ExpFast()
	{
		int[] input0 = new int[]{ -4760081, -5187430, 3965125, -6128488, -3453260, 1322160, -3144153, -5026903, -2311581, -3753058, -5059928, 790456, 2652710, 5003460, 3621273, 6232925, -6006140, -546820, -3034680, -5718792, 766954, 993317, -2654887, -5002145, 989827, -5813256, 4262526, -3862110, 5758591, 2622225, -797352, 4367148, -4612917, -6522492, 15825, 15, 981, 1701, 2833, 135, 18439, 90, 1560, 3, 344569, 2, 3982, 283953, 295185, 5505, 1415, 8281, 97787, 25500, 43, 2485, 56337, 11869, 662, 19, 37947, 4, 18, 5499, 37387, 70, 375, 14518, -18, -5098, -978, -1309, -155907, -293444, -159, -53, -3, -49, -17, -2662, -674, -164300, -60, -110, -20, -41841, -527990, -336, -31355, -12, -174, -54202, -5, -287, -2333, -9196, -9, -185982, -62, -9743 };
		int[] output0 = new int[]{ 0, 0, 2147483647, 0, 0, 2147483647, 0, 0, 0, 0, 0, 2147483647, 2147483647, 2147483647, 2147483647, 2147483647, 0, 15, 0, 0, 2147483647, 2147483647, 0, 0, 2147483647, 0, 2147483647, 0, 2147483647, 2147483647, 0, 2147483647, 0, 0, 83434, 65550, 66524, 67259, 68430, 65670, 86829, 65625, 67114, 65538, 12585123, 65537, 69640, 4990811, 5923799, 71277, 66965, 74362, 291401, 96707, 65578, 68068, 154814, 78547, 66201, 65554, 116934, 65539, 65553, 71271, 115939, 65605, 65912, 81787, 65517, 60631, 64565, 64239, 6071, 744, 65376, 65482, 65532, 65486, 65518, 62927, 64865, 5341, 65475, 65425, 65515, 34610, 20, 65200, 40615, 65523, 65361, 28661, 65530, 65249, 63244, 56956, 65526, 3837, 65473, 56482 };
		for (int ndx = 0; ndx < 100; ndx++)
			Util.Check("Fixed32.ExpFast", Fixed32.ExpFast(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed32.ExpFastest()
	public static void Fixed32_ExpFastest()
	{
		int[] input0 = new int[]{ 1269001, 5218642, 3397513, -2364742, -4770883, -6472703, 3524204, 5419458, -1317112, 6339079, 126737, 717765, 198705, 5117832, 2906297, 5041104, 3756899, 4737507, -783183, 6437461, -2650437, -6441550, 5758912, -6171093, -3070668, 2410500, -835470, -57160, -1564227, 2369689, -4786574, -4580196, 6305763, 5000, 445681, 2458, 10, 341019, 19, 18, 2, 4, 2, 38599, 6446, 49834, 78, 20, 9861, 10103, 138185, 55, 693, 69, 221, 3512, 388272, 21254, 3, 623, 2782, 64, 1736, 18411, 96084, 191, 2917, 2, -239756, -15, -28366, -83818, -11515, -56, -487226, -36, -2, -15, -294, -768, -302, -49, -71981, -16313, -53941, -130576, -12782, -14757, -10, -253, -4149, -329, -172079, -20603, -4469, -24509, -1824, -75, -263274, -67 };
		int[] output0 = new int[]{ 2147483647, 2147483647, 2147483647, 0, 0, 0, 2147483647, 2147483647, 0, 2147483647, 453281, 2147483647, 1358993, 2147483647, 2147483647, 2147483647, 2147483647, 2147483647, 0, 2147483647, 0, 0, 2147483647, 0, 0, 2147483647, 0, 27397, 0, 2147483647, 0, 0, 2147483647, 70738, 58876802, 68046, 65545, 11920475, 65554, 65553, 65537, 65539, 65537, 118116, 72316, 140203, 65613, 65555, 76180, 76461, 539793, 65590, 66234, 65604, 65757, 69150, 24515054, 90630, 65538, 66163, 68383, 65600, 67299, 86784, 283955, 65727, 68524, 65537, 1689, 65520, 42507, 18241, 54978, 65480, 38, 65500, 65533, 65520, 65242, 64774, 65235, 65486, 21849, 51093, 28777, 8937, 53924, 52322, 65525, 65283, 61521, 65208, 4744, 47853, 61221, 45083, 63740, 65460, 1179, 65468 };
		for (int ndx = 0; ndx < 100; ndx++)
			Util.Check("Fixed32.ExpFastest", Fixed32.ExpFastest(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed64.Exp2()
	public static void Fixed64_Exp2()
	{
		long[] input0 = new long[]{ -237549970710L, -194303299890L, -203567453094L, 6870227403L, 359672259167L, -395681463984L, 68785125432L, -259856313121L, -169106952678L, -307053035542L, 72072641433L, 254622401518L, -140080618265L, 73234684634L, -380725644777L, -156773459073L, -45390232221L, 277988380329L, 356790415966L, 408750158790L, 145278499067L, 319861940348L, 330898249154L, 33887711415L, 51689425424L, -128052097859L, 380844627977L, 390146347181L, 133865401062L, -227280679505L, 164563794276L, 188033989887L, -228344187106L, -329740263553L, 404L, 19L, 33136483279L, 2410L, 254169904L, 132899277L, 1301L, 172463L, 17127L, 31256012991L, 301600494L, 362416109L, 4L, 1951L, 13569488L, 1204L, 1339L, 38205399L, 8616L, 13372235428L, 2905222L, 5408L, 13545L, 49390812L, 11972094867L, 1089543L, 10L, 4518808L, 574535L, 5L, 62387L, 1575957676L, 951373L, 222L, -4134L, -8800144481L, -3079L, -23L, -2L, -40L, -18272637L, -75L, -110193L, -3552182426L, -77532395L, -107167819L, -1099L, -5500144L, -1031L, -7808L, -10210586650L, -25371760744L, -5113L, -992L, -253866L, -3209911727L, -62134058L, -670L, -8648L, -233L, -12668028L, -12367597L, -12892583354L, -3262L, -500994L, -8219537105L };
		long[] output0 = new long[]{ 0L, 0L, 0L, 13016292120L, 9223372036854775807L, 0L, 284473009373184L, 0L, 0L, 0L, 483570437324800L, 9223372036854775807L, 0L, 583319201251328L, 0L, 0L, 2828808L, 9223372036854775807L, 9223372036854775807L, 9223372036854775807L, 9223372036854775807L, 9223372036854775807L, 9223372036854775807L, 1018863365632L, 18022724042752L, 4L, 9223372036854775807L, 9223372036854775807L, -8084520630361260032L, 0L, 9223372036854775807L, 9223372036854775807L, 0L, 0L, 4294967576L, 4294967304L, 902532921344L, 4294968964L, 4474808104L, 4388081404L, 4294968196L, 4295086836L, 4294979164L, 666289185792L, 4509192484L, 4553667048L, 4294967296L, 4294968644L, 4304383312L, 4294968128L, 4294968220L, 4321531220L, 4294973268L, 37171199776L, 4296981524L, 4294971044L, 4294976684L, 4329339392L, 29653234816L, 4295722576L, 4294967300L, 4298100656L, 4295365552L, 4294967296L, 4295010536L, 5538819108L, 4295626788L, 4294967448L, 4294964424L, 1037926274L, 4294965154L, 4294967272L, 4294967284L, 4294967260L, 4282320380L, 4294967236L, 4294890908L, 2420978264L, 4241560978L, 4221323190L, 4294966528L, 4291156590L, 4294966574L, 4294961878L, 826627728L, 71561321L, 4294963744L, 4294966602L, 4294791326L, 2558469808L, 4252114644L, 4294966824L, 4294961294L, 4294967126L, 4286195498L, 4286403314L, 536205778L, 4294965028L, 4294620040L, 1139884078L };
		for (int ndx = 0; ndx < 100; ndx++)
			Util.Check("Fixed64.Exp2", Fixed64.Exp2(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed64.Exp2Fast()
	public static void Fixed64_Exp2Fast()
	{
		long[] input0 = new long[]{ -220999854702L, 295586544737L, 403158234387L, 202332671094L, 396570905584L, -287755737533L, 154562790271L, -241599180312L, -198093313092L, -59086641427L, 323743058350L, -8256919403L, 413675854792L, -264038619122L, -187467543887L, -32563233815L, -135296856263L, -278688856329L, -320919925949L, -23651691011L, 13923097006L, -188621421487L, 182540352685L, -46341551421L, -255713280319L, -376026998775L, 222327303903L, 266674803124L, -14281276606L, -415802230393L, -235552583509L, -306011233942L, -118417419855L, 265875819923L, 281324L, 49992L, 11652050L, 668695L, 19958L, 179690363L, 1494L, 24L, 1L, 6L, 1L, 379L, 1053L, 77L, 10113623684L, 154L, 2822L, 175218762L, 147L, 4L, 26669L, 17067379428L, 25L, 366509L, 467598L, 3660341496L, 20842L, 1758705591L, 65937000L, 495L, 152L, 62423344L, 23L, 67L, -17055237L, -851114045L, -301965184L, -281484053L, -158340686L, -5277L, -70L, -12763L, -706L, -5708384L, -36328L, -16034770542L, -187211278L, -1512594L, -1760106321L, -892L, -22486015L, -61673L, -9815551240L, -1494L, -15190L, -707947L, -1993L, -31L, -1L, -234188L, -8621L, -36508L, -15728L, -117590329L, -1854035264L, -1047L };
		long[] output0 = new long[]{ 0L, 9223372036854775807L, 9223372036854775807L, 9223372036854775807L, 9223372036854775807L, 0L, 9223372036854775807L, 0L, 0L, 310196L, 9223372036854775807L, 1133024097L, 9223372036854775807L, 0L, 0L, 22420011L, 1L, 0L, 0L, 94457404L, 40627206336L, 0L, 9223372036854775807L, 2426202L, 0L, 0L, 9223372036854775807L, 9223372036854775807L, 428546555L, 0L, 0L, 0L, 21L, 9223372036854775807L, 4295162264L, 4295001940L, 4303050172L, 4295430744L, 4294981124L, 4421329668L, 4294968328L, 4294967312L, 4294967296L, 4294967296L, 4294967296L, 4294967556L, 4294968024L, 4294967348L, 21969239584L, 4294967400L, 4294969248L, 4418140308L, 4294967392L, 4294967296L, 4294985776L, 67483309792L, 4294967312L, 4295221304L, 4295291364L, 7753727156L, 4294981736L, 5704618468L, 4340908908L, 4294967636L, 4294967400L, 4338448360L, 4294967308L, 4294967340L, 4283163258L, 3743745410L, 4090692588L, 4104235958L, 4186614494L, 4294963634L, 4294967242L, 4294958446L, 4294966802L, 4291012880L, 4294942116L, 322923749L, 4167154234L, 4293919104L, 3232916164L, 4294966674L, 4279411380L, 4294924546L, 881041935L, 4294966256L, 4294956764L, 4294476672L, 4294965910L, 4294967270L, 4294967288L, 4294804992L, 4294961316L, 4294941992L, 4294956394L, 4214236712L, 3184279730L, 4294966566L };
		for (int ndx = 0; ndx < 100; ndx++)
			Util.Check("Fixed64.Exp2Fast", Fixed64.Exp2Fast(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed64.Exp2Fastest()
	public static void Fixed64_Exp2Fastest()
	{
		long[] input0 = new long[]{ -331305718354L, -333121537555L, -2146114200L, -342658405159L, -78699003036L, 25656751811L, -425943111598L, 304048777141L, 334738431955L, -403641568787L, 166930852277L, -3288226601L, -348401106762L, 63117284229L, -325186788351L, 279172563929L, 429468797199L, -36171230616L, 53274620624L, 218990321101L, 252044987117L, 283199131131L, 239484467511L, -317862144748L, 25361395011L, 134198359462L, 240549709112L, -200870343493L, 412278629591L, 210298695097L, 422169182796L, 7711767803L, 226594426705L, -305082748742L, 976372821L, 12004991L, 7L, 148122103L, 1741960276L, 52L, 55732L, 8L, 22258L, 7269L, 1259345374L, 453688083L, 3L, 49039L, 11977L, 625670L, 36537L, 9139057704L, 124L, 17L, 164730L, 1062L, 3507L, 8092L, 1195268L, 99456307L, 93957201L, 70294340L, 1964482015L, 34L, 2L, 93L, 61288882L, 12495341762L, -55095325L, -69949L, -76274599L, -289L, -1822467L, -18117L, -1910L, -33465177L, -29821L, -26265L, -821L, -40421811L, -3014095L, -4013L, -2424443737L, -42022L, -2274L, -3L, -2077L, -7593913L, -9041298L, -918838L, -3422L, -41182282L, -123L, -17L, -23871L, -34052406L, -178L, -641L, -2823L, -13466918L };
		long[] output0 = new long[]{ 0L, 0L, 3037369164L, 0L, 13092L, 269918957312L, 0L, 9223372036854775807L, 9223372036854775807L, 0L, 9223372036854775807L, 2526406344L, 0L, 113970887720960L, 0L, 9223372036854775807L, 9223372036854775807L, 12523452L, 23274754129920L, 9223372036854775807L, 9223372036854775807L, 9223372036854775807L, 9223372036854775807L, 0L, 257369204608L, -7512284270451228672L, 9223372036854775807L, 0L, 9223372036854775807L, 9223372036854775807L, 9223372036854775807L, 14910976192L, 9223372036854775807L, 0L, 5028140824L, 4303323456L, 4294967296L, 4399144856L, 5688684312L, 4294967332L, 4295006052L, 4294967300L, 4294982772L, 4294972348L, 5262786840L, 4621714864L, 4294967296L, 4295001396L, 4294975624L, 4295402420L, 4294992704L, 18773727088L, 4294967380L, 4294967304L, 4295081852L, 4294968032L, 4294969732L, 4294972920L, 4295798588L, 4364657004L, 4360776096L, 4344113528L, 5896628720L, 4294967316L, 4294967296L, 4294967356L, 4337787976L, 32269103168L, 4257035774L, 4294918928L, 4242540734L, 4294967092L, 4293707378L, 4294954766L, 4294965972L, 4271888776L, 4294946674L, 4294949132L, 4294966724L, 4267106340L, 4292883770L, 4294964518L, 2903951564L, 4294938238L, 4294965720L, 4294967290L, 4294965856L, 4289719788L, 4288720326L, 4294332032L, 4294964928L, 4266583856L, 4294967208L, 4294967280L, 4294950788L, 4271484878L, 4294967170L, 4294966848L, 4294965340L, 4285665700L };
		for (int ndx = 0; ndx < 100; ndx++)
			Util.Check("Fixed64.Exp2Fastest", Fixed64.Exp2Fastest(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed32.Exp2()
	public static void Fixed32_Exp2()
	{
		int[] input0 = new int[]{ -5481924, -5278136, 2793175, 5608847, 3982155, -3964015, -1992329, 3886474, 4038617, 3708762, 4768461, 5475770, -5329058, 4668623, -4681782, -1167491, 4658094, -797200, 4314369, 6343294, 4893621, -5435648, -2682298, -4362021, -4938223, -6223645, -6098932, -368854, 6405945, 1313378, -53496, -4498198, -5359605, 1358286, 6247, 1333, 5657, 368547, 6044, 8, 15800, 1393, 84782, 127764, 13977, 387, 5439, 151, 471843, 2, 101314, 36483, 500, 151, 49840, 626624, 52986, 2050, 54851, 39407, 15, 135934, 57055, 28, 76, 15863, 72528, 1005, -33, -6025, -42790, -185714, -57337, -16697, -67, -188, -45, -436, -783, -16194, -331, -13454, -1112, -562262, -26438, -19526, -19188, -27570, -56132, -6534, -16498, -5, -13, -100516, -371274, -76177, -16008, -6046, -3336, -577427 };
		int[] output0 = new int[]{ 0, 0, 2147483647, 2147483647, 2147483647, 0, 0, 2147483647, 2147483647, 2147483647, 2147483647, 2147483647, 0, 2147483647, 0, 0, 2147483647, 14, 2147483647, 2147483647, 2147483647, 0, 0, 0, 0, 0, 0, 1324, 2147483647, 2147483647, 37218, 0, 0, 2147483647, 70012, 66466, 69576, 3231070, 69862, 65541, 77455, 66508, 160662, 253130, 75976, 65804, 69416, 65640, 9634328, 65537, 191359, 96396, 65883, 65640, 111022, 49520533, 114779, 66972, 117065, 99423, 65546, 275976, 119826, 65555, 65588, 77507, 141132, 66236, 65513, 61490, 41680, 9192, 35736, 54926, 65489, 65405, 65504, 65234, 64995, 55219, 65306, 56843, 64769, 171, 49549, 53307, 53498, 48959, 36194, 61159, 55042, 65532, 65526, 22634, 1291, 29280, 55328, 61476, 63263, 145 };
		for (int ndx = 0; ndx < 100; ndx++)
			Util.Check("Fixed32.Exp2", Fixed32.Exp2(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed32.Exp2Fast()
	public static void Fixed32_Exp2Fast()
	{
		int[] input0 = new int[]{ 1152823, -4811378, -5005661, -2053130, -3726722, 5928174, 6087017, 2933644, -5723864, -796032, 3278673, -1600987, -5561186, -5294506, -1622878, -408152, -1593696, 4192259, -514990, 834782, 6357225, -5555352, 2402562, 1119618, 5514053, 2689884, 3286124, 5974222, 3352394, -698107, 1968160, 1510988, 4454858, -260153, 9, 61, 3002, 14, 36341, 48462, 30687, 640165, 12339, 212, 156051, 135, 2, 3, 846, 963, 623, 157760, 17, 2, 2, 1329, 603, 1733, 428, 1307, 25, 2, 436788, 5031, 45011, 11, 1854, 3853, -479502, -7, -168261, -34, -3, -9399, -54896, -554669, -279, -110, -14226, -3520, -14707, -13933, -883, -61, -612003, -32020, -568, -66084, -834, -4562, -66563, -3, -21711, -55, -3746, -27510, -2, -4, -3087, -28147 };
		int[] output0 = new int[]{ 2147483647, 0, 0, 0, 0, 2147483647, 2147483647, 2147483647, 0, 14, 2147483647, 0, 0, 0, 0, 874, 0, 2147483647, 282, 447638815, 2147483647, 0, 2147483647, 2147483647, 2147483647, 2147483647, 2147483647, 2147483647, 2147483647, 40, 2147483647, 2147483647, 2147483647, 4183, 65542, 65578, 67650, 65545, 96251, 109416, 90664, 57145697, 74671, 65683, 341411, 65629, 65537, 65538, 66124, 66206, 65969, 347638, 65547, 65537, 65537, 66463, 65955, 66748, 65833, 66448, 65553, 65537, 6649670, 69117, 105494, 65543, 66833, 68261, 411, 65531, 11056, 65512, 65533, 59334, 36671, 185, 65342, 65459, 56381, 63141, 56095, 56556, 64926, 65493, 101, 46708, 65143, 32578, 64960, 62449, 32414, 65533, 52089, 65497, 62990, 48990, 65534, 65533, 63430, 48661 };
		for (int ndx = 0; ndx < 100; ndx++)
			Util.Check("Fixed32.Exp2Fast", Fixed32.Exp2Fast(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed32.Exp2Fastest()
	public static void Fixed32_Exp2Fastest()
	{
		int[] input0 = new int[]{ 3856835, -1197668, -5524184, -1709997, 1224964, -3564014, 4460139, 59696, -3725213, -6315725, -4943478, -4803178, 4381267, 4380550, 4055606, 62881, 380038, 2604135, 1598484, -6202147, 2489348, 2865604, -4975168, -1749437, -2795334, 4583504, -100387, 3745666, -5604248, -5840541, 5986895, -2381496, 3118919, 5849370, 48021, 81, 5139, 8, 10690, 33787, 243415, 307388, 4265, 663, 958, 12208, 28, 178276, 625, 6, 33, 134, 596, 2196, 4, 5, 77, 16907, 5, 25305, 22856, 3, 483, 15, 4, 54753, 304, 158018, -3, -1420, -155171, -408, -2, -104500, -7, -27230, -8, -9123, -143678, -4095, -6836, -3818, -137, -533992, -78651, -5624, -125128, -21, -150304, -18379, -2, -199196, -2, -276860, -2, -121815, -1271, -549, -304, -11475 };
		int[] output0 = new int[]{ 2147483647, 0, 0, 0, 2147483647, 0, 2147483647, 123232, 0, 0, 0, 0, 2147483647, 2147483647, 2147483647, 127449, 3648929, 2147483647, 2147483647, 0, 2147483647, 2147483647, 0, 0, 0, 2147483647, 22663, 2147483647, 0, 0, 2147483647, 0, 2147483647, 2147483647, 108912, 65592, 69203, 65541, 73386, 93677, 860168, 1692100, 68566, 65998, 66205, 74573, 65555, 431895, 65971, 65540, 65558, 65629, 65951, 67079, 65538, 65539, 65589, 78368, 65539, 85640, 83452, 65538, 65872, 65546, 65538, 116956, 65747, 348555, 65533, 64561, 12697, 65254, 65534, 21698, 65531, 49133, 65530, 59514, 14340, 62762, 60970, 62946, 65441, 231, 28526, 61757, 17448, 65521, 13368, 53960, 65534, 7971, 65534, 3505, 65534, 18070, 64662, 65157, 65326, 58051 };
		for (int ndx = 0; ndx < 100; ndx++)
			Util.Check("Fixed32.Exp2Fastest", Fixed32.Exp2Fastest(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed64.Log()
	public static void Fixed64_Log()
	{
		long[] input0 = new long[]{ 267316L, 979189L, 10093331380429018L, 286972441469994560L, 5888L, 946983114192658L, 576388L, 118165017787L, 215528057L, 685346L, 846576931429639936L, 457656956279L, 3304875648378714L, 1009739798L, 83L, 426L, 28779002387714L, 232325416L, 1342508L, 137475760L, 281327824030428832L, 7937L, 1L, 997574L, 3722771704L, 1980642214404551168L, 20405556L, 49L, 2461709390110264L, 26845L, 31848L, 3621360023532L, 99706L, 5179L, 599900L, 927513L, 57813989882582L, 26802180L, 391618583474102L, 3L, 813937L, 143850L, 65156377977987L, 46121063847L, 140510545012519L, 12074100L, 24L, 14743131290L, 2980019330297580L, 40608802407675704L, 4291928591L, 4291187335L, 4291649350L, 4298914583L, 4297083700L, 4291374639L, 4293393875L, 4295274977L, 4294300167L, 4292574909L, 4294198755L, 4292543830L, 4297273056L, 4292467991L, 4291285184L, 4293141525L, 4293736419L, 4296103448L, 4292155908L, 4297399574L, 4294136583L, 4293446139L, 4296394519L, 4293227750L, 4291696682L, 4296327398L, 4294697130L, 4294386011L, 4295509728L, 4291816889L, 4298450764L, 4297945383L, 4292917053L, 4298701445L, 4291452647L, 4292228082L, 4295472471L, 4293318477L, 4294556623L, 4292627189L, 4290695323L, 4292400059L, 4299050895L, 4295482431L, 4295994854L, 4291518914L, 4295031759L, 4295230900L, 4294964754L, 4294710633L };
		long[] output0 = new long[]{ -41594709638L, -36018582807L, 63006919227L, 77384370543L, -57982222196L, 52843527823L, -38294673383L, 14236262496L, -12851006539L, -37551030823L, 82030730105L, 20051810546L, 58211690897L, -6218044349L, -76286647182L, -69261804096L, 37838478792L, -12528678055L, -34663219520L, -14782210599L, 77299048587L, -56699663400L, -95265423072L, -35938689311L, -614074963L, 85681346404L, -22975463700L, -78550182177L, 56946638925L, -51466055858L, -50732067410L, 28935886107L, -45830430540L, -58533285372L, -38122952299L, -36251446779L, 40834582471L, -21804329156L, 49051102204L, -90546919225L, -36812471915L, -44256130741L, 41348086227L, 10195504265L, 44648735714L, -25229224403L, -81615785812L, 5297126435L, 57767294669L, 68985985741L, -3039783L, -3781627L, -3319227L, 3945468L, 2115880L, -3594159L, -1573707L, 307668L, -667175L, -2393051L, -768603L, -2424147L, 2305140L, -2500031L, -3683687L, -1826155L, -1231055L, 1136000L, -2812307L, 2431584L, -830795L, -1521427L, 1426980L, -1739899L, -3271859L, 1359884L, -270171L, -581323L, 542396L, -3151563L, 3482056L, 2977048L, -2050727L, 3732524L, -3516083L, -2740083L, 505140L, -1649131L, -410691L, -2340743L, -4274095L, -2568007L, 4081652L, 515100L, 1027432L, -3449767L, 64456L, 263592L, -2539L, -256667L };
		for (int ndx = 0; ndx < 100; ndx++)
			Util.Check("Fixed64.Log", Fixed64.Log(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed64.LogFast()
	public static void Fixed64_LogFast()
	{
		long[] input0 = new long[]{ 2L, 179286351L, 8759098L, 7L, 1194364595L, 2316547443875806L, 22223108L, 1707491436836494L, 4803138768521266L, 43L, 276465406959L, 32184527104038932L, 1425123582407555840L, 250012L, 791890L, 33530117869L, 712054911799387520L, 3651701528158176L, 161L, 41080719278657920L, 39673382304035L, 8L, 2293L, 435778253706874560L, 371399911239711L, 5950L, 3088227L, 95L, 4478289665569L, 2L, 652L, 319231850299265472L, 254862226148109600L, 54L, 117L, 445365573L, 728717193L, 10628L, 234066580L, 99084L, 501304623783738L, 73393302082058L, 544200725L, 6333803L, 297127889546L, 160L, 18490L, 6413482259533L, 36068L, 11L, 4291892048L, 4296459403L, 4294214902L, 4295908460L, 4297042431L, 4299037283L, 4292922621L, 4294337018L, 4292948119L, 4293111071L, 4294754915L, 4293140012L, 4291859309L, 4297710483L, 4298722329L, 4296470164L, 4298848267L, 4298227557L, 4292203218L, 4297995488L, 4291436960L, 4297034028L, 4293980902L, 4297977843L, 4291552232L, 4299139184L, 4295657669L, 4297677237L, 4293508443L, 4296360691L, 4299035412L, 4296352799L, 4298075730L, 4296012631L, 4298218486L, 4294766581L, 4295181695L, 4293443427L, 4293687625L, 4291848306L, 4292399516L, 4291084087L, 4298837562L, 4292082599L, 4297475502L, 4294966375L, 4295863860L, 4296241463L, 4294340081L, 4298742412L };
		long[] output0 = new long[]{ -92288378601L, -13641739351L, -26607776291L, -86907802622L, -5496831890L, 56685600973L, -22608993116L, 55375407618L, 59817453832L, -79111192029L, 17887000026L, 67987409922L, 84267602076L, -41882140301L, -36930414203L, 8826158586L, 81287501289L, 58640304309L, -73440958243L, 69035608841L, 39217310831L, -86334289659L, -62032617303L, 79178581194L, 48823431312L, -57937232724L, -31085264637L, -75706671434L, 29848101662L, -92288378601L, -67433844237L, 77841913390L, 76874716187L, -78132866705L, -74812041582L, -9733700620L, -7618901485L, -55445718437L, -12496609643L, -45857308400L, 50111639360L, 41859372418L, -8872891257L, -28000173750L, 18196565346L, -73467717523L, -53067433010L, 31390686550L, -50197644679L, -84966541303L, -3076363L, 1491820L, -752467L, 941044L, 2074596L, 4067996L, -2045171L, -630331L, -2019663L, -1856639L, -212391L, -1827683L, -3109123L, 2742264L, 3753336L, 1502580L, 3879156L, 3258972L, -2764979L, 3027076L, -3531799L, 2066200L, -986515L, 3009444L, -3416439L, 4169800L, 690304L, 2709044L, -1459107L, 1393140L, 4066128L, 1385252L, 3107260L, 1045188L, 3249908L, -200727L, 214384L, -1524151L, -1279871L, -3120135L, -2568555L, -3884979L, 3868464L, -2885679L, 2507432L, -923L, 896456L, 1273952L, -627267L, 3773400L };
		for (int ndx = 0; ndx < 100; ndx++)
			Util.Check("Fixed64.LogFast", Fixed64.LogFast(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed64.LogFastest()
	public static void Fixed64_LogFastest()
	{
		long[] input0 = new long[]{ 1273L, 3259420L, 3006793806L, 20285263L, 1107933786650022272L, 30921842L, 242586L, 30906290407L, 2936023879L, 129250399949775L, 21828184L, 215786965L, 63L, 177266126769L, 623748L, 1557817501508133L, 87364652L, 4340342903L, 363797799905967488L, 390240299L, 629L, 549783663805L, 7276178151L, 5L, 1438948988574L, 5L, 559657898827719L, 13378L, 12L, 174904144808L, 12950676L, 248718699797409024L, 17745032L, 19713921L, 1814398213L, 455310514374L, 738L, 603738773L, 1686273314197L, 808557013L, 3278L, 946748869612844416L, 1663832900834806L, 128290635048L, 76236849278542L, 121785969608740L, 573632407489260416L, 3114140L, 8621689736549923L, 1803335019266016512L, 4291312975L, 4291429607L, 4296749293L, 4298977732L, 4297453261L, 4295285776L, 4297719749L, 4294677278L, 4297028027L, 4298623443L, 4295919926L, 4291250984L, 4294996147L, 4298444571L, 4293891629L, 4294631594L, 4291171199L, 4296731877L, 4291587347L, 4296561862L, 4296342519L, 4298875512L, 4298069478L, 4294652755L, 4293006698L, 4292275710L, 4297658887L, 4298688129L, 4293226436L, 4298374322L, 4291441431L, 4294469335L, 4293825160L, 4291361392L, 4295203382L, 4293185972L, 4292598367L, 4294290836L, 4295835220L, 4298907618L, 4297577893L, 4296573480L, 4296944555L, 4296936235L, 4298111350L, 4291710260L, 4294617688L, 4298494010L, 4292562023L, 4293098374L };
		long[] output0 = new long[]{ -64560099126L, -30853654049L, -1531581863L, -23000793892L, 83186318437L, -21190154592L, -42011566561L, 8476279678L, -1633852079L, 44290058066L, -22686031152L, -12845908755L, -77470799813L, 15978160067L, -37955446175L, 54981275730L, -16729390102L, 45133344L, 78403206938L, -10301356760L, -67588039761L, 20839528833L, 2264180836L, -88352908894L, 24971868484L, -88352908894L, 50584560744L, -54457392641L, -84592975891L, 15920566743L, -24928331015L, 76769982747L, -23575460920L, -23123486252L, -3700896946L, 20029730882L, -66901847981L, -8426905129L, 25652991208L, -7172515453L, -60497777627L, 82511029685L, 55264011722L, 14589445824L, 42022669950L, 44034550190L, 80359071410L, -31049525657L, 62330087988L, 85278446072L, -3656919L, -3540159L, 1781364L, 4007984L, 2484880L, 318420L, 2751168L, -290119L, 2059928L, 3654060L, 952380L, -3718983L, 28840L, 3475360L, -1076119L, -335819L, -3798855L, 1763956L, -3382251L, 1594032L, 1374796L, 3905872L, 3100608L, -314655L, -1961623L, -2693211L, 2690352L, 3718684L, -1741723L, 3405180L, -3528319L, -498147L, -1142627L, -3608447L, 236040L, -1782219L, -2370267L, -676719L, 867704L, 3937944L, 2609420L, 1605644L, 1976508L, 1968196L, 3142444L, -3259211L, -349731L, 3524752L, -2406651L, -1869875L };
		for (int ndx = 0; ndx < 100; ndx++)
			Util.Check("Fixed64.LogFastest", Fixed64.LogFastest(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed32.Log()
	public static void Fixed32_Log()
	{
		int[] input0 = new int[]{ 2409786, 280, 255, 58, 1190, 22, 191, 269, 2332848, 365638, 4168457, 111554183, 59, 46083329, 39804370, 59, 2590056, 9920, 3922, 10, 233, 722422, 16, 39, 99729331, 625543065, 182, 28, 328942, 41, 4466091, 152330292, 3357217, 2, 111, 46436773, 113, 109, 9061919, 7306, 7, 723613813, 4401772, 1042245769, 224, 201316916, 66890, 110792463, 125797368, 2444030, 65525, 65475, 65540, 65488, 65476, 65478, 65488, 65482, 65507, 65515, 65587, 65482, 65555, 65541, 65585, 65578, 65493, 65490, 65554, 65600, 65597, 65536, 65557, 65597, 65472, 65504, 65589, 65484, 65590, 65596, 65530, 65514, 65501, 65588, 65566, 65561, 65518, 65545, 65597, 65488, 65562, 65484, 65590, 65525, 65537, 65597, 65514, 65494, 65486, 65524 };
		int[] output0 = new int[]{ 236236, -357536, -363665, -460712, -262711, -524242, -382604, -360162, 234110, 112659, 272150, 487565, -459591, 429627, 420028, -459591, 240964, -123735, -184549, -575915, -369578, 157286, -545112, -486722, 480221, 600555, -385767, -508438, 105727, -483444, 276670, 507982, 257966, -681390, -418173, 430128, -417003, -419365, 323041, -143780, -599290, 610100, 275720, 634012, -372160, 526255, 1340, 487115, 495439, 237161, -11, -61, 3, -48, -60, -58, -48, -54, -29, -21, 50, -54, 18, 4, 48, 41, -43, -46, 17, 63, 60, 0, 20, 60, -64, -32, 52, -52, 53, 59, -6, -22, -35, 51, 29, 24, -18, 8, 60, -48, 25, -52, 53, -11, 0, 60, -22, -42, -50, -12 };
		for (int ndx = 0; ndx < 100; ndx++)
			Util.Check("Fixed32.Log", Fixed32.Log(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed32.LogFast()
	public static void Fixed32_LogFast()
	{
		int[] input0 = new int[]{ 6058621, 3025, 268, 146758355, 4661523, 214692248, 3784, 169196, 23, 15589940, 40, 4, 75, 1272, 117291229, 146801, 60132986, 6548218, 25382260, 81, 17521, 340442, 82, 49213, 681, 64793341, 270457, 265, 19115, 5, 226424036, 4487091, 760094642, 45417, 175, 12, 13, 1768, 62, 23712743, 1139, 21283796, 18167, 73, 885143933, 1318202, 247865702, 294275, 81208, 441151094, 65485, 65547, 65518, 65593, 65596, 65489, 65493, 65567, 65550, 65584, 65513, 65487, 65484, 65480, 65584, 65525, 65477, 65559, 65483, 65575, 65531, 65538, 65545, 65470, 65584, 65555, 65489, 65471, 65537, 65552, 65592, 65600, 65564, 65535, 65592, 65514, 65517, 65476, 65540, 65480, 65589, 65516, 65565, 65509, 65533, 65494, 65561, 65519, 65511, 65544 };
		int[] output0 = new int[]{ 296657, -201568, -360406, 505539, 279477, 530471, -186897, 62158, -521329, 358598, -485063, -635964, -443866, -258343, 490851, 52853, 447067, 301750, 390541, -438822, -86455, 107979, -438018, -18773, -299289, 451958, 92898, -361144, -80749, -621341, 533957, 276978, 613323, -24033, -388338, -563966, -558720, -236765, -456341, 386082, -265581, 379000, -84083, -445638, 623305, 196700, 539887, 98429, 14051, 577668, -51, 10, -18, 56, 59, -47, -43, 30, 13, 47, -23, -49, -52, -56, 47, -11, -59, 22, -53, 38, -5, 1, 8, -66, 47, 18, -47, -65, 0, 15, 55, 63, 27, -1, 55, -22, -19, -60, 3, -56, 52, -20, 28, -27, -3, -42, 24, -17, -25, 7 };
		for (int ndx = 0; ndx < 100; ndx++)
			Util.Check("Fixed32.LogFast", Fixed32.LogFast(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed32.LogFastest()
	public static void Fixed32_LogFastest()
	{
		int[] input0 = new int[]{ 455477, 278, 40616, 4596289, 39632, 313038, 2, 3104, 8, 1139, 1019708461, 65, 196, 832813644, 295517627, 1727, 8751, 408523, 36, 87917, 7, 2, 36, 2, 112688046, 18, 16560829, 490, 76950, 1926511, 394707823, 10220251, 2227067, 352218664, 2, 2015265, 48592, 818604440, 2, 1730, 1319, 934213948, 643462575, 170, 10, 5482593, 24, 5685028, 3131, 34, 65570, 65482, 65500, 65572, 65536, 65549, 65483, 65532, 65580, 65520, 65575, 65567, 65580, 65520, 65518, 65500, 65533, 65507, 65598, 65502, 65579, 65526, 65549, 65576, 65497, 65479, 65474, 65591, 65593, 65490, 65599, 65477, 65589, 65520, 65590, 65583, 65540, 65589, 65528, 65523, 65547, 65474, 65489, 65552, 65540, 65547, 65490, 65547, 65582, 65582 };
		int[] output0 = new int[]{ 127058, -358005, -31355, 278554, -32962, 102481, -681390, -199881, -590538, -265580, 632580, -453244, -380913, 619309, 551411, -238302, -131952, 119925, -491966, 19252, -599288, -681390, -491966, -681390, 488228, -537392, 362557, -320860, 10523, 221569, 570376, 330926, 231069, 562913, -681390, 224520, -19607, 618181, -681390, -238189, -255966, 626842, 602408, -390238, -575914, 290109, -518542, 292484, -199313, -495713, 33, -54, -36, 35, 0, 12, -53, -4, 43, -16, 38, 30, 43, -16, -18, -36, -3, -29, 61, -34, 42, -10, 12, 39, -39, -57, -62, 54, 56, -46, 62, -59, 52, -16, 53, 46, 3, 52, -8, -13, 10, -62, -47, 15, 3, 10, -46, 10, 45, 45 };
		for (int ndx = 0; ndx < 100; ndx++)
			Util.Check("Fixed32.LogFastest", Fixed32.LogFastest(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed64.Log2()
	public static void Fixed64_Log2()
	{
		long[] input0 = new long[]{ 60510L, 5007532384620442L, 164939439883574L, 158L, 555505L, 1844783L, 1275904370L, 84111344L, 47300975697L, 123973089L, 45422969311L, 2009L, 10607951531L, 7698312297969L, 24664227L, 96921840820880L, 3183761677594284L, 336260241L, 480739972L, 2485940228L, 8701357090870L, 42514814101L, 5512236330187335L, 48942301587L, 2193654261991L, 1102317454142873L, 207740L, 1511726467829500160L, 131556L, 449394278949L, 135285507142747184L, 192308098L, 18L, 37L, 48854237180207176L, 497L, 274968L, 553653430108933L, 25L, 77372253195L, 9615848L, 118L, 2200521L, 1L, 3639201903485916L, 44769967L, 1450629164L, 313438862L, 19779L, 437993709215625L, 4297146914L, 4296648521L, 4291745572L, 4293695593L, 4292042860L, 4296569500L, 4299243050L, 4292294588L, 4294592148L, 4294980940L, 4291108420L, 4295084019L, 4291962558L, 4298811829L, 4295100465L, 4291763663L, 4291605818L, 4294561414L, 4297510787L, 4292831747L, 4294603968L, 4291021642L, 4293944949L, 4298245757L, 4291781702L, 4295671443L, 4292643423L, 4297859275L, 4297018608L, 4292829341L, 4293377056L, 4297798102L, 4297060380L, 4294877506L, 4298148169L, 4292577394L, 4293408942L, 4296821157L, 4298613004L, 4292452868L, 4291931568L, 4291551361L, 4293533960L, 4295599109L, 4295245092L, 4298061273L, 4298924778L, 4294039399L, 4294886570L, 4296740124L };
		long[] output0 = new long[]{ -69213887760L, 86556567264L, 65407755188L, -106069454024L, -55476201176L, -48039124628L, -7521032960L, -24370516096L, 14865529880L, -21966817488L, 14614497956L, -90313447672L, 5602471460L, 46418629292L, -31972094164L, 62113331868L, 83750375216L, -15783992080L, -13569169540L, -3388108736L, 47177542404L, 14204515888L, 87151583000L, 15076893832L, 38639558612L, 77178248120L, -61570849392L, 121937999152L, -64401670856L, 28815755080L, 106982416560L, -19246417292L, -119529261964L, -115064521636L, 100671169584L, -98968493140L, -59833600832L, 72911263900L, -117493743012L, 17914726216L, -37808671580L, -107878226668L, -46946510644L, -137438953472L, 84578830376L, -28277944764L, -6725783012L, -16219476600L, -76142546596L, 71459251304L, 3143720L, 2425016L, -4649712L, -1834952L, -4220508L, 2311060L, 6165536L, -3857104L, -541244L, 19684L, -5569688L, 168388L, -4336436L, 5544004L, 192116L, -4623592L, -4851488L, -585592L, 3668388L, -3081716L, -524196L, -5694992L, -1475112L, 4728012L, -4597544L, 1015780L, -3353548L, 4170832L, 2958708L, -3085188L, -2294656L, 4082640L, 3018944L, -129544L, 4587328L, -3448860L, -2248640L, 2673976L, 5257412L, -3628612L, -4381180L, -4930116L, -2068212L, 911444L, 400760L, 4462056L, 5706804L, -1338820L, -116460L, 2557120L };
		for (int ndx = 0; ndx < 100; ndx++)
			Util.Check("Fixed64.Log2", Fixed64.Log2(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed64.Log2Fast()
	public static void Fixed64_Log2Fast()
	{
		long[] input0 = new long[]{ 417763L, 5L, 1989113448517L, 1839363329085174272L, 1242592L, 20486967970775L, 747754L, 34723L, 14473L, 59949500583L, 339730463L, 1009L, 250588934L, 6780L, 3058L, 13398L, 234860158230424L, 2128624557384L, 27L, 304413L, 1222032213854287L, 21389320L, 7312253292L, 97633737624L, 90L, 4320131L, 15913981729885L, 1173831410403469L, 3288690L, 104645L, 397176487147L, 4261782547568964L, 2863245L, 4L, 540892146744832768L, 149233L, 1536L, 191622820736055L, 1114L, 858L, 85619495744684560L, 25L, 1596385185L, 2997053L, 101036511671443L, 2501038453641444352L, 1501551038633L, 245L, 16741060L, 650290L, 4291447518L, 4293249360L, 4293376475L, 4292363625L, 4298387310L, 4298474868L, 4295045583L, 4291274255L, 4298176868L, 4299012951L, 4290722766L, 4295027780L, 4298351820L, 4298866472L, 4298883950L, 4295993214L, 4297671855L, 4294257453L, 4292862389L, 4298484491L, 4291104770L, 4290712956L, 4294941673L, 4298574470L, 4293990839L, 4296965704L, 4298399477L, 4292230064L, 4297873519L, 4291694453L, 4296710236L, 4295646059L, 4294281230L, 4290995990L, 4292205470L, 4293429985L, 4295157614L, 4291950317L, 4291823858L, 4291030293L, 4297266572L, 4291535664L, 4298329358L, 4292322509L, 4291971015L, 4294105788L, 4292229368L, 4295301299L, 4294029096L, 4291793923L };
		long[] output0 = new long[]{ -57241927376L, -127466348240L, 38033063680L, 123153515144L, -50487678928L, 52483519952L, -53634674624L, -72655368008L, -78077882444L, 16333883796L, -15720373412L, -94580718384L, -17606155592L, -82776605916L, -87710221476L, -78556111364L, 67597611188L, 38453094100L, -117016867156L, -59203244528L, 77817092648L, -32854836380L, 3297112804L, 19355960348L, -109556656668L, -42766519836L, 50918383812L, 77567738792L, -44456856092L, -65819755928L, 28050385228L, 85557373768L, -45315256444L, -128849018880L, 115569489212L, -63620461264L, -91976885704L, 66336898176L, -93967297872L, -95585210864L, 104147755080L, -117493743016L, -6132519056L, -45032246120L, 62370956972L, 125057563368L, 36290715436L, -103351353072L, -34373106276L, -54500026780L, -5080052L, -2478956L, -2295496L, -3757448L, 4932060L, 5058280L, 112936L, -5330232L, 4628692L, 5833884L, -6126596L, 87256L, 4880904L, 5622760L, 5647948L, 1479904L, 3900612L, -1024180L, -3037488L, 5072148L, -5574956L, -6140764L, -36968L, 5201852L, -1408896L, 2882416L, 4949600L, -3950252L, 4191360L, -4723520L, 2514012L, 979164L, -989864L, -5732036L, -3985756L, -2218272L, 274560L, -4354112L, -4536684L, -5682504L, 3316260L, -4952780L, 4848520L, -3816800L, -4324232L, -1243020L, -3951260L, 481840L, -1353688L, -4579904L };
		for (int ndx = 0; ndx < 100; ndx++)
			Util.Check("Fixed64.Log2Fast", Fixed64.Log2Fast(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed64.Log2Fastest()
	public static void Fixed64_Log2Fastest()
	{
		long[] input0 = new long[]{ 1538L, 24120L, 19604139140563608L, 816878294L, 74579L, 39L, 968560070563490L, 23578810L, 1339188404398352L, 1221L, 1L, 1316244L, 21083L, 121570919229965L, 99971L, 91683244L, 41L, 9628058499653536L, 295688321418020L, 702860586720L, 65L, 2703808087645L, 194979L, 9627L, 441L, 533132604407399808L, 129L, 492697L, 222174982460652L, 2594484516773527552L, 19579532617L, 5353558L, 566661921822331L, 16214587173626L, 500759998389492608L, 550083567L, 15232828193973L, 395844983726874432L, 312718171875243L, 54L, 4715478290L, 238L, 2070827L, 1205490680217943808L, 4L, 162815286L, 16497999639174322L, 357L, 178783906115643808L, 33550597569880L, 4293359398L, 4293462361L, 4297231699L, 4297167039L, 4290959140L, 4295005177L, 4298844148L, 4296335474L, 4293555087L, 4293344344L, 4299024517L, 4294947482L, 4296050429L, 4297748097L, 4295944193L, 4296238815L, 4295286384L, 4295170404L, 4297597230L, 4297539317L, 4296857831L, 4291908648L, 4291356719L, 4296531409L, 4291671714L, 4299003225L, 4293485213L, 4293373345L, 4292221465L, 4296698173L, 4291366384L, 4299059407L, 4293939930L, 4291049825L, 4296456484L, 4292615650L, 4295796094L, 4290965883L, 4296463136L, 4294481365L, 4295110633L, 4291074170L, 4295884764L, 4294667646L, 4291708107L, 4290847041L, 4294974272L, 4295090071L, 4293718213L, 4293974762L };
		long[] output0 = new long[]{ -91969031312L, -74913271852L, 95013366940L, -10284305980L, -67918413992L, -114738190612L, 76376725100L, -32251110972L, 78384504724L, -93398867104L, -137438953472L, -50130783264L, -75746887364L, 63517415060L, -66103090436L, -23836494228L, -114428386956L, 90607382096L, 69024734936L, 31587172172L, -111573091008L, 39935287676L, -61963876512L, -80604059120L, -99709200596L, 115480039836L, -107325969020L, -56219589040L, 67253398752L, 125284972516L, 9400213400L, -41437494864L, 73055160664L, 51034425316L, 115091845788L, -12734262852L, 50647367908L, 113634910876L, 69371794352L, -112721912216L, 578857980L, -103530888436L, -47322917748L, 120535369856L, -128849018880L, -20277859728L, 93944515352L, -101018708176L, 108710005924L, 55540000140L, -2320592L, -2171972L, 3265332L, 3172116L, -5786336L, 54636L, 5589504L, 1973152L, -2038128L, -2342324L, 5849432L, -28596L, 1562120L, 4009760L, 1408920L, 1833772L, 460236L, 292956L, 3792280L, 3708800L, 2726320L, -4415112L, -5212140L, 2255676L, -4757248L, 5818748L, -2138984L, -2300468L, -3963428L, 2496128L, -5198180L, 5899704L, -1482652L, -5655364L, 2147644L, -3394292L, 1195344L, -5776596L, 2157236L, -701236L, 206744L, -5620200L, 1323220L, -432408L, -4704700L, -5948240L, 10060L, 177084L, -1802668L, -1432372L };
		for (int ndx = 0; ndx < 100; ndx++)
			Util.Check("Fixed64.Log2Fastest", Fixed64.Log2Fastest(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed32.Log2()
	public static void Fixed32_Log2()
	{
		int[] input0 = new int[]{ 151517283, 2056, 1535, 24, 2, 59, 276, 10, 770173, 7, 70, 723563, 30389, 686641, 205, 989634615, 21, 242534, 41, 4834, 5, 49407, 52163793, 2929, 586, 1514538, 97499, 461853, 159909, 13, 24756, 25098046, 478958648, 17711896, 18936738, 5307240, 870162, 342, 4, 50833, 734834098, 62948, 5545, 429854, 425, 96658620, 181125, 623206721, 225, 24, 65588, 65590, 65518, 65597, 65514, 65522, 65535, 65597, 65580, 65513, 65553, 65553, 65538, 65541, 65548, 65518, 65559, 65559, 65579, 65535, 65516, 65583, 65541, 65555, 65523, 65540, 65484, 65501, 65483, 65523, 65484, 65544, 65520, 65527, 65495, 65542, 65529, 65600, 65531, 65522, 65501, 65559, 65524, 65563, 65584, 65516, 65600, 65581, 65472, 65588 };
		int[] output0 = new int[]{ 732358, -327312, -354942, -748096, -983040, -663052, -517176, -830871, 232968, -864594, -646888, 227066, -72663, 222114, -545294, 909791, -760722, 123720, -697464, -246481, -896407, -26711, 631540, -293851, -445989, 296907, 37558, 184619, 84337, -806064, -92046, 562369, 841175, 529413, 535736, 415467, 244509, -496904, -917504, -24021, 881645, -3810, -233507, 177831, -476361, 689857, 96116, 866067, -536493, -748096, 74, 77, -26, 87, -32, -21, -2, 87, 63, -34, 24, 24, 2, 7, 17, -26, 33, 33, 62, -2, -29, 67, 7, 27, -19, 5, -76, -51, -77, -19, -76, 11, -24, -13, -60, 8, -11, 92, -8, -21, -51, 33, -18, 38, 69, -29, 92, 64, -93, 74 };
		for (int ndx = 0; ndx < 100; ndx++)
			Util.Check("Fixed32.Log2", Fixed32.Log2(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed32.Log2Fast()
	public static void Fixed32_Log2Fast()
	{
		int[] input0 = new int[]{ 119, 105564153, 32, 5816163, 11588541, 4, 3829, 3750042, 157425, 18098279, 688, 348, 81814993, 13793, 185, 7, 313, 10, 2304, 4, 194278278, 1883106, 168, 12610, 331, 1471332, 16213, 38273136, 11213661, 6, 105492, 358, 175, 96, 109, 170, 10494, 757872, 1207094, 41, 66, 4749127, 11750, 1297334, 17, 772039427, 21785130, 636561922, 33147, 21188245, 65483, 65590, 65535, 65597, 65599, 65538, 65557, 65562, 65534, 65483, 65548, 65541, 65594, 65536, 65503, 65474, 65474, 65559, 65501, 65471, 65554, 65550, 65525, 65496, 65584, 65494, 65503, 65543, 65513, 65505, 65583, 65532, 65516, 65597, 65595, 65552, 65569, 65503, 65497, 65559, 65543, 65565, 65490, 65543, 65543, 65553, 65573, 65591, 65524, 65480 };
		int[] output0 = new int[]{ -596718, 698190, -720896, 424125, 489304, -917504, -268518, 382630, 82857, 531454, -430817, -495260, 674094, -147348, -555000, -864594, -505282, -830871, -316544, -917504, 755862, 317501, -564114, -155827, -499995, 294170, -132064, 602264, 486195, -879168, 45008, -492581, -560254, -617024, -605017, -562995, -173194, 231446, 275454, -697464, -652451, 404962, -162505, 282271, -780701, 886315, 548984, 868071, -64449, 546357, -77, 77, -2, 87, 90, 2, 30, 37, -3, -77, 17, 7, 83, 0, -48, -90, -90, 33, -51, -94, 25, 20, -16, -58, 69, -61, -48, 10, -34, -45, 67, -6, -29, 87, 85, 23, 47, -48, -57, 33, 10, 41, -67, 10, 10, 24, 53, 79, -18, -81 };
		for (int ndx = 0; ndx < 100; ndx++)
			Util.Check("Fixed32.Log2Fast", Fixed32.Log2Fast(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed32.Log2Fastest()
	public static void Fixed32_Log2Fastest()
	{
		int[] input0 = new int[]{ 388910175, 25, 5048366, 30430, 52, 35198, 39097, 843, 15, 20586344, 424, 17, 3878, 152, 233, 22, 93, 678478585, 119774, 599935, 495, 13660928, 27302, 156653, 16047, 208144247, 20583, 66104701, 798718, 240, 6186, 1388, 36, 300, 1272, 5617759, 5816908, 81484504, 21491377, 25920, 31, 19717, 41, 6447, 8152, 16224, 2131, 304103690, 1314, 13206, 65528, 65576, 65520, 65572, 65575, 65492, 65556, 65493, 65474, 65502, 65473, 65553, 65556, 65583, 65523, 65593, 65596, 65487, 65587, 65535, 65520, 65512, 65492, 65480, 65534, 65577, 65553, 65479, 65489, 65601, 65545, 65538, 65541, 65497, 65574, 65548, 65594, 65517, 65529, 65490, 65481, 65544, 65580, 65543, 65528, 65536, 65575, 65508, 65601, 65532 };
		int[] output0 = new int[]{ 821481, -744239, 410741, -72534, -674994, -58772, -48838, -411608, -792533, 543635, -476584, -780700, -267315, -573574, -533188, -756325, -620029, 874102, 57014, 209353, -461945, 504858, -82792, 82394, -133038, 762377, -109499, 653934, 236406, -530389, -223167, -364461, -709759, -509290, -372710, 420842, 424135, 673713, 547701, -87705, -723898, -113562, -697463, -219259, -197071, -132000, -323924, 798229, -369639, -151462, -12, 57, -24, 51, 56, -64, 28, -63, -90, -50, -91, 24, 28, 67, -19, 82, 86, -71, 73, -2, -24, -35, -64, -81, -3, 59, 24, -83, -68, 93, 12, 2, 7, -57, 54, 17, 83, -28, -11, -67, -80, 11, 63, 10, -12, 0, 56, -41, 93, -6 };
		for (int ndx = 0; ndx < 100; ndx++)
			Util.Check("Fixed32.Log2Fastest", Fixed32.Log2Fastest(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed64.Pow()
	public static void Fixed64_Pow()
	{
		long[] input0 = new long[]{ 3422627L, 89301L, 7757L, 381127045L, 9556L, 23160L, 28080379L, 285214L, 242750L, 3524692142L, 6874512L, 13292264L, 6127L, 6718L, 46868885L, 4558107L, 15238L, 2306290L, 10647L, 316728617L, 4029209319L, 17491014L, 51787880L, 118140113L, 1290526L, 319928642L, 3231704L, 19866517L, 26507656L, 3424159578L, 5533L, 503853L, 11836L, 47853590L, 5349050L, 555127L, 3239717L, 82455908L, 32367L, 48186985L, 2347235955L, 30516620L, 11382L, 2515249L, 22694256L, 4497234L, 7664228L, 300626321L, 912674665L, 1877491943L, 67760757806L, 7287320214L, 9624519766L, 20676066698L, 54349983651L, 4763367429L, 4727678064L, 43038644639L, 10786072557L, 6052529120L, 11360574385L, 10444235031L, 7143088302L, 17279240907L, 64255999644L, 63349149156L, 9924291681L, 65072916209L, 33416102867L, 9662337025L, 5160440270L, 24105286707L, 6580915947L, 49617474756L, 17595150215L, 45088542687L, 5296928576L, 13329862148L, 11597548495L, 55632540259L, 12437161450L, 36216468161L, 32060740600L, 28939251230L, 54246715091L, 5352807273L, 12347806103L, 6622036350L, 36952893611L, 18729305150L, 25348740801L, 9643197013L, 19961646743L, 5267235839L, 9416418942L, 16801622287L, 67441097216L, 39477694361L, 55746038978L, 5097576773L };
		long[] input1 = new long[]{ 262063620L, 128833897L, 38686319L, 27405047L, 484487116L, 26677303277L, 897634325L, 86236985L, 253377202L, 49031781L, 2492279058L, 5504111L, 3335101111L, 91105650L, 62167913953L, 27959316L, 660078811L, 139194666L, 715183523L, 103262639L, 5485936L, 181064575L, 91437319L, 205801782L, 20437797654L, 142281031L, 826447159L, 37551948L, 14013971L, 35102297651L, 62324255L, 3332922699L, 5526692433L, 4052198775L, 1196745726L, 3434082191L, 14512686L, 27842430190L, 30314452L, 2289019728L, 13409301637L, 24715099L, 85616706L, 32006944890L, 5922386L, 43467223669L, 63796733929L, 8143886613L, 571900337L, 307716519L, 331420941L, 3998013765L, 5005312L, 17275201L, 53497552L, 56400788L, 5537131L, 72179434L, 6420188L, 6840674L, 3296698252L, 324613249L, 112672890L, 72092545L, 713960911L, 239057459L, 262654090L, 131569147L, 248363578L, 2099217919L, 252500790L, 11768653L, 17588842L, 18171653L, 388469886L, 904579697L, 6871459L, 7479828L, 269872284L, 4818288L, 1575105021L, 28813932L, 121563804L, 33297539L, 32881167L, 65242274L, 747194405L, 159794975L, 39977646L, 181445871L, 5765955L, 3549425059L, 8449728L, 574840075L, 219419019L, 4736415L, 1228141958L, 11760157L, 42958041L, 545526616L };
		long[] output0 = new long[]{ 2779036890L, 3108230880L, 3812660872L, 4229100986L, 989276446L, 0L, 1501047892L, 3540589800L, 2411932678L, 4285287090L, 102485777L, 4263282042L, 124074L, 3234505200L, 0L, 4107699418L, 624256523L, 3364973370L, 500624534L, 4034010232L, 4294616896L, 3405630974L, 3909409832L, 3615616910L, 0L, 3940898724L, 1076275881L, 4097753592L, 4224256318L, 674061444L, 3527687168L, 3826001L, 301L, 61703298L, 666195349L, 3340553L, 4191882820L, 0L, 3951864686L, 392359042L, 651196470L, 4174427672L, 3325002802L, 0L, 4264027822L, 0L, 0L, 27735632L, 3494566502L, 4047731406L, 5313795952L, 7025750868L, 4299007856L, 4322201980L, 4432913460L, 4300809396L, 4295498840L, 4464579780L, 4300883184L, 4297314520L, 9061779592L, 4593327752L, 4352668568L, 4396506628L, 6734025264L, 4989006304L, 4520682432L, 4667890748L, 4835964944L, 6383575200L, 4341572148L, 4315316244L, 4302479588L, 4339662684L, 4879249096L, 7047238720L, 4296408372L, 4303447080L, 4571588188L, 4307326316L, 6343119568L, 4356842364L, 4546419180L, 4358963224L, 4379172320L, 4309356292L, 5161162880L, 4364712508L, 4381875128L, 4570659976L, 4305215776L, 8380064748L, 4307968908L, 4413887132L, 4470714556L, 4301432812L, 9439410640L, 4321134292L, 4406508480L, 4389452300L };
		for (int ndx = 0; ndx < 100; ndx++)
			Util.Check("Fixed64.Pow", Fixed64.Pow(input0[ndx], input1[ndx]), output0[ndx], input0[ndx], input1[ndx]);
	}

	// Fixed64.PowFast()
	public static void Fixed64_PowFast()
	{
		long[] input0 = new long[]{ 1027858848L, 4168068L, 81130L, 6338L, 2918104L, 3406169L, 221908483L, 325861766L, 8493592L, 15022216L, 289355L, 2353674161L, 307234680L, 7625L, 81009L, 56222893L, 30625L, 49178L, 20646L, 514340L, 439640038L, 11603L, 46519L, 8047L, 569288392L, 21735484L, 8331L, 4021057L, 29457793L, 28891831L, 2330002548L, 1466329561L, 130212941L, 1051101225L, 22586L, 595229L, 10233L, 2331410L, 379947427L, 317415570L, 19181575L, 1713301581L, 3006317445L, 106389905L, 113778L, 14125L, 41005L, 9363L, 4079016L, 856318534L, 48815811438L, 8645926864L, 6244874591L, 25371575488L, 8830555438L, 7184599043L, 9605018577L, 32503324831L, 8564220733L, 62315596839L, 32218633688L, 49994331736L, 11620667135L, 13270904569L, 13041631184L, 14697150437L, 9633185597L, 13681546037L, 6427325202L, 10472082178L, 16825917426L, 14937133723L, 49150164799L, 24350593643L, 42193090513L, 32302151480L, 13204487551L, 12393052243L, 55974806172L, 13764027579L, 6367802478L, 4732227604L, 11107230750L, 60426068963L, 50781874413L, 7513522082L, 46168272016L, 11599652395L, 16996510616L, 21471625997L, 4579727290L, 6694361825L, 17714385141L, 5173639366L, 20790387600L, 6443674477L, 19014420203L, 48517511019L, 20813725786L, 56987874902L };
		long[] input1 = new long[]{ 24174343980L, 2485906448L, 5906418L, 75507378248L, 22844450086L, 15114602765L, 107756705L, 22507953L, 24168190L, 20363747013L, 319897350L, 76133001L, 24055783L, 35715655148L, 2310296711L, 189778781L, 34205168L, 35569129640L, 39440421207L, 20563808835L, 2059948287L, 3847986409L, 140268106L, 85653271L, 6417746509L, 32398673778L, 11309246L, 335690144L, 12862469745L, 8594909385L, 385353585L, 79005059669L, 85022645267L, 7672615917L, 8462909440L, 95734878L, 28910580219L, 7972794832L, 5887823L, 80226201L, 5871451L, 30542684721L, 69660060L, 63697418214L, 178220309L, 100173420L, 7936360050L, 7998985L, 11271896L, 20362739374L, 5163936L, 45482683L, 2427508120L, 913838350L, 52412636L, 82090659L, 56575978L, 144727324L, 1209524359L, 169695073L, 942808065L, 2276179105L, 1108707836L, 1316977208L, 1261839784L, 511019908L, 182246369L, 70648218L, 151678721L, 16968058L, 247990992L, 2703723847L, 2501522234L, 212742401L, 33718706L, 42678575L, 2808318239L, 1171975419L, 6367809L, 463711957L, 16082816L, 167823177L, 1180204027L, 4107256593L, 65024427L, 1081894646L, 9675273L, 215345316L, 255459902L, 105760118L, 1313467415L, 47315801L, 181270442L, 3346880007L, 1078402114L, 9509861L, 50272113L, 478071900L, 23244208L, 1836031404L };
		long[] output0 = new long[]{ 1372449L, 77452597L, 4231208768L, 0L, 0L, 0L, 3987282208L, 4237322252L, 4147116138L, 0L, 2100184031L, 4249424220L, 4231991272L, 0L, 12349587L, 3546124910L, 3908149040L, 0L, 0L, 0L, 1439472877L, 44063L, 2956641892L, 3301718548L, 209684040L, 0L, 4148775498L, 2490272052L, 1422L, 193229L, 4065657280L, 11L, 0L, 347452240L, 0L, 3523366348L, 0L, 3727L, 4280713852L, 4090995568L, 4263316426L, 6232528L, 4270192368L, 0L, 2773587436L, 3199461466L, 2L, 4191956504L, 4217242396L, 2054344L, 4307535172L, 4326902436L, 5306915100L, 6267389904L, 4332906108L, 4337404884L, 4340737732L, 4598086556L, 5216376464L, 4773709464L, 6684455208L, 15771837024L, 5553260276L, 6070036356L, 5952211232L, 4971974772L, 4444718316L, 4377595408L, 4356540288L, 4310114664L, 4647288720L, 9412768360L, 17762320928L, 4680416476L, 4372693588L, 4381937972L, 8951329112L, 5735103012L, 4311344964L, 4870435828L, 4301304516L, 4311266156L, 5576363012L, 53831713056L, 4458610420L, 4944727292L, 4318002648L, 4514323088L, 4661133596L, 4468568404L, 4380108848L, 4316015256L, 4559636480L, 4965382236L, 6381569732L, 4298826116L, 4370405236L, 5625527772L, 4331802312L, 12970228752L };
		for (int ndx = 0; ndx < 100; ndx++)
			Util.Check("Fixed64.PowFast", Fixed64.PowFast(input0[ndx], input1[ndx]), output0[ndx], input0[ndx], input1[ndx]);
	}

	// Fixed64.PowFastest()
	public static void Fixed64_PowFastest()
	{
		long[] input0 = new long[]{ 18005969L, 26317L, 607729L, 715878L, 506887L, 15667L, 1419852L, 559207L, 3154690L, 6477L, 3669904L, 10008915L, 2218608L, 29220L, 478160L, 135550L, 15975L, 312961146L, 1761827L, 5842L, 11981438L, 3076144750L, 328485955L, 8834L, 716779L, 117982L, 955499L, 2399320758L, 167150051L, 53994L, 3095461443L, 148206L, 10918609L, 51663L, 11942L, 9828L, 46344L, 1945694L, 33280664L, 269870L, 824378L, 167399212L, 14699L, 10074730L, 3047818832L, 172365L, 1009094035L, 1124505L, 23426431L, 8579439L, 9169407586L, 24162441869L, 10970620854L, 11073850374L, 15914177850L, 11901002592L, 12437151430L, 5840740023L, 21471933933L, 16877208195L, 33524064504L, 5144176076L, 8109199347L, 51612924307L, 35410787053L, 31117309717L, 6107134771L, 12063080655L, 6179144993L, 24151885077L, 7962809916L, 25920760815L, 12834561335L, 23872015275L, 19117721617L, 7726026911L, 7680121829L, 23930074214L, 19118518488L, 31903004558L, 24731300922L, 5545337177L, 33788134350L, 10847350758L, 42845993961L, 31761159748L, 26038366876L, 67483553725L, 33656625807L, 38996120196L, 4894238689L, 51901526819L, 35811180182L, 12445701345L, 30329351943L, 28107612783L, 25096153881L, 19518104370L, 37529081921L, 49680300887L };
		long[] input1 = new long[]{ 5235163L, 955069107L, 49422641L, 38775417L, 86088898L, 2155676480L, 99453772L, 89162517L, 85821961274L, 12211943L, 4510929495L, 417010328L, 1443552667L, 79310190L, 7291894L, 42862844L, 80706305637L, 63604210L, 8157031L, 69555304L, 9270100L, 2747516362L, 21412012L, 16483328L, 2472438908L, 12972830279L, 27992156314L, 52208280L, 9210123L, 11929863L, 130407023L, 76434108556L, 118598409L, 36093475L, 21631009L, 305461025L, 4725240L, 131324720L, 25488579427L, 356228390L, 6715055921L, 22765950063L, 344632455L, 927012564L, 1591107946L, 38323431108L, 24965707L, 11237411700L, 659205252L, 6731018981L, 1017605318L, 1118700481L, 420015317L, 1946214743L, 156173495L, 322518133L, 20773470L, 619018272L, 1101906165L, 25992339L, 12790024L, 841072197L, 223820117L, 1601510311L, 1657728750L, 380055786L, 39475831L, 2080541323L, 6829499L, 5631885L, 6695278L, 10801488L, 333227427L, 43608511L, 229189350L, 40238267L, 1919699983L, 4637134L, 2365451948L, 1644076846L, 228144029L, 420485457L, 1399818620L, 397816211L, 2679601987L, 1292469214L, 83009084L, 1616505532L, 1187900749L, 17627735L, 129813261L, 2655560436L, 16000655L, 119867920L, 351566112L, 30367877L, 40955671L, 2270692070L, 157616839L, 6325124L };
		long[] output0 = new long[]{ 4266470412L, 297747364L, 3878917840L, 3970950418L, 3582992964L, 8010067L, 3567623440L, 3567126786L, 0L, 4134643166L, 2572586L, 2384491514L, 337447888L, 3447813942L, 4229244912L, 3873347682L, 0L, 4131867168L, 4231960758L, 3451103988L, 4240908598L, 3469190374L, 4240398060L, 4084807238L, 28733503L, 0L, 0L, 4264748096L, 4265242610L, 4162693994L, 4252563272L, 0L, 3641970062L, 3905353002L, 4027352940L, 1705301420L, 4241385046L, 3393988332L, 0L, 1925315836L, 6634L, 145L, 1564415322L, 1162555496L, 3782747754L, 0L, 4259043320L, 1L, 1930325048L, 252560L, 5140472520L, 6735113360L, 4707935172L, 6596808060L, 4504890784L, 4637043308L, 4317180036L, 4489932348L, 6490019260L, 4330794508L, 4321410812L, 4449797300L, 4439943284L, 10853391328L, 9696365816L, 5117636784L, 4308928896L, 7083163780L, 4297460028L, 4304735260L, 4299116116L, 4314488916L, 4676148436L, 4370630800L, 4651668708L, 4318733112L, 5568614056L, 4302965460L, 9775758912L, 9254856960L, 4713971516L, 4404040304L, 8412793416L, 4680283172L, 18040208080L, 7843194272L, 4447545740L, 12110069592L, 7590907236L, 4334149044L, 4312012384L, 20049318080L, 4329140032L, 4424723324L, 5040354908L, 4352562812L, 4368079244L, 9563165840L, 4651063436L, 4310529232L };
		for (int ndx = 0; ndx < 100; ndx++)
			Util.Check("Fixed64.PowFastest", Fixed64.PowFastest(input0[ndx], input1[ndx]), output0[ndx], input0[ndx], input1[ndx]);
	}

	// Fixed32.Pow()
	public static void Fixed32_Pow()
	{
		int[] input0 = new int[]{ 9, 1845, 48, 1870, 5355, 581, 0, 6, 4, 0, 1849, 1, 4488, 29439, 850, 60, 23659, 20744, 23409, 0, 1, 39, 0, 9837, 123, 0, 29865, 0, 1008, 3, 63260, 46841, 56, 9165, 69, 6565, 0, 0, 6880, 2, 526, 0, 128, 332, 39, 2, 0, 2, 3932, 0, 300148, 106804, 620546, 898505, 661145, 281549, 163543, 163816, 86550, 477624, 992401, 113149, 119299, 857397, 426381, 69295, 426643, 80795, 82123, 356763, 558247, 487154, 855247, 648747, 430712, 511494, 870427, 858529, 84827, 541551, 395836, 188949, 74199, 460915, 483223, 660404, 760193, 202759, 483640, 204218, 133974, 411934, 802906, 152850, 376484, 981121, 174158, 967293, 245649, 291783 };
		int[] input1 = new int[]{ 2246, 3790, 1099387, 8029, 257788, 458103, 45418, 29279, 460, 57814, 77867, 85, 33598, 77, 469, 129247, 88234, 785615, 4992, 302892, 1407, 246174, 144, 41682, 2973, 213, 557671, 6457, 3445, 944, 71, 63800, 2132, 15907, 693321, 22096, 1228339, 68, 81, 27740, 363, 18276, 478734, 295, 16584, 31495, 6939, 12699, 4144, 64921, 45711, 1005, 1471, 17347, 38747, 19608, 367, 58666, 409, 124, 3937, 1052, 337, 679, 104, 4084, 187, 2259, 273, 22033, 167, 418, 759, 6773, 752, 139, 18872, 4782, 254, 8427, 959, 50385, 1480, 3018, 18112, 377, 40825, 337, 14299, 31787, 3691, 32852, 174, 5028, 18516, 24228, 1239, 3248, 338, 81 };
		int[] output0 = new int[]{ 48318, 53309, 0, 42387, 3, 0, 0, 1028, 61220, 0, 944, 64599, 16577, 65473, 63528, 0, 16624, 0, 60592, 0, 51649, 0, 0, 19617, 49293, 0, 81, 0, 52622, 56750, 65532, 47259, 52078, 40654, 0, 30169, 0, 0, 65352, 803, 63806, 0, 0, 63994, 10006, 443, 0, 8740, 54854, 0, 189412, 66027, 68926, 131051, 257015, 101363, 65871, 148812, 65649, 65781, 77155, 66112, 65736, 67304, 65729, 65763, 65886, 66009, 65597, 115843, 65893, 66378, 67513, 83055, 66966, 65821, 138014, 79067, 65600, 85982, 67282, 147918, 65719, 71693, 113832, 66411, 301684, 65916, 101359, 113733, 68228, 164689, 65972, 69933, 107395, 178216, 66756, 74888, 65983, 65656 };
		for (int ndx = 0; ndx < 100; ndx++)
			Util.Check("Fixed32.Pow", Fixed32.Pow(input0[ndx], input1[ndx]), output0[ndx], input0[ndx], input1[ndx]);
	}

	// Fixed32.PowFast()
	public static void Fixed32_PowFast()
	{
		int[] input0 = new int[]{ 5747, 7184, 2517, 419, 17, 782, 0, 3093, 34, 5038, 0, 387, 3489, 154, 1097, 400, 33135, 820, 92, 5044, 656, 20251, 1636, 4, 2, 1, 0, 1493, 8769, 63, 832, 2, 13, 0, 12358, 128, 1, 5226, 0, 0, 1, 0, 3263, 40586, 14282, 35188, 0, 197, 23045, 0, 468915, 253962, 788396, 552589, 528578, 556698, 117853, 397118, 639395, 694355, 564565, 167983, 71354, 80044, 73766, 66862, 271378, 133348, 180316, 110687, 290008, 144505, 646194, 472474, 474319, 441198, 446996, 297440, 618418, 460810, 144961, 153218, 869822, 143613, 340083, 381356, 396237, 71807, 829392, 637213, 495491, 313565, 96207, 905357, 112134, 86961, 475358, 182344, 894814, 321585 };
		int[] input1 = new int[]{ 513170, 102527, 97, 4336, 2448, 531365, 189, 5791, 2707, 340, 15722, 1474, 621010, 856445, 238, 111137, 743, 31572, 56699, 305, 4778, 246, 12603, 3133, 25379, 10672, 242, 131191, 4273, 1325, 223, 14637, 184318, 49105, 23048, 732771, 547, 882466, 177932, 977813, 5193, 105250, 5177, 1135143, 20658, 478567, 626, 233557, 255762, 259, 941, 53903, 1580, 5680, 4205, 1230, 6396, 234, 95, 102, 113, 6527, 21737, 148, 3247, 1689, 1089, 11472, 1783, 1093, 778, 1799, 689, 2821, 1565, 53947, 180, 28287, 2359, 4487, 54423, 611, 4214, 334, 588, 575, 22544, 474, 7211, 211, 54023, 1619, 56246, 23293, 10966, 101, 9762, 75, 917, 9693 };
		int[] output0 = new int[]{ 0, 2062, 65219, 46913, 48141, 0, 0, 50037, 47949, 64668, 0, 58391, 0, 0, 64568, 11, 65030, 7940, 223, 64757, 46848, 65247, 32230, 41210, 1169, 10768, 0, 33, 57480, 56947, 64568, 6426, 0, 0, 36447, 0, 59741, 0, 0, 0, 27215, 0, 51707, 16, 40541, 698, 0, 0, 1109, 0, 67412, 199677, 69585, 78835, 74928, 68219, 69397, 65958, 65751, 65776, 65779, 71975, 67410, 65564, 65920, 65568, 67100, 74212, 67364, 66110, 66702, 66973, 67130, 71351, 68707, 314905, 65881, 125898, 71049, 74897, 126699, 66055, 77389, 65797, 66510, 66555, 121700, 65578, 86649, 66016, 347278, 68118, 91109, 166636, 71696, 65563, 88035, 65611, 67977, 82918 };
		for (int ndx = 0; ndx < 100; ndx++)
			Util.Check("Fixed32.PowFast", Fixed32.PowFast(input0[ndx], input1[ndx]), output0[ndx], input0[ndx], input1[ndx]);
	}

	// Fixed32.PowFastest()
	public static void Fixed32_PowFastest()
	{
		int[] input0 = new int[]{ 970, 41508, 14503, 106, 1, 17946, 399, 20562, 0, 398, 3, 3351, 648, 29, 0, 2244, 0, 277, 4161, 2, 367, 0, 0, 4, 26, 15129, 67, 57, 4339, 15, 2, 0, 62, 3881, 20742, 0, 25, 0, 0, 19, 829, 24718, 0, 0, 14638, 0, 4045, 105, 2320, 53591, 792008, 858616, 67031, 422647, 411057, 66314, 289588, 656011, 313860, 200338, 305023, 756854, 103410, 695045, 122672, 220485, 203146, 148304, 195919, 133130, 129237, 848773, 106032, 109340, 990580, 242926, 70903, 762894, 189104, 69930, 748946, 470306, 173221, 428627, 172669, 104292, 935591, 77414, 100947, 194008, 337947, 80835, 601841, 148053, 581321, 121961, 439219, 90359, 242999, 317629 };
		int[] input1 = new int[]{ 65, 214, 578, 241, 173, 19449, 485569, 20860, 176, 1583, 3602, 263, 199, 164889, 2913, 293, 1140, 363508, 12049, 153, 1608, 1258858, 21304, 3088, 17942, 64209, 80, 77, 4090, 765, 168, 945461, 92544, 216253, 3299, 231, 519327, 2426, 65181, 1936, 188, 298646, 950314, 66355, 70, 14229, 213617, 1403, 48328, 99894, 166, 2417, 36286, 1121, 2004, 55154, 12011, 19365, 7849, 242, 55473, 5866, 1453, 2761, 2452, 22282, 2582, 1896, 2105, 98, 1788, 725, 170, 67, 6434, 210, 154, 28528, 1020, 12102, 14985, 35819, 1133, 18003, 30265, 768, 16056, 43128, 230, 870, 1137, 166, 828, 51855, 1156, 43593, 4984, 390, 13338, 44332 };
		int[] output0 = new int[]{ 65262, 65437, 64671, 64008, 63648, 44616, 0, 45310, 0, 57939, 37843, 64759, 64625, 0, 0, 64556, 0, 0, 39477, 63966, 57711, 0, 0, 41482, 7678, 15586, 64988, 64996, 55323, 59432, 63815, 0, 3, 5, 61853, 0, 0, 0, 0, 51518, 64720, 770, 0, 0, 65430, 0, 7, 57104, 5577, 48220, 65951, 72064, 66361, 67663, 69326, 66190, 86040, 129448, 79057, 65807, 240892, 81576, 66203, 72396, 67094, 98990, 68527, 67106, 67887, 65604, 66764, 67422, 65616, 65570, 85550, 65811, 65547, 190745, 66627, 66327, 114396, 192411, 66649, 109784, 102508, 65893, 125713, 73134, 65634, 66488, 67431, 65570, 67402, 124898, 68113, 99055, 75740, 65661, 85559, 190589 };
		for (int ndx = 0; ndx < 100; ndx++)
			Util.Check("Fixed32.PowFastest", Fixed32.PowFastest(input0[ndx], input1[ndx]), output0[ndx], input0[ndx], input1[ndx]);
	}

	// Fixed64.Sin()
	public static void Fixed64_Sin()
	{
		long[] input0 = new long[]{ 165068500276L, -258573560720L, 97556744645L, -73784750234L, -351718547163L, 246780701514L, -100048231446L, 352948456764L, 212278022698L, -149539004269L, 301536480740L, 321930516749L, -63441061429L, 375665310374L, -83055119038L, -375102819574L, -225058230704L, 116543971054L, 131751852661L, -285154567532L, -388745441581L, 79388917836L, -167524203078L, -319634920748L, 124857677858L, -134570298662L, 412900573192L, -281204983130L, 75559083435L, 191581429889L, 36245987016L, 314200413146L, -334961063155L, -39548462218L, -375123956374L, 75087727834L, -172679799480L, 428233131999L, 191051820688L, -342855253959L, 406157229589L, 331145033154L, -264307605123L, 306037760342L, 20052283809L, 32998933815L, 179715713483L, -60171658628L, 53939541825L, -126916840659L, 174360211881192L, 422082021996547L, 90059060241937L, 87195277840603L, 340138345958389L, -343817147160102L, 338447371957601L, -12305064205730L, 230854301507499L, 212348481098882L, 263376857922644L, -248339977915642L, -152107356270830L, -408800136790362L, 243711738313487L, 416832797194102L, 227394850305889L, 405604130388874L, 321292537149613L, 271353882726359L, 227073709505739L, -223794633104212L, 354988879965304L, 45110377021006L, -261815067521917L, -290393745135225L, -85800206639953L, -44065233820519L, 89809525041820L, -337637985557224L, 115210717453649L, 43575502220291L, 94352204643936L, -227020805505714L, -412275511591980L, 43660694620331L, -205355376695626L, 7340388603418L, 49809921423194L, 398189920385421L, 166137085477363L, 269121994325319L, -232117899108088L, 408200069190082L, -176735382282298L, 225000477904774L, 53755659825031L, -285004197932715L, -367170707570977L, 32716216215234L };
		long[] output0 = new long[]{ 2876622180L, 2110141812L, -2841874304L, 4273763120L, -893004452L, 3389420880L, 4142044376L, 2043296352L, -3200091328L, 1103087684L, 3811790028L, -1840790196L, -3460668268L, -2052322488L, -2014577616L, 2527452960L, -3629378704L, 3901341532L, -2896228036L, 1748477340L, -2405002768L, -1534622340L, -4144883100L, 3560773116L, -3070107368L, 359656632L, 4080527408L, -2060279584L, -4085351932L, 2508549928L, 3580303912L, -3361300152L, -2247180972L, -923385300L, 2510332892L, -4205938100L, -2549598812L, -3155351452L, 2060704644L, 4123638468L, 1343180632L, 4257778164L, 4130240404L, 3617942764L, -4290885100L, 4232458084L, -3620159636L, -4260180436L, -32608652L, 4109433324L, 2896410488L, -4272785608L, 4289341104L, 2961845896L, 4202092960L, 1043088136L, -1476666616L, 584355128L, -1856293840L, -3923125504L, -4266888084L, 616975904L, 341959684L, 1538732404L, 490373724L, 4207186716L, 2994801060L, 3067941268L, -3243660684L, 3768874772L, 619712260L, 883765904L, -549705044L, -2876588632L, 3345924048L, 3064383492L, -1946411360L, 2782783844L, -133842160L, 1658989012L, 4274925036L, -4286916260L, 3773461564L, 445465236L, -3592457160L, -2586209644L, 3877001488L, 176047368L, -4278800836L, 2849054128L, 2515666044L, -3025819008L, -2628337492L, 3861477096L, -3175939484L, -3490159116L, -600383772L, -3592731272L, 1778968536L, 3669856312L };
		for (int ndx = 0; ndx < 100; ndx++)
			Util.Check("Fixed64.Sin", Fixed64.Sin(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed64.SinFast()
	public static void Fixed64_SinFast()
	{
		long[] input0 = new long[]{ 235100813109L, 203608312694L, 48032533822L, 212082388698L, 75506179435L, -31341884614L, -362403587568L, -384548046379L, -80486384237L, 201035361493L, 171479789079L, -46984123821L, 327382140352L, 138995557464L, -332358965954L, -209695373897L, 86804547040L, -354583280365L, -426021354798L, -229445685906L, 192691444289L, -209442267897L, -73702520634L, 352599346364L, -324279932351L, 387448444780L, -421173463596L, 376285540375L, -207650970296L, -57318815826L, 85347324639L, -230292738307L, -106391255849L, -372403420773L, -143242069066L, 341099134358L, 425039697997L, 311766545545L, 126969744659L, 48563102622L, -23432447410L, -250304059916L, -341669956759L, 278271289529L, -202786598294L, -216375520300L, 371236583572L, 58383273027L, 311062305544L, -396536737984L, -291300798735647L, -21157789409852L, -288479572734333L, 291771707935866L, 269521501525505L, 15046351407006L, -152185896270867L, 124929917058175L, 106865591449763L, 117554464254740L, -39665150618470L, -309192398343978L, 252599653517625L, 406329161189211L, -313808692746128L, -27724202212910L, -370089597572336L, 270288831525863L, -147259103068572L, -243961370713603L, -205238342295571L, 204534731095243L, -52056295424240L, -45087727820995L, 223483491104067L, 13498774606285L, -297269040738426L, 77522919436099L, 125889215058621L, 321592317549753L, -413284868392450L, -50060007023311L, -364273494769628L, -240610961912043L, -195514746691043L, -322991615550404L, -371309895172904L, 31333765814590L, -212428192698919L, 271208309126291L, 63788301029703L, -129386948660250L, -224595775504585L, -420081449195615L, -341268476358915L, -143736778666932L, -73406983834182L, -318502388348314L, 162583252675708L, 254434333518480L };
		long[] output0 = new long[]{ -4172682052L, -1196696744L, -4219395156L, -3327210144L, -4101364176L, -3646596440L, -1846249620L, -4294965976L, 470893444L, 1337581264L, 3403911228L, 4288184032L, 3158852024L, 3484822400L, -3931545516L, 4259383116L, 4200975240L, -3300547604L, 4181220352L, 64042696L, 3316244816L, 4284486736L, 4264824528L, 1729817620L, -446221020L, 3354505100L, 2676252468L, -1488015304L, 4038712184L, -3018139352L, 3664074200L, 904279976L, 1519423628L, 4086116788L, -4012914456L, -3306230160L, -4294958164L, -1400587408L, -4124500124L, -4088394384L, 3161826376L, -4240800444L, 3640351188L, 3976626052L, 390492888L, -485874872L, -4291281668L, 3675516372L, -719036840L, 4032978852L, -391542432L, -703123268L, 1538266796L, -1692064288L, 1862508096L, -1576630948L, -1996019452L, 2034051756L, 729344740L, 2852631796L, 3659428088L, -558874356L, 3128845052L, -175943744L, 1102563364L, -3440497416L, -2410794360L, -3258776500L, 3392074456L, -4265592988L, -3591844112L, 4263631188L, -155958164L, 4230973536L, 1648812404L, 4176849156L, 3402418648L, -4091089292L, -821552528L, -739201852L, 4293011916L, -831879724L, 1889163632L, -2848045032L, -628211948L, 3826047556L, -3948348764L, 2709740940L, 4259326584L, -1700663876L, -4294828440L, 2113929800L, 3541120720L, 2530984048L, -2416837032L, -3746364908L, -3886739660L, -762407940L, -4153591084L, 3372334008L };
		for (int ndx = 0; ndx < 100; ndx++)
			Util.Check("Fixed64.SinFast", Fixed64.SinFast(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed64.SinFastest()
	public static void Fixed64_SinFastest()
	{
		long[] input0 = new long[]{ -275782652328L, -328548977552L, -223854353504L, 125526946658L, 238198333910L, -66338800230L, -398598223585L, 186104884686L, -361208512768L, -173474002680L, -117181337454L, 199787913893L, 428537431599L, 214770003500L, 101342603047L, -419101873195L, -374415633174L, 63713885829L, 172347178280L, -420313806795L, -85911036640L, 28073366213L, 53220294624L, 11029317405L, 121747057856L, 353645335964L, -366223000L, -61471575828L, -133315981062L, -62276459828L, -342590971159L, -408263381990L, 344436396360L, 300951611140L, 167878240278L, 344760838760L, -255702383119L, -60303711828L, -49312566222L, 300320783139L, -353890121564L, -127918050259L, -36954451017L, 390542539581L, -41107083019L, 293497116736L, -128427650659L, -9869049404L, -91927322642L, -351663332763L, -198817875092581L, 292375859936148L, -61352837028569L, 153400329871432L, -89151359441514L, 125640711058506L, 47727457422224L, 194613058690623L, -425716840798239L, 314049727546240L, 363524152369279L, 92370081843013L, -110075863851258L, 130564676660798L, -260379761121248L, -138414685064454L, 284848247132642L, -301910909140588L, -382604966378164L, 186078493886649L, 266097239523911L, 115384808253730L, -316470277547367L, 301523124740407L, 363073044369069L, -387489715980438L, -364468912369719L, 92174484642922L, -377360329175722L, 257746670720022L, 52576257024482L, -419993903195574L, -399040982785817L, -211149377898324L, -292955314336417L, -205470101495679L, 82586184638457L, -238460663111041L, -39393759018344L, -387259200380331L, -132463348261683L, -20818712209694L, -64083600629841L, 66134435830796L, 366293360370568L, -16763473807806L, 411654543191691L, 261977601921992L, 221425571103109L, -332189127554687L };
		long[] output0 = new long[]{ -4215368008L, -3824043704L, -4122611816L, -3499489508L, -3805815904L, -1113564288L, 4258642476L, -2604367796L, -2840862140L, -1870826940L, -3593277540L, 2450732072L, -2941651388L, -1106039316L, -4292215420L, 812791052L, 3048913892L, 3292720792L, 2809825812L, 1955145020L, -3925811656L, 1075753924L, -748035640L, 2331132680L, -309451208L, 2627149984L, -365781004L, -4228445724L, 1576765600L, -4015347092L, 4041722704L, -3106696440L, -4278965056L, 3508263036L, 4222786404L, -4239213616L, -662684800L, -4274306180L, 3798028180L, 3107872200L, -2816500288L, 4286253764L, -3142662180L, 751676496L, 625742932L, -3020807468L, 4287587092L, -3209531056L, -2381499512L, -838943496L, -1960239712L, 3849989876L, -5375876L, 1942717300L, 2653209984L, -4284623212L, -2430514560L, -2743958912L, -1921148340L, 721408384L, -4043141628L, -2952167020L, 337327524L, 4236920732L, 3775934512L, -2841516476L, 2964818164L, 3557101276L, 3200573388L, 3440206192L, -1032928396L, -4199614020L, -3756110556L, 4187973500L, 2265488624L, 3014305276L, 3953264508L, -3155909456L, 542479644L, 2497339564L, 4247309584L, -3374591032L, 2029935980L, -2889674688L, 4120604612L, 1817577476L, 3816296272L, -1740696984L, 4213288864L, -3708216840L, 2102858524L, -1034712116L, 4006745904L, -3967245728L, 2047480288L, -3990868208L, 3742689828L, -2925732920L, 3871257544L, 3466087040L };
		for (int ndx = 0; ndx < 100; ndx++)
			Util.Check("Fixed64.SinFastest", Fixed64.SinFastest(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed32.Sin()
	public static void Fixed32_Sin()
	{
		int[] input0 = new int[]{ -6421628, -3906455, -866101, 2311567, -2872678, 1759247, 2736654, 1016552, 3354248, -2001317, 924879, 5875392, 2174021, -3875225, -2563831, 5401936, 944737, -5011340, -91197, 5715745, 3181394, 1431460, 2547906, -6482582, -1693037, -2175610, -3815129, 715515, 5565284, -757754, -5640373, -3005215, 4581384, 5864342, 3800930, -1844894, 1011102, -1846850, 6204394, 324209, 681720, -6309987, -439269, -5153383, -280385, -1343022, 4061910, -3656212, -2980637, -6366343, -2147483648, -2147483648, -2147483648, -2147483648, -1696598172, -1299488999, 99238266, -937119241, -2147483648, -2147483648, -979223062, -2147483648, 2004867606, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -1122556357, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -1519575192, -2147483648, -2147483648, 1147689291, 351403787, -2147483648, 316079599, -2147483648, -2147483648, -2147483648, 442773398, -2147483648, -2147483648, -2147483648, 1007340335, -1453180197, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -1339419119, -1761254679, -2147483648, -2147483648, -2147483648 };
		int[] output0 = new int[]{ 36836, -5400, -39625, -42927, 9709, 64890, -52035, 12802, 51992, 50438, 65516, 65095, 64403, -34758, -64811, 44460, 63013, -57450, -64487, -44636, -64796, 9715, 60566, 65473, -42268, -64091, -65242, -65339, -6314, 55286, 62030, -62554, 46615, 65445, 65049, -8073, 18096, -6128, 26947, -63741, -54334, -58602, -26695, 6188, 59458, -65364, -49324, 45115, -65366, -16004, -60809, -60809, -60809, -60809, -63323, 58533, 531, 61654, -60809, -60809, -22072, -60809, -54331, -60809, -60809, -60809, -60809, -60809, -50824, -60809, -60809, -60809, -60809, -60809, -61501, -60809, -60809, 58740, 42339, -60809, -39516, -60809, -60809, -60809, 64345, -60809, -60809, -60809, 55814, -26073, -60809, -60809, -60809, -60809, -60809, 62932, -64889, -60809, -60809, -60809 };
		for (int ndx = 0; ndx < 100; ndx++)
			Util.Check("Fixed32.Sin", Fixed32.Sin(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed32.SinFast()
	public static void Fixed32_SinFast()
	{
		int[] input0 = new int[]{ -2637029, -5354968, 4019943, -2261700, 2350022, 2561484, 2847625, -2049534, -817483, 1919220, -3170218, 5505148, 5265076, -2198980, -1013147, -820306, 4878586, 3180439, 3669229, -5642280, -2083231, -5624436, -4697661, -6222976, -5328404, -4110988, -4464156, -5009997, 4834760, 6373443, -1854563, 6422001, 3386528, -1991715, 2287014, -882551, -4178860, 5957852, -3525594, 4434889, -119889, 1509260, 1182327, 5641719, -4836561, 5657918, -3316854, 2901124, 1361010, 2123738, 335593991, 1611905966, -1666901773, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -92589175, 472041031, 1304023135, -330695224, -637327737, -2147483648, -2147483648, -2147483648, 703192789, 2067604874, -2147483648, -2147483648, -2147483648, 152433639, -2147483648, 1031209341, -2147483648, -253164437, -2147483648, -2147483648, -2147483648, -2147483648, -811681930, 182591745, -2147483648, -515750064, -2147483648, 1535303488, -2147483648, 135533139, -700391977, -225244174, -1314580509, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, 1867935617, -2147483648 };
		int[] output0 = new int[]{ -37158, -1895, -65335, -3061, -63165, 64420, -33187, 9308, 6058, -55521, 62188, 47965, -63839, -55279, -16123, 3242, -53571, -64646, -34850, 62619, -23800, 55114, -35697, -42585, 24090, 6748, 55055, -56791, -65438, 9038, 1576, -37145, 64678, 56006, -21828, -51348, -52633, 12800, 24868, -65010, -63358, -56464, -47408, -62452, 65511, -65415, -22207, 18447, 61629, 54780, -2497, -13294, -35279, -60809, -60809, -60809, -60809, -60809, -60809, 52061, 51231, -56316, -37591, 65455, -60809, -60809, -60809, -63670, 62655, -60809, -60809, -60809, 60448, -60809, 61805, -60809, 60500, -60809, -60809, -60809, -60809, -59135, 29315, -60809, 2086, -60809, -1027, -60809, 51483, 35075, -3340, -10596, -60809, -60809, -60809, -60809, -60809, -60809, 61866, -60809 };
		for (int ndx = 0; ndx < 100; ndx++)
			Util.Check("Fixed32.SinFast", Fixed32.SinFast(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed32.SinFastest()
	public static void Fixed32_SinFastest()
	{
		int[] input0 = new int[]{ 3539297, 2533552, -5720079, 1491606, -1234815, 1414859, -5094127, -901242, -4181368, -5088357, 3240571, 3128473, 5075734, -5607773, 701544, -5269877, -5432168, -3041717, 6432022, 686654, 1979676, -4418065, -5985940, -3785603, 94648, 4673134, -3970414, 3585438, 1825091, 2455121, 1121152, -2072819, 899883, -6142073, -1418420, -3327685, -1645202, 5244585, 3945838, 4622990, 1627657, -4117054, 4164454, -1329709, 2612636, 3199882, 163285, 1945321, -4134549, -3874474, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, 1403763455, 1965892722, -2147483648, -2147483648, 645649252, -1168326236, -2125966422, -2147483648, -82890005, 344090170, -1240208676, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -433956064, -2147483648, -2147483648, -456869211, -2028920780, 1897369333, 155360226, -2147483648, -2043750248, 637864505, 1166388132, -854033414, -2147483648, -2147483648, -2147483648, -281398208, -2147483648, -2147483648, 1260021457, 289274746, -2147483648, -2147483648, -762283530, -2147483648, -1390720566, -2147483648, -2147483648, -2147483648 };
		int[] output0 = new int[]{ -36919, 53686, 41373, -45581, 509, 25650, -47457, -60730, -54095, -51248, -47848, -37701, 58116, 44430, -62777, 62576, -61242, -42774, -44943, -56941, -61278, 64973, 15069, -61430, 65001, 53324, 51075, -63182, 27063, -15384, -64566, -13841, 60206, 32975, -22337, -32052, 1897, -65293, -32480, 64841, -19160, 694, 42858, -64968, 54252, -64959, 39670, -64669, -16618, -35397, -60807, -60807, -60807, -60807, -60807, 22581, 61444, -60807, -60807, -13586, -63047, 26277, -60807, -62406, -46930, 50164, -60807, -60807, -60807, -60807, -60807, -60807, 48513, -60807, -60807, 5029, -65450, -64068, 63025, -60807, -64934, 24669, -34154, -12339, -60807, -60807, -60807, -45217, -60807, -60807, -9496, -2926, -60807, -60807, -63901, -60807, -44517, -60807, -60807, -60807 };
		for (int ndx = 0; ndx < 100; ndx++)
			Util.Check("Fixed32.SinFastest", Fixed32.SinFastest(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed64.Cos()
	public static void Fixed64_Cos()
	{
		long[] input0 = new long[]{ 63654576629L, 134524284662L, 402042018787L, 323972007550L, -16370869007L, 103403329448L, -81131646237L, -420832800395L, -290410655535L, 211868153498L, -204532335495L, -425005980797L, -136959557063L, -134441016262L, -253244243917L, 311126213144L, 213728981499L, -122703087057L, 96353907844L, 268999771925L, -247710062315L, 164494614676L, -398363022385L, 339897921558L, 181482857084L, -256504611919L, -92876305043L, -244720938713L, 168513740678L, 121829598656L, -368295847171L, -411321342391L, 234040143908L, -242318381912L, -267159203524L, 161033228674L, 69257799032L, 181965134684L, 389897664781L, -205189516695L, -165317832276L, -271728912326L, -157527787073L, -366825093570L, 19577710209L, 78086017436L, -273579262727L, -42897675419L, -389468021181L, 68413503031L, 3226853581502L, -39793590558530L, 18200008228475L, -37869391917634L, -35878332716707L, 32865669155304L, 10339057744814L, -36735263237106L, -28700757913364L, -18936298668817L, -23321709510860L, -26590743712382L, -15984981147443L, 1725647540803L, 15066727107015L, -22270772270370L, -22954939510689L, -32413790475093L, -29677854233819L, 1521925700708L, -18762831548737L, -39773288278520L, -8310402223869L, -12795330505958L, 482087460224L, -40547787958881L, -10747432785004L, 39795880078531L, -10917651825083L, -32609988995185L, -41242207879204L, 37951809997672L, -28474964713259L, -32939649195338L, -33993566675829L, -39985667118619L, -16382469507628L, 18323733348532L, -31303178434576L, -16631916547744L, -37185407837315L, 711370180331L, 3947598421838L, 14976392186973L, -40146915118694L, -32890712475315L, 31761762874790L, 25471246711860L, -8799563504097L, -18721129668717L };
		long[] output0 = new long[]{ -2712547848L, 4275783408L, 3444776128L, 4292714868L, -3366362196L, 2109882456L, 4291466604L, -3560718924L, 310075072L, 2546683644L, -3774313028L, -24706500L, 3824469188L, 4267118992L, -3208392420L, -4223183888L, 3763354080L, -4109802292L, -3880384512L, 4208958404L, 1848689360L, 3544121936L, 318118760L, -3547610948L, -670399272L, -4292785784L, -4009421012L, 3904218148L, 149200496L, -4277067196L, -2576078904L, 216215912L, -2006733352L, 4258991048L, 3472970924L, 4204473152L, -3926271412L, -190811392L, -4068669268L, -3417808368L, 3017051344L, 3895041380L, 2241190664L, -3580479004L, -659230056L, 3369851052L, 2783328356L, -3631807712L, -3910936808L, -4190699596L, -3829737716L, -3518950144L, -3791899212L, -1166773500L, -4281079636L, 3038829140L, 3024522756L, -467183092L, -4163175504L, -1164958688L, 996969520L, -2536093196L, -2342789140L, 4048768404L, -1702455056L, -512330008L, -3100570720L, 2935921164L, -82173876L, -3421675740L, -758631032L, 2410813680L, 4097032084L, 2618337100L, 2826201156L, -4125736424L, -228152576L, -1779322912L, -3929621184L, -3483784332L, -734532276L, -2478077076L, 2009675780L, -3194589160L, -2054127048L, -942364196L, 3872158800L, 4290846452L, 4242966416L, -1699762808L, 4067506704L, -2750971364L, -878648544L, 4205200252L, -1580508040L, 1406646608L, 4211551260L, 2866220168L, 3790347152L, -459255008L };
		for (int ndx = 0; ndx < 100; ndx++)
			Util.Check("Fixed64.Cos", Fixed64.Cos(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed64.CosFast()
	public static void Fixed64_CosFast()
	{
		long[] input0 = new long[]{ -121861317056L, -378938087576L, -175615862681L, 24809451411L, -173454911080L, 504689000L, 114664846253L, -119543342255L, 45981935821L, -382802177178L, 6634289803L, 134928506262L, 171320615479L, -390404418781L, -206437637496L, -183238465485L, -410654519591L, -259950049121L, -72304587433L, 121027212656L, 370613701972L, 16710001007L, 418390609194L, 299037352739L, -42423394219L, 234754712309L, -7712137403L, 196628785491L, -155980883472L, -95768730244L, -293598778736L, 67309934631L, 56457706226L, -351461951163L, 225258156704L, 396012738384L, 125637233058L, 119937631055L, 273555148727L, 89056373841L, -85024787839L, 385215376779L, -292241331936L, -359726336767L, 256543274319L, -77285855035L, 265289815923L, 383673400L, -73295170234L, 211266043898L, -34774933476193L, 14807094826895L, -10247967504772L, 22047388190266L, -12832826905975L, 29092541153547L, -36783196717128L, -4515648582102L, -36226388396869L, 2128710620991L, -42127990319617L, 34753279036183L, -39305918838303L, -28774606353399L, 34029333115846L, 36882108477174L, -35102592956345L, 9328583704343L, -18616584588669L, -17295364628053L, 12062103105616L, -10109542104707L, -10400846824843L, 26813576832486L, -22344472910404L, 41489505479320L, -12054539665613L, 34862021636233L, -38700265118021L, -39463426878376L, 39896162598578L, 42140091879623L, -15957277387430L, 6224980222898L, -17751612508266L, -1217299740566L, -25970711992093L, 26548055392362L, 20636304749609L, 36382947476942L, 33434797595569L, -25870301072046L, 5270478542454L, -17722868708252L, 8083954743764L, -306084860142L, 34877783556241L, 42500146119790L, -27052293832597L, 31721891914771L };
		long[] output0 = new long[]{ -4274063228L, 4146380884L, -4290014820L, 3755126888L, -3857834724L, 4265354188L, 25974008L, -3884078140L, -1226388732L, 1701426564L, 112216272L, 4294966960L, -2491267256L, -4202327784L, -2529243276L, 1071034096L, 876920544L, -2885626620L, -1845066444L, -4275406136L, -444039856L, -3145484760L, -4293651436L, 3748360936L, -3862349920L, -1350159732L, -957504704L, -971264500L, 806140296L, -4094479396L, 3124234972L, -4292165500L, 3595602180L, 4246933552L, -2462994208L, -1956928364L, -2400010336L, -4035779928L, 2801652480L, -1329429908L, 2509409344L, -661163044L, 2053446128L, -2070829008L, -4291384064L, 2818308416L, 2083732988L, 4277847248L, -909596944L, 2038444456L, -3035535708L, -1482882412L, 5374532L, 4288522636L, -4190756432L, 4017632872L, 4134980560L, -2128955584L, -3632202284L, 3164231880L, 3458153872L, 1893081256L, -4238048496L, -700325440L, 4293613700L, -1097748324L, 454537052L, -1795016228L, 2715015460L, 3468169472L, 4242414048L, -3118176396L, -3701214016L, -3345707016L, 4294966668L, -4005647820L, -1459837920L, 2572927276L, 3727438572L, -2791035360L, -3444322868L, -4089103468L, -1711442708L, -1978972032L, 1489801088L, 3336017980L, -3028282972L, 502571208L, -1276811236L, 1018864760L, 4190371012L, -2443027456L, -1420086296L, -236186460L, -3991142440L, -2354108372L, -3955570748L, 3338362716L, -4115277952L, -4288284760L };
		for (int ndx = 0; ndx < 100; ndx++)
			Util.Check("Fixed64.CosFast", Fixed64.CosFast(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed64.CosFastest()
	public static void Fixed64_CosFastest()
	{
		long[] input0 = new long[]{ -155756655072L, -257492750719L, -242947210313L, -329838253553L, -338851716757L, 182842815885L, -177417313082L, 58881286227L, 14421881406L, -113726594252L, -18025921408L, -286955453933L, -87650564240L, -397126344784L, 51822209824L, -413184092392L, 77608834636L, -25812261012L, 319266791148L, -77030401035L, 199031475092L, -187009753887L, 316419519147L, -120498591056L, -77804892636L, -50172687823L, 275696523128L, -356276510765L, -242200508712L, 209112849097L, -363379510369L, -116050128254L, 189646425088L, -274724840727L, 190619115888L, 226957647105L, 234851399509L, -259231249920L, -28395210613L, 69137788632L, -264252413923L, 110908323451L, -178438057083L, -109407087850L, -47641333422L, 191806700289L, 258444283120L, 20334400609L, 200445832693L, 64526910230L, 34882704636243L, -5490663302556L, -32376205955076L, 23600419230989L, -31130928554496L, -39824363078544L, -14441554026724L, 30704811034298L, 17746336868263L, 14081770066557L, 33664302235676L, -25063753191671L, -12841493465979L, 23480576190934L, -17984381348374L, -33147252275435L, -4710514942193L, -24242245311288L, -15824873107369L, 25436129231844L, -21853876230176L, -9265664504314L, -42691377999879L, -17936772708352L, -24227471671281L, -34137357795896L, 42092503279600L, -367012260170L, 35663947196607L, 15988513667445L, 12087975865628L, -17413460708108L, -12722561385924L, 12276931065716L, 28978253233494L, 12102385225635L, -22178479830327L, 38313896237841L, -39291228478296L, 15936601707421L, -5812354222706L, 35730001876638L, -719788900335L, 26028381832120L, 16199149587543L, 41588184759366L, -19017347148855L, 1625291060756L, -35906000396720L, -14566554026783L };
		long[] output0 = new long[]{ 584904984L, -4147934960L, 4294185364L, 737509932L, -4026569224L, 683894096L, -3834276956L, 1782013984L, -4194282124L, 956174948L, -2117179704L, -2871754448L, 54179352L, -911311800L, 3768233836L, -1606537068L, 3054337280L, 4135069036L, 2088194924L, 2621081900L, -3043982576L, 3884662496L, -664200064L, -4192150352L, 3188976140L, 2721622220L, 903963388L, 1269789148L, 4241457112L, -29234968L, -4193496160L, -1336802572L, 4230005928L, 1822914348L, 3956398356L, -3629267484L, -1258100912L, -3375711804L, 4065556508L, -3973273080L, 1124948824L, 3312664060L, -3271206184L, 4047993936L, 415055104L, 3350435644L, -3802852340L, 94836384L, -3860064376L, -3328990648L, -3156036140L, -4177773960L, -337649376L, -4155264180L, -3593237888L, -337335160L, 2560551320L, 1378978296L, -3294593988L, 1734419448L, -4214949156L, 434927000L, 2660060492L, 3479855284L, -3907712584L, -1568182908L, -4053956740L, -1931462780L, -3609835812L, -3942046444L, 1840330184L, -2521272360L, 4253354980L, -2123507240L, 719097368L, 4294810864L, 963934468L, -3474195692L, -3903282532L, -4231358032L, 3928962292L, -692535604L, -4076977516L, 3949902708L, 1888180084L, -4206572304L, 2503625864L, 415053220L, 4265534208L, -4092066244L, -3194537140L, 4272001432L, -2007488208L, -4283088044L, -753921020L, 3507776908L, -1077877184L, 617838488L, -4172157052L, 814881772L };
		for (int ndx = 0; ndx < 100; ndx++)
			Util.Check("Fixed64.CosFastest", Fixed64.CosFastest(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed32.Cos()
	public static void Fixed32_Cos()
	{
		int[] input0 = new int[]{ -2908094, 1089019, -3828637, 5730915, -2234360, 182906, -877221, 4350317, 744356, -6094855, -5945921, 4405995, 5796895, -6285377, -6249371, 1240248, 4670483, 2720832, 5714721, 1962723, 4879898, -11404, -4257307, 1707183, -1785459, -2233002, 5249602, -3932203, 1344871, -3489072, 4246469, -378793, -1130780, 1110966, -1205851, -5798141, -5382045, -1118624, -2445928, -2314775, -3829701, -1180884, -1451720, -6454110, 1824054, 1260709, 6208669, -378053, 3667387, -5322054, -487823018, 93095052, 108687867, -88794461, -54897790, 365690966, -120727272, 101777878, 96277519, 655224188, 148690365, -349861821, -354815428, -232017082, -378772477, 98647160, -101682387, -186767035, 147407447, 610236998, 6869367, -76449224, -138683904, 147589704, -76117509, -49281705, -511328377, -435679703, 643672927, 350743040, -188807223, -92594352, -104599022, 11332566, -516444199, -323808105, 508792787, 631076384, -489365587, 169083838, 196273158, 15377564, 447220062, -244457025, 275192035, 622251706, -418633051, -568514954, 388721440, -571601732 };
		int[] output0 = new int[]{ 60572, -40268, -19425, 56945, -58611, -61548, 44759, -60180, 23232, 20810, -60895, -20249, 57855, -5804, 29137, 65351, -35920, -51129, 47281, 6779, 38816, 64546, -34741, 39870, -33718, -57991, -528, -62405, -6591, -64613, -25117, 57410, -1600, -21037, 59019, 57259, 59235, -13656, 60928, -47361, -20438, 44195, -64696, -30162, -59253, 60681, 57855, 57050, 54500, 58331, -26439, 56942, 62297, -42283, -27877, 56453, 25043, 32016, 24538, 12438, 53903, -40645, -30331, -63071, 39643, -60018, 60447, -59993, 65055, 64190, -27031, -35865, 18476, -58077, 39271, -27457, 6966, 61900, 32564, 13723, -64991, 43791, 65021, -64952, 23824, -45393, -50696, -58132, -59309, -47184, -37966, -36698, 57596, -32739, -23003, 39988, -36746, -40095, 65261, 41296 };
		for (int ndx = 0; ndx < 100; ndx++)
			Util.Check("Fixed32.Cos", Fixed32.Cos(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed32.CosFast()
	public static void Fixed32_CosFast()
	{
		int[] input0 = new int[]{ -4276066, 1522740, 4701471, 4118617, 1162852, 2439862, -4235810, 6164581, 6426830, 6497439, 2216593, -3404075, 1134649, 4008944, 1886714, -4140752, 4100972, 2892120, -3709328, 6003956, 2452143, -773987, -3527614, 6336836, -2413961, 6468518, 1316907, -5495868, 5277576, -430092, -2860086, -5981734, -1690411, 5599146, 1229896, 3142787, 926184, 1388992, 5504073, -1050704, -5555870, 5476946, 6437533, -4837495, 6027844, -1186792, 5572726, -6090344, 2222315, 339073, -443205494, -52485056, 457777928, 443685811, -161456105, 305152136, -150324542, 491823582, -2102136, 124793424, -543064507, -529354164, -566659504, 30332264, 280392570, 164472765, 483993574, 208910291, -377455197, 529752645, 148666262, -384162072, 394164667, 389497522, 500622691, 352879749, -65792109, -524371945, -624460886, 532643113, -565780809, 85365130, -116458440, -161509649, -255163721, 421836401, -400591350, 42633044, 66010764, 473197539, -190756691, 256154872, -514358590, -229746086, -217365898, 629127101, 458994128, -41938927, -108782072, -217048270 };
		int[] output0 = new int[]{ -49017, -21038, -56942, 65530, 29384, 58436, -14985, 64432, -51113, 11918, -48617, -6921, 2267, -5854, -57048, 61539, 63400, 64820, 65450, -57296, 62940, 47671, -59839, -50254, 42510, -16749, 20985, -37442, 26650, 62992, 61765, -64616, 51736, -53597, 65311, -44170, 310, -45809, -43864, -62116, -65464, -20575, -43764, -859, -42190, 48372, -64096, 16486, -52264, 29179, -31476, -63536, -12663, -65518, 53489, 60058, 60160, -52856, 51767, 60580, 34597, -63183, 42014, -34328, 60410, -58212, -48903, -35493, -37053, -65394, 63700, 61245, 6779, 52847, 7422, 64567, 11027, -61437, -65392, -64373, 65499, -24209, 28159, 8999, -32261, -60087, 35388, -63972, -23324, 33090, -2001, 58373, 46090, 61093, 46523, 35990, -30626, 38246, 28447, 51968 };
		for (int ndx = 0; ndx < 100; ndx++)
			Util.Check("Fixed32.CosFast", Fixed32.CosFast(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed32.CosFastest()
	public static void Fixed32_CosFastest()
	{
		int[] input0 = new int[]{ 526871, -3069976, 4237807, 3478389, 5406010, 5963165, 2087102, -5870795, 5984231, 1410241, -2844157, -2813125, 4609244, 1206147, 352142, 269303, 2424642, 2502101, -3698640, 5139161, -902958, -2139994, -5124604, -1952927, 651493, 5478713, -5251634, -314492, -484965, 5268555, 5492456, 6315068, 2397701, 2479473, -1754040, 3965768, 3169443, 1910626, -467507, -1961203, -4422338, -4688717, 995699, 5803466, 1022532, -5648040, 4505904, 203866, 3903996, 4110637, -268697175, -446576015, -327434913, 32661759, 528607612, -388673377, -449897205, -36286483, -372670421, 648089665, 466120060, -415200477, 116776985, -583792470, 247138525, -260562572, 134277276, -442382915, -359341210, 293997366, 365346011, -603958366, -358399150, 481616285, 300790042, -276784127, 341790605, -437447091, 357813969, -25406567, -558079014, 109809857, 233511074, 195799681, 140192765, 340461635, 303581731, -448251632, 374699771, -442090661, 191114073, -302129166, -91626936, -39480370, -6880361, 628326602, 69711258, 28002394, -322151907, -292544133 };
		int[] output0 = new int[]{ -12083, -62981, -16922, -61973, 45301, -65089, 59550, -3004, -64142, -58356, 54684, 32190, 22742, 59148, 40232, -37181, 50046, 58135, 65115, -65035, 23033, 21423, -61681, -3002, -57001, -22247, 1505, 5654, 28744, 18184, -34595, -33795, 28961, 64932, -3996, -44596, -21414, -41789, 43239, 5267, -4238, -49602, -57046, 54489, -65163, -13761, 61322, -65501, -65055, 65140, -64016, -65233, 28084, -27707, -8308, 52501, -57308, 47170, 63994, 51368, 64901, -27616, -54378, -1298, 28353, 11980, 54455, -32328, -33600, 64784, 1209, -12296, -46793, -50298, -64524, 30307, 63207, -36973, 62973, -20196, -20809, -29932, 56544, -65530, -63445, 26054, -736, -56553, 63742, -47115, 46995, -10571, -65149, 47368, -16682, 52663, -18129, 65510, -38420, -61912 };
		for (int ndx = 0; ndx < 100; ndx++)
			Util.Check("Fixed32.CosFastest", Fixed32.CosFastest(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed64.Tan()
	public static void Fixed64_Tan()
	{
		long[] input0 = new long[]{ -1257716719L, -2061649571L, -836867404L, -508751608L, -465412672L, -773985352L, -3678288103L, -1036778920L, -2681388043L, -1767658262L, -1190257269L, -4201633425L, -2149090499L, -2333386289L, -3573991924L, -803139833L, -1374074528L, -3737915811L, -1203880887L, -3645185546L, -1594142632L, -1195019099L, -1022254158L, -496695173L, -514576768L, -1387333557L, -1746045454L, -2452512768L, -1013064365L, -2415665065L, -2336538337L, -745333891L, -3507171514L, -1346238997L, -417493938L, -91968198L, -176893469L, 89855597L, 98357709L, -127840043L, 280912527L, -129818341L, -118045638L, -282258288L, 188988339L, 133407825L, 60274302L, 167534210L, 42644897L, -238020568L, -22073734L, 97474284L, -366170845L, -149965240L, 177995887L, -410419384L, -167787884L, -234868952L, 425249354L, 22021767L, 125981570L, -278277707L, -420864226L, -390562921L, 325404016L, -254864387L, -362096183L, -254999629L, 2259509444L, 1446224473L, 4080295421L, 3414974251L, 908139907L, 536320219L, 542913118L, 713954883L, 518577659L, 688903236L, 946381834L, 1137962774L, 3732447429L, 3523763965L, 691814967L, 606371988L, 810502815L, 569016098L, 628974502L, 1657882151L, 2641769765L, 4213867955L, 526285929L, 501705977L, 1747767524L, 527014706L, 2174913628L, 1922714049L, 937059459L, 891657269L, 842432524L, 1411399636L };
		long[] output0 = new long[]{ -1294944915L, -2236089540L, -847621568L, -511144495L, -467242966L, -782473968L, -4952854237L, -1057397705L, -3094243654L, -1874723713L, -1221694003L, -6379717103L, -2348438204L, -2593740281L, -4716437354L, -812633879L, -1422957073L, -5094045207L, -1236433263L, -4876409390L, -1671619847L, -1226842737L, -1042005328L, -498921355L, -517053117L, -1437686591L, -1849049271L, -2759124522L, -1032279657L, -2707354250L, -2598043792L, -752907031L, -4571503081L, -1392131929L, -418813882L, -91982264L, -176993570L, 89868703L, 98374903L, -127877817L, 281313775L, -129857895L, -118075375L, -282665345L, 189110405L, 133450741L, 60278255L, 167619225L, 42646294L, -238264540L, -22073932L, 97491018L, -367060620L, -150026221L, 178097858L, -411673199L, -167873303L, -235103359L, 426644420L, 22021957L, 126017709L, -278667766L, -422216476L, -391643046L, 326028069L, -255163968L, -362956525L, -255299684L, 2493947448L, 1503482292L, 6006233298L, 4379217857L, 921920117L, 539125318L, 545823395L, 720604528L, 521112434L, 694872578L, 962001710L, 1165360636L, 5080904181L, 4607039671L, 697860850L, 610433174L, 820262917L, 572368777L, 633509738L, 1745446457L, 3034458066L, 6419112611L, 528935893L, 504000453L, 1851090848L, 529675738L, 2382092889L, 2062359997L, 952216381L, 904692138L, 853404906L, 1464499815L };
		for (int ndx = 0; ndx < 100; ndx++)
			Util.Check("Fixed64.Tan", Fixed64.Tan(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed64.TanFast()
	public static void Fixed64_TanFast()
	{
		long[] input0 = new long[]{ -1620979025L, -999933420L, -4044524154L, -452173741L, -755235839L, -1609796758L, -834094618L, -4075397271L, -718774623L, -1316535952L, -3743436540L, -540029469L, -3283799316L, -1602521464L, -1657663874L, -2320081524L, -3998718226L, -3113051312L, -2526066114L, -2452319963L, -468356611L, -1332857711L, -1114586716L, -2302765255L, -1180249455L, -3493029021L, -839196433L, -740099120L, -1059006400L, -1212640490L, -3272050886L, -2497654018L, -3511878878L, -2879604370L, 297507219L, 61888297L, 378074612L, -270846962L, 347593763L, 173491368L, 286819651L, -267638445L, -117702131L, -169672357L, -385333573L, 419879278L, -271409953L, -397128613L, 1979675L, 405391268L, 156319703L, -18418346L, 41002849L, 30870367L, -17957985L, -356484606L, 388999631L, -219362542L, 71565693L, -141861473L, -186470551L, -384891186L, 73269381L, 234377056L, 89846851L, -278532211L, -269000146L, -380494363L, 2282722896L, 444092928L, 2662955253L, 2613582340L, 3877302981L, 501769969L, 3594743430L, 3034684634L, 577860313L, 555458504L, 2045687167L, 1211070733L, 2286509227L, 769456050L, 2327896282L, 1129691382L, 2521959848L, 1087132829L, 707656449L, 1022409717L, 955563336L, 2478982629L, 1787002894L, 2130286626L, 1715192805L, 1594909350L, 1127177963L, 2599562320L, 1722125202L, 1671321927L, 2141950493L, 3225437866L };
		long[] output0 = new long[]{ -1702614323L, -1018391235L, -5901650043L, -453848665L, -763109275L, -1689687514L, -844732131L, -5991708164L, -725553281L, -1359381315L, -5107355408L, -542888862L, -4119704407L, -1681291415L, -1745211206L, -2575619938L, -5771265030L, -3803716422L, -2864181386L, -2758841648L, -470218579L, -1377360645L, -1140293123L, -2552134757L, -1210878179L, -4541489565L, -850032499L, -747504616L, -1080994346L, -1245920106L, -4097204256L, -2823316112L, -4581600517L, -3405899387L, 297982752L, 61892541L, 379052091L, -271205601L, 348352905L, 173585438L, 287245671L, -267984471L, -117731462L, -169760356L, -386368606L, 421219366L, -271770839L, -398261913L, 1979672L, 406596992L, 156388487L, -18418459L, 41004077L, 30870884L, -17958095L, -357303663L, 390064562L, -219552894L, 71572262L, -141912867L, -186587397L, -385922650L, 73276434L, 234609290L, 89859872L, -278922312L, -269351484L, -381490788L, 2525092330L, 445679338L, 3066303348L, 2992370976L, 5443027952L, 504061396L, 4762494460L, 3666081525L, 581367315L, 558571323L, 2215862607L, 1244218365L, 2530189687L, 777786889L, 2586255856L, 1156478034L, 2858253111L, 1110952833L, 714122941L, 1042161153L, 971639092L, 2796654211L, 1897823709L, 2324089253L, 1812612065L, 1672518502L, 1153782744L, 2971593435L, 1820785024L, 1761145601L, 2339189845L, 4009074328L };
		for (int ndx = 0; ndx < 100; ndx++)
			Util.Check("Fixed64.TanFast", Fixed64.TanFast(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed64.TanFastest()
	public static void Fixed64_TanFastest()
	{
		long[] input0 = new long[]{ -2721988149L, -575367481L, -881257662L, -1320470474L, -649308653L, -3393052424L, -1431805380L, -1297552284L, -1762474947L, -1831622925L, -3881923996L, -2979078115L, -1583634065L, -583496575L, -1743975173L, -459878729L, -892972521L, -628392903L, -433509673L, -682662983L, -3906537688L, -2773868197L, -2201205536L, -3954541532L, -1067247217L, -536890462L, -654459990L, -1044127648L, -1911739025L, -593919420L, -756848064L, -1484838389L, -1113675386L, -2723748287L, 127361244L, 85258255L, 378883420L, -217973346L, -222892420L, 318808551L, 326755464L, 203311868L, 226337684L, 186754742L, 262180261L, 238829150L, -318867993L, -27234410L, 396162647L, -95033815L, -30853074L, -53384324L, 73947974L, -2899409L, 358022501L, 422453028L, -71073628L, -130585519L, -350067597L, -358570423L, 184458975L, -311697501L, 284918639L, -23694523L, -99777212L, -70964912L, -62412893L, 227184559L, 1311459950L, 438846513L, 526698898L, 506527656L, 3611430115L, 583245228L, 899099453L, 716370754L, 478219451L, 4219268749L, 619317165L, 1779187285L, 3990791623L, 2226204395L, 1141715481L, 779972766L, 2039961430L, 2761415908L, 3851008150L, 3549049980L, 3298908792L, 1947149511L, 653049681L, 1682805833L, 611971404L, 617878358L, 615682146L, 2377851102L, 3450783965L, 839504482L, 925789969L, 1048998927L };
		long[] output0 = new long[]{ -3157478483L, -578830060L, -893706709L, -1363404675L, -654275012L, -4333437136L, -1487017996L, -1338220594L, -1868520696L, -1951444734L, -5453987219L, -3571540951L, -1659307620L, -587106862L, -1846535945L, -461660742L, -905929730L, -632896371L, -435006781L, -688432624L, -5518951480L, -3238024017L, -2417347392L, -5648486819L, -1089542467L, -539709065L, -659545110L, -1064979231L, -2049069904L, -597725241L, -764712076L, -1546685966L, -1139075919L, -3160187971L, 127405407L, 85272872L, 379890941L, -218175725L, -223108196L, 319416659L, 327408855L, 203477617L, 226563178L, 186884787L, 262524848L, 239092356L, -319476446L, -27235182L, 397311102L, -95053484L, -30854124L, -53388538L, 73957928L, -2899422L, 358875937L, 423840402L, -71082593L, -130632882L, -350866733L, -359427703L, 184584516L, -312266935L, 285357152L, -23695076L, -99799688L, -70973837L, -62419240L, 227412485L, 1353493030L, 440398592L, 529361629L, 508899238L, 4797932797L, 586850872L, 912328009L, 723037497L, 480219783L, 6438569793L, 623629212L, 1888453071L, 5748884594L, 2450416171L, 1169129706L, 788582496L, 2209034606L, 3218561021L, 5373737353L, 4659965435L, 4147900394L, 2092775066L, 658102084L, 1774422800L, 616132624L, 622160568L, 619919098L, 2655859910L, 4451362009L, 850253353L, 940246197L, 1070149140L };
		for (int ndx = 0; ndx < 100; ndx++)
			Util.Check("Fixed64.TanFastest", Fixed64.TanFastest(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed32.Tan()
	public static void Fixed32_Tan()
	{
		int[] input0 = new int[]{ -14694, -15162, -63083, -58651, -13098, -16177, -21357, -18605, -9822, -32438, -57752, -17434, -10127, -19572, -8529, -6555, -33804, -24491, -40942, -24665, -19106, -21213, -49598, -44135, -44035, -20509, -54238, -38305, -62077, -24777, -13603, -37328, -29867, -38687, -3059, 1360, 3029, -356, 6007, -2827, -2685, -6, 3164, -4052, 2770, 3369, -1257, 2340, -5983, -4504, -6150, -2196, -60, 3380, 5545, 4463, -192, -4520, -4921, 4001, -333, 3228, -305, 1286, -1606, -4069, 3488, -1076, 10593, 21235, 12173, 11381, 26955, 21277, 12502, 60492, 38473, 31962, 8579, 7705, 8089, 11369, 34652, 43314, 23084, 63268, 11931, 52151, 46181, 17478, 8610, 24687, 14613, 9323, 42279, 23189, 6906, 9114, 42645, 21790 };
		int[] output0 = new int[]{ -14945, -15438, -94122, -81733, -13275, -16513, -22146, -19121, -9896, -35375, -79474, -17857, -10208, -20175, -8577, -6576, -37159, -25698, -47255, -25899, -19666, -21986, -61891, -52289, -52126, -21205, -71315, -43358, -91107, -26029, -13801, -41967, -32122, -43910, -3061, 1360, 3031, -356, 6023, -2828, -2686, -6, 3166, -4057, 2771, 3371, -1257, 2340, -5999, -4511, -6168, -2196, -60, 3382, 5558, 4469, -192, -4527, -4930, 4005, -333, 3230, -305, 1286, -1606, -4074, 3491, -1076, 10686, 22010, 12314, 11496, 28585, 22057, 12655, 86610, 43600, 34762, 8628, 7740, 8130, 11484, 38288, 50959, 24088, 94691, 12064, 66908, 55725, 17904, 8659, 25924, 14860, 9386, 49318, 24207, 6931, 9173, 49894, 22630 };
		for (int ndx = 0; ndx < 100; ndx++)
			Util.Check("Fixed32.Tan", Fixed32.Tan(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed32.TanFast()
	public static void Fixed32_TanFast()
	{
		int[] input0 = new int[]{ -64166, -63478, -19340, -22355, -50558, -40498, -34253, -63142, -19672, -59467, -7732, -41071, -7154, -7424, -33906, -11265, -6909, -29713, -7375, -16185, -55684, -48062, -24339, -39716, -16162, -32312, -51037, -18946, -32978, -35329, -57402, -27663, -49113, -25802, -5512, -5174, 3529, -4058, 5673, 3353, -3060, -2931, -1003, 5114, -1910, -2340, 496, -2698, -795, 975, 338, -1752, -5347, -1038, 1212, -4908, -1096, 2457, -4707, -4005, 5236, -3182, -2856, 3220, -6352, -702, 5535, -748, 61827, 26610, 19164, 44573, 34682, 12938, 8762, 29470, 18130, 31341, 17569, 7710, 9364, 25929, 6890, 8787, 10527, 24699, 22383, 18640, 6594, 58933, 32015, 7911, 7344, 35879, 47073, 6695, 64668, 31199, 49123, 53003 };
		int[] output0 = new int[]{ -97521, -95343, -19922, -23265, -63734, -46584, -37756, -94303, -20285, -83852, -7769, -47452, -7183, -7456, -37295, -11378, -6935, -31932, -7407, -16523, -74553, -59049, -25524, -45417, -16498, -35213, -64673, -19493, -36076, -39203, -78616, -29433, -60981, -27224, -5526, -5185, 3532, -4064, 5687, 3355, -3063, -2933, -1004, 5124, -1911, -2341, 496, -2700, -796, 975, 338, -1753, -5359, -1039, 1212, -4918, -1097, 2458, -4716, -4010, 5247, -3185, -2858, 3222, -6372, -703, 5548, -749, 90377, 28176, 19729, 53010, 38328, 13108, 8814, 31631, 18607, 33971, 18002, 7745, 9428, 27372, 6915, 8839, 10618, 25939, 23296, 19159, 6616, 82457, 34831, 7949, 7374, 39952, 57280, 6718, 99152, 33791, 60999, 68672 };
		for (int ndx = 0; ndx < 100; ndx++)
			Util.Check("Fixed32.TanFast", Fixed32.TanFast(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed32.TanFastest()
	public static void Fixed32_TanFastest()
	{
		int[] input0 = new int[]{ -16427, -8155, -13672, -44375, -8410, -32333, -28777, -41021, -12914, -57017, -31623, -35735, -11903, -7704, -7176, -13142, -11268, -9358, -22715, -18012, -53622, -19266, -18057, -6875, -54466, -15876, -39773, -63344, -18011, -8576, -29862, -38079, -41809, -21721, 2247, -5767, -2910, -4049, -6303, 165, 5683, 3105, -4464, -5726, -3009, 5927, 4227, 6281, 2607, 709, 3590, 4450, -4746, -842, 6487, 5646, 2028, -2640, 5387, 2936, 5374, 2062, -1868, -4223, -2871, 5496, 5659, 3129, 16415, 62496, 6929, 7257, 8956, 6977, 20986, 9828, 13348, 15614, 36889, 60795, 23887, 41722, 12669, 50280, 14434, 43209, 27723, 15331, 21975, 36072, 16660, 62495, 12489, 12925, 26245, 12381, 15699, 62816, 39690, 14706 };
		int[] output0 = new int[]{ -16777, -8198, -13872, -52696, -8457, -35249, -30784, -47394, -13083, -77656, -34338, -39771, -12035, -7740, -7206, -13320, -11380, -9422, -23667, -18476, -69958, -19837, -18525, -6901, -71788, -16191, -45520, -94948, -18475, -8626, -32121, -43053, -48604, -22549, 2248, -5783, -2913, -4055, -6323, 165, 5697, 3107, -4472, -5741, -3012, 5943, 4233, 6300, 2608, 709, 3593, 4457, -4755, -843, 6508, 5660, 2028, -2642, 5399, 2938, 5386, 2062, -1869, -4230, -2874, 5509, 5673, 3131, 16763, 92359, 6955, 7287, 9012, 7003, 21729, 9901, 13533, 15913, 41368, 87442, 25000, 48468, 12827, 63181, 14669, 50805, 29504, 15613, 22832, 40233, 17024, 92356, 12640, 13093, 27742, 12528, 16003, 93325, 45396, 14955 };
		for (int ndx = 0; ndx < 100; ndx++)
			Util.Check("Fixed32.TanFastest", Fixed32.TanFastest(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed64.Asin()
	public static void Fixed64_Asin()
	{
		long[] input0 = new long[]{ -4119418235L, -3575037635L, 690882994L, 1885943178L, 256673130L, 1972190286L, 1751313002L, -3344565227L, 3695692195L, 2739824707L, 1046292202L, -1909314586L, 413198658L, 3810250695L, -2900348627L, -3383337879L, -1107859170L, -236040214L, 2876046191L, -328455194L, -1778867326L, 538676426L, -2462886823L, 1357696406L, 637375574L, -3909845355L, 2269806731L, 2926480007L, -647649814L, -2326230979L, 2547567719L, -1483332074L, 814560306L, -864146386L, 3839680327L, -189844010L, -2375112207L, 573361490L, -1244864638L, 973608462L, -3304969191L, 135386602L, -525079186L, 1773991158L, -3273419827L, -3199838087L, -590067394L, -1404391682L, -3155729947L, -30317422L, 3481248827L, 3495263231L, -3033760919L, -1542076890L, -3795561075L, -363127366L, 3182816483L, 3628153883L, -3046399691L, -128448810L, 3997350851L, 3119800291L, 1598051882L, 1726955878L, -4102710307L, -1765343018L, 1571092402L, -3017622251L, 4265537663L, 1584462678L, 3286741623L, 2613746635L, -3286142871L, -2392529567L, -1318453298L, 2380713367L, -3231211683L, 58089314L, 336148938L, -457753634L, 975189334L, -620768882L, 1787242658L, 3677634903L, -1512512510L, 3347271783L, -2744538451L, -1938330098L, -1363552606L, -92159602L, 922306802L, -1708298794L, -675206114L, 3178551467L, 1271224906L, -2129802186L, 2832302015L, 2042932230L, 1581734170L, 2786890487L };
		long[] output0 = new long[]{ -5514309107L, -4223607943L, 693897716L, 1952503572L, 256826152L, 2049038856L, 1803880996L, -3833767775L, 4450411576L, 2971206704L, 1056927500L, -1978555801L, 413838716L, 4686313360L, -3184107845L, -3896133411L, -1120527473L, -236159193L, 3151272444L, -328776189L, -1834105777L, 540098768L, -2622907469L, 1381390016L, 639738520L, -4913807971L, 2391479720L, 3219672812L, -650129693L, -2458269641L, 2727167164L, -1514525141L, 819524204L, -870085521L, 4751023204L, -189905881L, -2516676041L, 575078288L, -1262988425L, 982145780L, -3771217147L, 135409028L, -526396041L, 1828750024L, -3722153523L, -3610200783L, -591939573L, -1430704605L, -3544632175L, -30317669L, 4059070240L, 4083091720L, -3368680445L, -1577292637L, -4654706103L, -363561385L, 3584766668L, 4321120548L, -3386572583L, -128467961L, 5138231156L, 3492012756L, 1637430556L, 1777242200L, -5456578919L, -1819258765L, 1608424776L, -3345941297L, 6243440488L, 1622800172L, 3742789456L, 2809960924L, -3741859439L, -2537614609L, -1340091325L, 2523402152L, -3657526875L, 58091080L, 336493068L, -458624701L, 983768976L, -622950765L, 1843311944L, 4415213464L, -1545660613L, 3838084552L, -2977331225L, -2011009165L, -1387564225L, -92166669L, 929546584L, -1756886429L, -678018741L, 3578419808L, 1290557960L, -2228450701L, 3092730920L, 2129062696L, 1619865004L, 3032689396L };
		for (int ndx = 0; ndx < 100; ndx++)
			Util.Check("Fixed64.Asin", Fixed64.Asin(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed64.AsinFast()
	public static void Fixed64_AsinFast()
	{
		long[] input0 = new long[]{ -475963194L, -1867412438L, -1374962050L, -445225330L, 977908250L, -3427465103L, 2486438807L, 3653735943L, 4071343703L, -1881307146L, -1426882978L, -1170240126L, -1002962350L, 1706321238L, 3191329151L, 323152438L, -2962409663L, 2215384275L, -1055498906L, -3155014795L, -3315771863L, -785544794L, 2640897651L, 62729970L, -3632811419L, 700073122L, -1006014546L, -2169727043L, 631212822L, -3483618407L, 3843378647L, -979176618L, 2771322439L, 1844225746L, -4276757735L, -1452365522L, -3540774127L, -2062499306L, -1595240642L, -2380014703L, -3434134319L, -2103307098L, -1714706506L, -3777212755L, -2960243919L, -2202420367L, 3589630851L, 1913439942L, 4282189611L, -3346894827L, -3462359819L, -3678049555L, -1196536158L, 441781670L, 1807695054L, -3985385695L, -213342794L, 2857275275L, -1107381206L, -4017132167L, 1873516738L, 361198554L, -1272444174L, 3259994815L, -1429718498L, 3847260935L, 353404730L, 1447779198L, 1688111678L, 348727378L, -431040730L, 3395056939L, -484342378L, -2970451499L, -4015847771L, 3082502531L, -3365805583L, 2123143110L, -1271993406L, 2864576243L, 1405409566L, 1375512806L, -2156949359L, -316859646L, 4273708707L, 3226460907L, -4077607755L, -1965426526L, -4258436603L, 4003595255L, 3055944567L, -2103082106L, 3339849195L, -1873075770L, 41435854L, 499634422L, 3464104371L, -679734026L, 1947473038L, -2512537559L };
		long[] output0 = new long[]{ -476938793L, -1931939185L, -1399602109L, -446023561L, 986544144L, -3968572427L, 2651681868L, 4369371368L, 5354476496L, -1947381877L, -1454534209L, -1185211481L, -1012292097L, 1754759428L, 3597459148L, 323456328L, -3269063489L, 2327667200L, -1066405381L, -3543554923L, -3788207887L, -789973917L, 2844245284L, 62732112L, -4329853059L, 703196700L, -1015431297L, -2274575753L, 633497452L, -4063122983L, 4759294344L, -987846773L, 3012261444L, 1906227992L, -6350885143L, -1481584309L, -4162434107L, -2151360221L, -1634424701L, -2522533185L, -3979656467L, -2198017285L, -1763901453L, -4615817111L, -3266073297L, -2312552801L, 4250065468L, 1983197136L, 6415139804L, -3837519143L, -4026993759L, -4416038479L, -1212566845L, 442561480L, 1865866208L, -5105826951L, -213429313L, 3126081580L, -1120017553L, -5193200795L, 1938720280L, 361623740L, -1291823929L, 3701497948L, -1457541189L, 4768008184L, 353802840L, 1476711416L, 1734935456L, 349109808L, -431764885L, 3915240412L, -485370477L, -3280183881L, -5189576807L, 3438061912L, -3867825475L, 2220799432L, -1291351953L, 3135872452L, 1431786068L, 1400183544L, -2259786433L, -317146009L, 6319009976L, 3650332416L, -5374281951L, -2041461213L, -6185954699L, 5155393268L, 3400102420L, -2197759273L, 3826295252L, -1938230253L, 41436500L, 500763088L, 4029942940L, -682591197L, 2021294712L, -2683774357L };
		for (int ndx = 0; ndx < 100; ndx++)
			Util.Check("Fixed64.AsinFast", Fixed64.AsinFast(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed64.AsinFastest()
	public static void Fixed64_AsinFastest()
	{
		long[] input0 = new long[]{ 1739142198L, -2153115643L, -4069639031L, -361505062L, 1379113198L, -2562449463L, 1101260118L, -2521051955L, 162662146L, 3020159819L, 3675387183L, 1958481390L, -165698614L, 323009846L, -1127574438L, -3796963363L, -1776819382L, 3339382767L, 3281253403L, -361212110L, 3629901395L, -1976136038L, 1411248506L, 1979483718L, 1587750106L, -2622925919L, -4239759551L, -2906233903L, 1283079942L, -220514898L, 3913365455L, 1608895738L, -4119297223L, -3054423143L, -3169533251L, -736442086L, 1150184542L, 2499522999L, 2598994451L, 2541190875L, -2169766507L, 2738411495L, 2166878623L, -2983629127L, -3966759223L, -3197504119L, 2357583803L, -1278127946L, 3549465963L, -456568078L, -2018513490L, -4170245691L, 333979866L, -1986282146L, -1847471658L, -579689058L, 730603146L, -1754155454L, 2345712127L, -292928178L, -2617657207L, -287473274L, 490835398L, -3911790251L, 3401761659L, -2228475851L, 1782811318L, -1406242766L, -802424198L, 3903834943L, -652180610L, 18624914L, -3554578979L, -3554904767L, -2486412899L, -3403477395L, 151952634L, 99910338L, 1651275646L, 490286930L, -685542426L, 1333335690L, -2160732571L, -2555319275L, -2496968703L, 3788643851L, -3020051423L, 2161952219L, 3088015811L, 1705123102L, 2827922063L, -1390627298L, -4141156423L, -1403044666L, 863880786L, 2412674063L, -2047391198L, 1783701578L, -2090423490L, 2556683923L };
		long[] output0 = new long[]{ 1790495080L, -2256480405L, -5349898231L, -361937453L, 1403290348L, -2746581325L, 1113009484L, -2695385345L, 162738832L, 3348692760L, 4409588420L, 2034211640L, -165777757L, 323334020L, -1140241769L, -4656948543L, -1831894461L, 3825347272L, 3734764904L, -361643585L, 4323011784L, -2054126957L, 1437293968L, 2057908612L, 1625918600L, -2822144561L, -6057423651L, -3190993317L, 1302239252L, -220650457L, 4922188936L, 1648742656L, -5514696483L, -3398913699L, -3566503151L, -739780169L, 1163680292L, 2668922420L, 2792129804L, 2720239056L, -2275785429L, 2969248880L, 2272433772L, -3297351569L, -5056997915L, -3608008383L, 2497034236L, -1297050485L, 4176338712L, -457383137L, -2102124721L, -5709755283L, 334332488L, -2065593601L, -1910032657L, -581312469L, 733860880L, -1806969549L, 2482849592L, -293183345L, -2815523529L, -287717257L, 491835968L, -4918354575L, 3925372424L, -2344242277L, 1838495376L, -1431990713L, -806771321L, 4899106128L, -654488277L, 18631204L, -4185433447L, -4186013955L, -2652860493L, -3928168827L, 152021124L, 99947828L, 1694642128L, 491284308L, -688225789L, 1355017908L, -2265305525L, -2737733673L, -2665789905L, 4639191888L, -3348539205L, 2266719564L, 3447383104L, 1753270764L, 3086185040L, -1415462573L, -5594528299L, -1428603793L, 869347500L, 2563235136L, -2134992501L, 1839476520L, -2184218105L, 2739426052L };
		for (int ndx = 0; ndx < 100; ndx++)
			Util.Check("Fixed64.AsinFastest", Fixed64.AsinFastest(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed32.Asin()
	public static void Fixed32_Asin()
	{
		int[] input0 = new int[]{ -10457, -8104, 58277, 60128, -62551, 34451, 56141, -6196, -57904, -41793, 54372, -55912, 13573, -37224, -59545, 5248, -36952, -19055, 43947, 59632, -53457, 59750, -3040, 27273, -49118, -54268, -2062, 32706, -1889, -9218, 44843, 40637, -32114, 51720, -47597, 63180, 27603, -27562, -41975, -7016, -63867, 25650, 25357, 23376, 37182, 33527, 30743, 39571, -27399, -57602, 8230, 53350, 48805, -25993, 26933, -4672, 60472, -34532, 43711, 57253, -29021, -42100, 61228, 16849, -21101, -51801, 41737, 27388, -55163, -57189, 43180, 56146, -42615, -14572, 57964, -13571, -31142, 39118, 55627, -17109, -19475, 23901, -5430, -9822, 48087, 57029, 57367, 59415, -40748, 22611, -62828, -3399, -5738, -33692, -43530, 43768, 29957, -57028, -21058, 23447 };
		int[] output0 = new int[]{ -10502, -8125, 71806, 76133, -83088, 36275, 67418, -6206, -71001, -45320, 64125, -66978, 13671, -39589, -74704, 5253, -39259, -19335, 48168, 74912, -62517, 75198, -3042, 28128, -55528, -63940, -2063, 34243, -1890, -9249, 49386, 43832, -33562, 59603, -53274, 85317, 28492, -28447, -45557, -7030, -88122, 26354, 26036, 23902, 39537, 35194, 31999, 42484, -28268, -70362, 8251, 62331, 55056, -26728, 27755, -4676, 77011, -36371, 47850, 69636, -30065, -45720, 79049, 17040, -21484, -59736, 45246, 28255, -65567, -69506, 47141, 67428, -46395, -14695, 71128, -13670, -32453, 41918, 66434, -17310, -19774, 24465, -5437, -9860, 53990, 69179, 69871, 74393, -43975, 23085, -84039, -3401, -5746, -35387, -47609, 47927, 31112, -69178, -21439, 23978 };
		for (int ndx = 0; ndx < 100; ndx++)
			Util.Check("Fixed32.Asin", Fixed32.Asin(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed32.AsinFast()
	public static void Fixed32_AsinFast()
	{
		int[] input0 = new int[]{ 57325, -62181, 29198, -35746, -35247, 17620, 30430, -2158, -18422, -25031, -39065, -44182, -24624, -4714, 11192, 12612, 28865, 5515, 34298, -12594, -43633, 47857, 2601, -12238, -59896, -18955, -3650, 56613, -36577, -51340, 22007, -39650, -5359, -33355, -8899, -22830, 60239, -35219, -40110, -35069, -38937, -6009, 12301, 49818, -3859, 46889, -44311, 64511, 20650, 9392, -50632, -41094, -25790, 57071, 1544, -56068, 753, -24099, -41385, 49243, -44264, 39352, -31117, -32617, 18497, -64951, 26713, -56804, -61351, -31512, 17909, -1450, -19909, 3831, -39193, 27912, -29980, 18319, 57156, -41250, -40179, -2626, -29573, 19566, 64827, -2434, 51676, 3105, 30635, -18366, 41952, 18802, -59370, -23818, -56340, -12753, -40428, -20616, -34215, -4443 };
		int[] output0 = new int[]{ 69784, -81884, 30262, -37809, -37215, 17839, 31645, -2159, -18674, -25684, -41852, -48487, -25244, -4719, 11246, 12690, 29891, 5521, 36095, -12673, -47747, 53652, 2601, -12310, -75556, -19230, -3652, 68344, -38805, -58990, 22443, -42584, -5365, -34995, -8927, -23320, 76413, -37182, -43164, -37004, -41693, -6018, 12374, 56594, -3862, 52250, -48661, 91337, 21007, 9424, -57863, -44417, -26508, 69264, 1544, -67278, 753, -24679, -44792, 55716, -48598, 42209, -32425, -34141, 18751, -94181, 27514, -68726, -79397, -32874, 18139, -1451, -20229, 3833, -42012, 28833, -31139, 18566, 69437, -44618, -43251, -2627, -30683, 19868, 93294, -2435, 59532, 3106, 31877, -18616, 45526, 19069, -74287, -24377, -67807, -12835, -43567, -20973, -35999, -4447 };
		for (int ndx = 0; ndx < 100; ndx++)
			Util.Check("Fixed32.AsinFast", Fixed32.AsinFast(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed32.AsinFastest()
	public static void Fixed32_AsinFastest()
	{
		int[] input0 = new int[]{ -45359, -53042, 60327, -13372, 57018, 16353, 44351, 35913, 30728, 39168, 39447, 47969, -15719, 65400, 23887, 23897, 3389, 14852, -31909, -44604, -51091, -41927, -21903, 22551, -7929, 64643, -7616, -61627, -5364, 39096, 2804, 56172, -13001, -3935, -61427, -52673, 2582, 49335, 28083, -17061, 18750, -49773, 37912, 57002, 7722, 59518, -31014, -59235, 17829, -14702, 49392, 10255, -54243, -55146, -18888, 62104, 34397, -27760, 60092, 57911, -41566, 40442, -24258, 57168, -29172, 48810, -4564, 53751, 61292, 11024, -44220, 19590, 52304, 50688, 2181, 64218, -14304, -13370, -50706, -1911, 30121, -13916, -13921, -56197, 55240, 58085, 44879, -23390, -50582, -57995, -21534, -35193, 54779, 35708, -41031, 43843, 40020, 46280, 20639, 24447 };
		int[] output0 = new int[]{ -50081, -61784, 76642, -13460, 69140, 16517, 48697, 38028, 31994, 41994, 42341, 53840, -15865, 98720, 24443, 24453, 3391, 14973, -33342, -49042, -58586, -45491, -22323, 23012, -7947, 92118, -7633, -80208, -5371, 41904, 2805, 67459, -13081, -3938, -79625, -61162, 2583, 55871, 29025, -17250, 19004, -56537, 40445, 69107, 7738, 74634, -32320, -73964, 18045, -14820, 55957, 10293, -63873, -65514, -19149, 81652, 36231, -28668, 76044, 71003, -45026, 43591, -24843, 69447, -30240, 55083, -4569, 63004, 79238, 11072, -48521, 19882, 60548, 57950, 2181, 89785, -14412, -13458, -57979, -1912, 31306, -14015, -14020, -67509, 65687, 71377, 49417, -23910, -57785, -71184, -21932, -37172, 64838, 37784, -44340, 48013, 43059, 51375, 20985, 25046 };
		for (int ndx = 0; ndx < 100; ndx++)
			Util.Check("Fixed32.AsinFastest", Fixed32.AsinFastest(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed64.Acos()
	public static void Fixed64_Acos()
	{
		long[] input0 = new long[]{ -95226430L, -1260229086L, -3603915115L, -3848982651L, -2360461059L, -2341833975L, 1539273982L, -2581826495L, 537926610L, -1151510414L, 712556278L, -1164453274L, -2791148467L, -231473950L, -2473728303L, 2482943215L, -732148586L, -2201760067L, -4168614467L, -1423523526L, -4037338315L, -3061186127L, 2542690159L, 3522672763L, -2161179239L, 3703393059L, 1988811898L, -3207353283L, 1715989558L, 1564570102L, -2709154139L, 324512294L, 2066102922L, -630317786L, 4264920871L, -1060698386L, -1603107262L, -1358339834L, 2972436835L, 1667085646L, -2027577758L, 1228098182L, 2224112887L, 2131479998L, -218390546L, 4048153215L, -3810267279L, -473483674L, 518953014L, -877021574L, -689482614L, 529582414L, 2906660819L, -1518845950L, 1344542106L, -1329007598L, 492048050L, -2831620583L, 2607163883L, -1768886822L, -35678578L, 451659970L, -2848758L, 3268323803L, -2737323571L, -3906923311L, 1064411098L, 2134136614L, -201427526L, 2881937379L, -208916818L, -3668776047L, -879229606L, -1540732818L, -3690913063L, -970469202L, -990331718L, -3883757135L, -553903986L, -1914365158L, 3218693043L, -1832671722L, 568660998L, -1701956162L, -2040914578L, 1056230742L, 1712818770L, -710018422L, 2320107403L, 1298961174L, 2742220859L, -3066453975L, 329463578L, 446356362L, -2592203071L, 1815729566L, -3064020355L, 3250756379L, 573836274L, -606434530L };
		long[] output0 = new long[]{ 6841753081L, 8025569965L, 11022717364L, 11518403748L, 9245634097L, 9223375677L, 5172228972L, 9516395977L, 6207175860L, 7912290933L, 6030652632L, 7925731517L, 9784807393L, 6978104997L, 9382674025L, 4099080880L, 7482260513L, 9058300037L, 12448659260L, 8197484785L, 11997878468L, 10154119600L, 4025406956L, 2615892732L, 9011189681L, 2280947404L, 4678747956L, 10368002668L, 4981246528L, 5145099832L, 9678050457L, 6421697004L, 4591070760L, 7379121445L, 508328936L, 7818306505L, 8389397209L, 8128587089L, 3463622400L, 5034451004L, 8858145045L, 5501038112L, 4408656384L, 4516135808L, 6965003613L, 1463126644L, 11432868148L, 7220966861L, 6226294736L, 7629752509L, 7438997753L, 6215585248L, 3553844920L, 8298948397L, 5378986708L, 8097704557L, 6253388052L, 9838343405L, 3944847552L, 8569665761L, 6782197833L, 6294022252L, 6749367605L, 3032228424L, 9714478793L, 11653279396L, 5670899376L, 4513075148L, 6948020285L, 3587307616L, 6955518137L, 11144638200L, 7632008189L, 8322371485L, 11187567548L, 7725441745L, 7745842909L, 11598277060L, 7301969877L, 8730714829L, 3107946684L, 8639925697L, 6176183156L, 8496494709L, 8873288129L, 5679341020L, 4984704768L, 7459811681L, 4295529796L, 5426892884L, 3772199756L, 10161636424L, 6416731308L, 6299355084L, 9529395293L, 4871826024L, 10158162168L, 3059206352L, 6170961488L, 7354986701L };
		for (int ndx = 0; ndx < 100; ndx++)
			Util.Check("Fixed64.Acos", Fixed64.Acos(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed64.AcosFast()
	public static void Fixed64_AcosFast()
	{
		long[] input0 = new long[]{ -1311225178L, -1649436598L, 4022911147L, 1931982930L, 3626862539L, -1315673862L, -2886155275L, 152426342L, -2122900182L, -1979955986L, 3956291415L, 80837890L, 2017250698L, 226561746L, -692612570L, -2497974151L, 4177966267L, -2595859891L, 1014271086L, 501412982L, -1324774786L, -2520537775L, 4108996507L, 2794578595L, -4155250775L, -1437430138L, 296727670L, 2969381327L, -3243497043L, -1211675334L, -2201416143L, 53879198L, -162626114L, -4242436751L, 3691827315L, 573162346L, -1560615574L, 2931645363L, -1033851406L, 3569726579L, -352581278L, -2734574867L, -2882085535L, 5096094L, 1637637054L, -1633584326L, -788737378L, -4192065463L, -3155998363L, 4200738375L, 1932730594L, 3826806831L, -2058482002L, -4222544003L, -3576627039L, -3085654699L, -1463465810L, -3066634743L, 1792266410L, 769325382L, 2682565763L, -1560569306L, -899043910L, 3383742447L, -4073507139L, -392555078L, -4051503291L, 1964720154L, 829701726L, 3029192379L, 3357608719L, -3048646391L, 2732958811L, 1739511802L, -3440973035L, -2885167215L, -3933419535L, -191066882L, -3138025755L, 1773300846L, 3646274535L, 193825838L, 1830412394L, -3149268123L, 1150561366L, -1733255678L, -2182606095L, -235049406L, 3629157583L, 2482514719L, -2258339139L, -2788948127L, -3155588343L, 2491790507L, -3407806479L, -3086979267L, 2459436339L, -1970860686L, -216364062L, -2264775163L };
		long[] output0 = new long[]{ 8079010313L, 8439479305L, 1536912760L, 4742585492L, 2427796608L, 8083683297L, 9911446853L, 6594061316L, 8967038861L, 8804335805L, 1717073408L, 6665676392L, 4646571104L, 6519853296L, 7442155401L, 9412363989L, 1004789076L, 9533941649L, 5722592920L, 6243965104L, 8093248237L, 9440165461L, 1268524148L, 3703717288L, 12394543476L, 8212241749L, 6449556332L, 3467816396L, 10422757408L, 7974857761L, 9057902165L, 6692638288L, 6909182941L, 12820623668L, 2303662328L, 6171649064L, 8343712209L, 3519749220L, 7790605801L, 2532478016L, 7099495449L, 9710893517L, 9905953533L, 6741422744L, 5066330600L, 8422323921L, 7539740273L, 12550992948L, 10291524044L, 901327968L, 4741748308L, 2024035056L, 8893301029L, 12703202864L, 10972997112L, 10189109692L, 8239905161L, 10161858496L, 4897646616L, 5973036292L, 3849173316L, 8343662541L, 7652243205L, 2849697704L, 12107804992L, 7139620381L, 12039967868L, 4705851988L, 5911586492L, 3384262896L, 2891862368L, 10136251208L, 3784239920L, 4955523472L, 10737580276L, 9910112589L, 11718112228L, 6937647661L, 10265107028L, 4918494248L, 2391305464L, 6552628332L, 4855573708L, 10281610964L, 5581746480L, 8530673789L, 9036031465L, 6981684301L, 2423507804L, 4099647440L, 9124496525L, 9781909473L, 10290919412L, 4088270240L, 10682637340L, 10191014300L, 4127861672L, 8794093541L, 6962973201L, 9132065617L };
		for (int ndx = 0; ndx < 100; ndx++)
			Util.Check("Fixed64.AcosFast", Fixed64.AcosFast(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed64.AcosFastest()
	public static void Fixed64_AcosFastest()
	{
		long[] input0 = new long[]{ -1877048330L, 1541509762L, -726799894L, -1890223446L, -3451837639L, 686409690L, -3201119275L, 496973490L, 3513396327L, 3603507471L, -3447202459L, 3022568367L, -4223576283L, -4276001731L, 1418018142L, -1806227370L, 903985594L, -2044743082L, -2061786214L, 1954715834L, -2504916279L, 478513410L, 2630529867L, 2642154303L, 992564222L, 1851589550L, -4188025343L, -4053798991L, 852350986L, 3940973527L, -1049636258L, 2332408447L, -4269670115L, 3421716703L, -644618118L, -2190202523L, -3374341563L, -574331454L, -3992397779L, -3830815619L, -2827103699L, 1615387710L, 546521562L, -4269317183L, 1634749882L, -985940210L, -2860339139L, -3174553907L, -3221194931L, 2693388187L, 304002434L, 209212126L, -4204041767L, 2123887398L, -4054826179L, 1939405554L, 3205947191L, 926013098L, 1412179626L, -1008459894L, 579467738L, -3442287579L, 3939589799L, 3867390095L, 358176434L, -1484643610L, 2997271187L, -3350325691L, 663583682L, -686746630L, -2726853103L, -2816650247L, -2347312599L, -2525937891L, 486852238L, 174663306L, 4226959143L, 2604879755L, -3287562875L, -2316462863L, 416961394L, 3281495859L, 3462363235L, 2453930095L, -657996202L, 3036118911L, 2241482919L, -2098590218L, 3181575587L, 1710943622L, -1101182418L, -5387366L, 2308456215L, 1311029410L, -115316062L, -3679783415L, 1970765206L, 974098762L, -332526322L, -1175573802L };
		long[] output0 = new long[]{ 8689464737L, 5170336084L, 7476524889L, 8704165749L, 10754584880L, 6057415488L, 10359919236L, 6248508560L, 2633512628L, 2472506472L, 10746834104L, 3394412252L, 12709335824L, 13089325852L, 5302049032L, 8610855669L, 5836233940L, 8878491853L, 8897944829L, 4716548892L, 9422060405L, 6267074800L, 3914805468L, 3900146872L, 5745503064L, 4831911068L, 12533179540L, 12047739656L, 5888925240L, 1755836388L, 7806242193L, 4279531436L, 13026682308L, 2788463936L, 7393365033L, 9046063853L, 10627537024L, 7322429805L, 11871894308L, 11477189316L, 9831621741L, 5090758656L, 6198632064L, 13023442376L, 5069799944L, 7740733893L, 9875780405L, 10320445140L, 10389984292L, 3835087180L, 6442237320L, 6537184856L, 12608202520L, 4523810728L, 12050849060L, 4733773288L, 3125907340L, 5813712692L, 5308238152L, 7763865329L, 6165429532L, 10738637684L, 1759329236L, 1933239372L, 6387920336L, 8261854345L, 3430087752L, 10589190616L, 6080503640L, 7435963169L, 9700864761L, 9817821125L, 9231279085L, 9447925081L, 6258689052L, 6571768772L, 764924092L, 3947021724L, 10491003964L, 9194540181L, 6328923792L, 3011380900L, 2720776328L, 4133286948L, 7406885313L, 3375135692L, 4387026068L, 8940113133L, 3162191568L, 4986889464L, 7859447993L, 6751908053L, 4308002092L, 5414954320L, 6861880265L, 11164623840L, 4698455432L, 5764454644L, 7079393921L, 7936563617L };
		for (int ndx = 0; ndx < 100; ndx++)
			Util.Check("Fixed64.AcosFastest", Fixed64.AcosFastest(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed32.Acos()
	public static void Fixed32_Acos()
	{
		int[] input0 = new int[]{ 4757, -58059, 6970, 26863, 17170, -17918, -26526, 39930, -40556, 999, 30630, -56364, -1241, -8641, 43785, 24306, -39820, -42866, 3515, 24673, 8679, 12220, -34132, 49554, -59212, 24009, -12666, 9714, 28752, -1958, 38129, -15901, -20714, 33309, 25432, -1114, -22435, -39567, -45262, -57657, 7318, 59808, -57001, -17988, 61012, -25974, -64376, -21670, 41754, 39470, 49207, 7402, -54188, 35788, 38918, 58072, 41609, 22952, 20539, 58696, 60284, 29295, -54358, 26937, 28405, -19004, 29886, 30984, 31462, -20635, -18794, 65283, -63140, -4362, -48180, 14407, 3685, 49391, 54078, 32298, 22850, -56532, 33495, 54818, 14370, -34808, -27248, 9033, 59927, 32896, 22812, 20148, 5428, -38422, -52405, 43558, 48630, -18402, 19142, 14480 };
		int[] output0 = new int[]{ 98182, 174276, 95960, 75265, 85570, 121092, 130253, 60007, 146673, 101944, 71072, 170797, 104184, 111609, 54993, 78042, 145741, 149668, 99427, 77647, 94239, 90651, 138844, 46754, 176860, 78362, 115689, 93193, 73178, 104901, 62249, 119005, 124019, 68002, 76825, 104057, 125841, 145423, 152906, 173420, 95610, 27603, 172066, 121165, 24493, 129650, 193538, 125029, 57674, 60585, 47281, 95525, 166741, 65084, 61274, 31582, 57862, 79494, 82052, 30208, 26415, 72573, 167044, 75184, 73564, 122224, 71910, 70671, 70127, 123935, 122005, 5760, 188111, 107308, 157070, 88418, 99256, 47002, 39341, 69170, 79603, 171127, 67786, 38011, 88455, 139639, 131044, 93881, 27311, 68481, 79643, 82464, 97509, 143998, 163675, 55298, 48149, 121596, 83518, 88343 };
		for (int ndx = 0; ndx < 100; ndx++)
			Util.Check("Fixed32.Acos", Fixed32.Acos(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed32.AcosFast()
	public static void Fixed32_AcosFast()
	{
		int[] input0 = new int[]{ 9675, -29824, 12403, -3145, -7271, 49460, 5006, 15710, 18432, -41025, -11149, 57754, 34409, 53777, -29689, 51280, 61336, -43641, -52968, -2322, -57291, -44682, 36593, 64101, 22087, 26592, -5681, 40818, -17492, -26202, 31312, -43447, -35287, -25937, -42913, -12861, -3400, -28895, -3446, 30445, 25721, 22576, 56136, 35416, -21490, 30593, 51275, 17186, 56802, -38150, 47758, 26736, -30969, -44071, 6235, -11177, -881, 13837, 40302, 31672, -10394, 29723, -32333, -20900, -6802, -33237, 27505, -5188, 31154, 48707, -10854, 24695, 25340, -17878, 37492, -14331, -35283, -64359, 20056, 57029, 40853, 42667, 49552, -44877, -8425, -60959, 53057, -56751, 33362, 33800, 53556, 48297, -3662, 30417, -24695, 61533, -10625, 11501, -23317, -53788 };
		int[] output0 = new int[]{ 93233, 133907, 90465, 106089, 110229, 46897, 97932, 87079, 84259, 147271, 114146, 32262, 66718, 39871, 133755, 44050, 23590, 150700, 164622, 105266, 172658, 152110, 64119, 13739, 80415, 75561, 108631, 58880, 120650, 129899, 70297, 150441, 140205, 129610, 149731, 115888, 106345, 132868, 106391, 71280, 76511, 79895, 35534, 65528, 124838, 71113, 44058, 85554, 34222, 143663, 49436, 75403, 135199, 151279, 96699, 114175, 103824, 89002, 59537, 69887, 113381, 72093, 136757, 124215, 109757, 137801, 74559, 108137, 70477, 48034, 113847, 77623, 76925, 121051, 63030, 117391, 140201, 193448, 82560, 33764, 58835, 56481, 46756, 152377, 111391, 181249, 41113, 171563, 67941, 67431, 40256, 48643, 106607, 71312, 128264, 23024, 113615, 91383, 126783, 166035 };
		for (int ndx = 0; ndx < 100; ndx++)
			Util.Check("Fixed32.AcosFast", Fixed32.AcosFast(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed32.AcosFastest()
	public static void Fixed32_AcosFastest()
	{
		int[] input0 = new int[]{ -62447, -9072, 51568, -57441, 38240, -42473, -64140, 52445, -16028, -44968, -41430, -2058, 59317, 48809, 56354, 12473, 45707, -52991, 53060, -11378, -20759, 18721, 26984, 62890, 60687, 6383, -37177, 60458, -58719, 41495, 61829, 18751, 24493, 8308, 53941, -15610, 56635, 41457, -17581, -31488, -62354, -64923, 24812, 12795, 9694, -9920, 54516, 13064, 39598, 28366, -49710, -23170, 23976, 53597, 32506, -15632, 29478, 54213, -52592, -33679, 60240, -59063, 45628, 8012, -41262, 5354, 38983, -14526, 60403, 6428, 21373, -61285, 30126, 19012, -14559, -21372, 59444, -51346, -12340, 5071, 17403, 15294, -44675, -21550, 25670, 19464, 60310, 36432, 41337, 4038, 20447, -63113, 28513, -49438, -26192, 62244, -45016, -48735, -11478, -61195 };
		int[] output0 = new int[]{ 185696, 112042, 43595, 172955, 62096, 149144, 192344, 42162, 119125, 152483, 147793, 105002, 28786, 47861, 35129, 90400, 52377, 164641, 41129, 114374, 124055, 83969, 75132, 18673, 25360, 96550, 142494, 25962, 175721, 58009, 22135, 83938, 77847, 94615, 39605, 118695, 34574, 58058, 120731, 135803, 185392, 196920, 77502, 90072, 93217, 112898, 38581, 89798, 60413, 73603, 159383, 126617, 78404, 40207, 68914, 118718, 72360, 39124, 163970, 138334, 26524, 176507, 52488, 94913, 147578, 97583, 61179, 117582, 26105, 96505, 81182, 182162, 71631, 83665, 117616, 124703, 28485, 161935, 115351, 97867, 85340, 87516, 152082, 124892, 76570, 83192, 26344, 64292, 58212, 98902, 82160, 188024, 73439, 158970, 129886, 20848, 152549, 157915, 114476, 181910 };
		for (int ndx = 0; ndx < 100; ndx++)
			Util.Check("Fixed32.AcosFastest", Fixed32.AcosFastest(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed64.Atan()
	public static void Fixed64_Atan()
	{
		long[] input0 = new long[]{ 1089970842L, 229835174L, 1192538466L, -2121149238L, -3836656179L, -3536376179L, 802125234L, -3969659599L, 171803650L, -763941022L, -625306386L, 1001988482L, 66716854L, 515867586L, 947222254L, -1349372082L, 3352068447L, 107679218L, 3137737331L, 315193138L, 693360398L, -4127760967L, 633820546L, -601009746L, 3376250051L, 1242002174578L, -1590143306740L, 919392146428L, -1332383318620L, -738479402343L, -2745442571278L, 2794729583301L, 1682137754783L, -1093202926509L, 3537391795647L, -3384262927575L, 4104745475911L, 3488240363624L, -1870637166871L, 923722190430L, -3821497167779L, 3627202647689L, -2079148286968L, -821917022382L, -3405008855585L, -3956911275842L, 92028442042L, -2942142915370L, 107741838050L, 3927784227829L, 24972977834L, 2812110447992767L, 1016604697914L, 348055433219848128L, 52302061448329L, 1313846210781632L, 1734345922196752640L, 330050258616L, 7660388881116L, 21109982215951L, 41468351433544512L, 3471945575130432000L, 7783923685938083L, 38902042019L, 520213980592L, 1170188491570361L, 888781319360342784L, 71190862865L, 3070614028852935L, 153745471285927L, 8506568859992L, 3316632973883023872L, 516218238804L, 913338413182L, 95941750629934L, -3796718105208476L, -32365422684536024L, -145689376625L, -3809803588815L, -220074572467370496L, -69497251177L, -113335124208L, -30639123087L, -13603820101891L, -4050512703263L, -299817495994107L, -515721090442796L, -109423751278582480L, -879889421848624640L, -2408847652681L, -103547436240L, -37866279480581024L, -366799236632583L, -331982445258700800L, -146451671243773280L, -17948264262L, -505331766296L, -101278125815L, -158882992453L, -145951421386391L };
		long[] output0 = new long[]{ 1067436080L, 229616160L, 1163236228L, -1970232161L, -3131444141L, -2958516973L, 792989868L, -3204290517L, 171712100L, -756034217L, -620943613L, 984381900L, 66711484L, 513408136L, 932298128L, -1307432165L, 2846338704L, 107656660L, 2709883392L, 314629120L, 687429536L, -3288007793L, 629278680L, -597132329L, 2861325520L, 6731666488L, -6734918203L, 6726454936L, -6732673979L, -6721539775L, -6739799819L, 6739918316L, 6735552628L, -6729644907L, 6741304072L, -6741068115L, 6742024852L, 6741230592L, -6736657663L, 6726548984L, -6741691759L, 6741433192L, -6737646611L, -6724075503L, -6741101327L, -6741856951L, 6546218076L, -6740249027L, 6575397012L, 6741822384L, 6015007032L, 6746512300L, 6728373516L, 6746518804L, 6746166160L, 6746504816L, 6746518848L, 6690631296L, 6744110788L, 6745645020L, 6746518412L, 6746518852L, 6746516488L, 6274247048L, 6711059744L, 6746503096L, 6746518836L, 6487715824L, 6746512852L, 6746398876L, 6744350328L, 6746518852L, 6710785292L, 6726321952L, 6746326588L, -6746513999L, -6746518287L, -6619938571L, -6741676943L, -6746518775L, -6481424715L, -6583833887L, -6148351555L, -6745162859L, -6741964683L, -6746457331L, -6746483087L, -6746518687L, -6746518835L, -6738860951L, -6568473147L, -6746518371L, -6746468567L, -6746518803L, -6746518731L, -5737715959L, -6710015507L, -6564488455L, -6630444431L, -6746392467L };
		for (int ndx = 0; ndx < 100; ndx++)
			Util.Check("Fixed64.Atan", Fixed64.Atan(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed64.AtanFast()
	public static void Fixed64_AtanFast()
	{
		long[] input0 = new long[]{ -3276762003L, -1067891338L, 79381294L, -4223743343L, 791967194L, -3431614807L, -741201254L, -4250718427L, -909138430L, 2524942191L, 2971377195L, 2435244355L, 3284516399L, 54341270L, -1933664790L, 996734814L, 3366050075L, -1672076030L, 2375943027L, 1669091954L, -3956501543L, -3429702447L, -2450744647L, -1341184194L, -1278171854L, 824619770383L, -531876978247L, -1229704802572L, -655939922305L, -749014030348L, -608386586283L, 940818658438L, 4259156139983L, 2788971995298L, 2019988738940L, 2217865071032L, 1272618314592L, -3554540939655L, 2537799851181L, -2329012463084L, -3241356447509L, 492216706229L, -636275690296L, -3209245059494L, -356749914166L, -1120554614521L, 3321648159546L, -3953603503841L, 846718682394L, -2421747047127L, 170069230932L, 948284780637245056L, 10545161998755L, 91569820747869L, 64323163944345L, 6219443409L, 122124304428L, 133798191190L, 3690430164431743L, 4261190316435835392L, 4123476535996296L, 14013312119L, 766554183963358L, 3129790922739321856L, 8455483200762L, 585810772501L, 55759288772437032L, 14254208082L, 39564485626842128L, 199163893317836L, 2364905111156200448L, 81062540485326160L, 172929620239803L, 379703658272522L, 624434220903587L, -96998723558859L, -5333743059594782L, -26940024063L, -425490045409187584L, -3148844338107236864L, -10930652887765652L, -16995780386494L, -30258180436118476L, -308613484012L, -579801264410L, -156932381518392L, -559026111464L, -198343376674616L, -8037971309370L, -12921211329347714L, -1062397360986750L, -98371147390193L, -32223954029937L, -70927833373894968L, -560316503912619L, -16868521134L, -2787477536863222272L, -44444213467919L, -32444349678025180L, -435059435325L };
		long[] output0 = new long[]{ -2799139949L, -1046667661L, 79372096L, -3337350653L, 783168260L, -2895330701L, -733970525L, -3351020733L, -895914001L, 2282616220L, 2599399688L, 2215346708L, 2804037128L, 54338336L, -1816915421L, 979400268L, 2855013988L, -1594540581L, 2170206344L, 1591948648L, -3197183445L, -2894163225L, -2227058105L, -1299973645L, -1242323209L, 6724149020L, -6711837495L, -6731517991L, -6718396899L, -6721890803L, -6716198615L, 6726911868L, 6742187796L, 6739904676L, 6737386648L, 6738201460L, 6732023904L, -6741329267L, 6739250112L, -6738598359L, -6740827763L, 6709042560L, -6717527795L, -6740770807L, -6694813435L, -6730056603L, 6740965360L, -6741852991L, 6724732968L, -6738901723L, 6638076820L, 6746518836L, 6744769560L, 6746317404L, 6746232068L, 4150757708L, 6595531544L, 6608698104L, 6746513856L, 6746518848L, 6746514380L, 5469201396L, 6746494788L, 6746518848L, 6744337228L, 6715029896L, 6746518524L, 5489564592L, 6746518388L, 6746426232L, 6746518848L, 6746518628L, 6746412184L, 6746470272L, 6746489312L, -6746328675L, -6746515395L, -6067505323L, -6746518811L, -6746518847L, -6746517167L, -6745433483L, -6746518243L, -6686750103L, -6714703475L, -6746401307L, -6713521215L, -6746425847L, -6744223871L, -6746517427L, -6746501491L, -6746331331L, -6745946391L, -6746518591L, -6746485931L, -5675720959L, -6746518847L, -6746103799L, -6746518283L, -6704120115L };
		for (int ndx = 0; ndx < 100; ndx++)
			Util.Check("Fixed64.AtanFast", Fixed64.AtanFast(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed64.AtanFastest()
	public static void Fixed64_AtanFastest()
	{
		long[] input0 = new long[]{ 703357170L, 2826103755L, -1987956034L, -3591686047L, -2145863546L, -1105969458L, -738471046L, 2814572031L, 3501942959L, 4125279611L, -1348600094L, -3670614399L, -1889967526L, 1507013046L, -1830591482L, -2026497058L, -1730040262L, -1065618334L, 2108543890L, 3088335731L, -4275634487L, -1965643858L, 1678101066L, -3832695763L, 3603392967L, -127936326059L, -1060374126493L, 1809606282842L, 4134230123925L, 50373806023L, 54221130025L, -2317275467079L, -1488860342693L, 1402874170653L, -860974410400L, 3266802447521L, -3180252031480L, 1515262562705L, 3911670671821L, 3132268463458L, -3511503203635L, -803346302374L, 934756410435L, -1012868978471L, -1079318906502L, 210658866098L, -2552946943188L, 2178984799014L, 106076614049L, -1697744870790L, 36423277512818608L, 1122233981959742L, 8840542702382940L, 602161809194886144L, 415167483771L, 2747731955899L, 69166436245L, 373593675699L, 125724671334L, 34861172096523356L, 4129749959073300480L, 9659987399269182L, 188997839202046880L, 18269039441301L, 81847722166210L, 44808694928L, 23447960795077760L, 1592134038337787L, 1325892231857L, 20173929485101L, 70136320427L, 1786318568734673L, 26981185177028L, 386885221258401344L, 37290850227339512L, -1031148544565515L, -4116869316136582L, -2897818378988L, -5876760026871419L, -15843836688233L, -1522154292241L, -1812207583784179L, -265424141333L, -5811924467245673L, -20130300395983928L, -659463388913645056L, -268879401052163L, -29326832605946L, -43454744697275L, -27366714552L, -23767219875301220L, -787697336908274816L, -188363993228609L, -224648957343L, -308609715555738496L, -13662379480494L, -491163981765093L, -317977347388L, -682964619953523328L, -989194051213L };
		long[] output0 = new long[]{ 697021932L, 2500361528L, -1862025773L, -2990645785L, -1990446341L, -1082082189L, -731150209L, 2492310580L, 2937498160L, 3285899524L, -1306344513L, -3036506961L, -1780500253L, 1449048732L, -1730430429L, -1893709285L, -1644510021L, -1044169225L, 1960429156L, 2677975444L, -3363443449L, -1843584421L, 1599582680L, -3128198889L, 2997499596L, -6602382707L, -6729123411L, 6736317728L, 6742056740L, 6381225328L, 6406894496L, -6738552731L, -6734129611L, 6733369336L, -6725081551L, 6740870512L, -6740717587L, 6734345172L, 6741800804L, 6740629104L, -6741262203L, -6723552255L, 6726771004L, -6728303275L, -6729427275L, 6658927588L, -6739289743L, 6738051784L, 6572645328L, -6735648043L, 6746518348L, 6746502412L, 6746516768L, 6746518824L, 6702072352L, 6739804728L, 6480098556L, 6697147480L, 6599828692L, 6746518324L, 6746518848L, 6746516944L, 6746518756L, 6745508468L, 6746293372L, 6336233736L, 6746518068L, 6746507272L, 6732602444L, 6745603972L, 6483739092L, 6746508524L, 6745834848L, 6746518808L, 6746518360L, -6746500963L, -6746514371L, -6740153383L, -6746515715L, -6745354131L, -6734400167L, -6746508671L, -6677031211L, -6746515679L, -6746517935L, -6746518827L, -6746450251L, -6745889391L, -6746094283L, -6077844491L, -6746518079L, -6746518831L, -6746420927L, -6664359815L, -6746518795L, -6745167955L, -6746481275L, -6688482251L, -6746518827L, -6727863651L };
		for (int ndx = 0; ndx < 100; ndx++)
			Util.Check("Fixed64.AtanFastest", Fixed64.AtanFastest(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed32.Atan()
	public static void Fixed32_Atan()
	{
		int[] input0 = new int[]{ 36505, 11289, -2883, -51673, -43510, -46531, -42037, 41717, -48001, 16260, 19446, 41992, 4625, 35050, -2257, -16803, 661, -43589, 21383, 8842, 10700, -23404, -42837, -41076, 20961, -36791806, -51356656, -35353886, -64111150, -15665737, -60861205, -5853081, -12436478, -10763283, 15263689, 25712827, -46544742, -53404859, 1427310, 12278906, 29778659, 27899022, -27420136, 41868110, -7773470, 55874132, -15764980, 32322471, 27200334, -242611, 344308198, 2960332, 12839447, 1787655, 48089966, 5531006, 3604620, 1107883, 4959450, 652939075, 93675, 654611905, 165667702, 97990248, 19779257, 426524, 3685959, 204780, 283598, 135377166, 592623, 3588435, 38323112, 128593, 227895961, -300539541, -88222, -2029198, -91222203, -80973229, -226367660, -2189401, -10460788, -9490838, -8202279, -33600843, -454827330, -122464, -84422526, -307713, -1023450, -259131626, -34834093, -15332398, -14566386, -124765115, -428945745, -12071307, -616829, -724906 };
		int[] output0 = new int[]{ 33306, 11179, -2881, -43756, -38410, -40462, -37377, 37149, -41429, 15938, 18903, 37345, 4617, 32185, -2256, -16448, 660, -38464, 20669, 8788, 10606, -22478, -37940, -36691, 20287, -102826, -102859, -102821, -102876, -102668, -102872, -102209, -102597, -102543, 102662, 102776, -102850, -102862, 99936, 102594, 102799, 102790, -102786, 102841, -102390, 102867, -102670, 102811, 102786, -85652, 102931, 101493, 102609, 100542, 102854, 102167, 101752, 99071, 102078, 102937, 62936, 102937, 102918, 102900, 102726, 92952, 101778, 82645, 88060, 102912, 95725, 101747, 102831, 72054, 102925, -102928, -61071, -100827, -102895, -102889, -102924, -100981, -102532, -102490, -102419, -102815, -102933, -70740, -102892, -89190, -98752, -102926, -102819, -102662, -102648, -102908, -102932, -102587, -96006, -97034 };
		for (int ndx = 0; ndx < 100; ndx++)
			Util.Check("Fixed32.Atan", Fixed32.Atan(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed32.AtanFast()
	public static void Fixed32_AtanFast()
	{
		int[] input0 = new int[]{ 1445, -31153, 12535, 55171, -29984, -3892, 30948, -3355, 54, 40784, -9640, -57775, 5959, 27813, -51227, 22968, -9665, -26910, -32032, 58378, -28634, -19552, -15797, 64433, 443, -16593272, 34836381, -53162510, 1650700, -57398668, 60730897, -900778, -49451903, -229886, -36357975, 10127128, 34857503, 13346765, -33884219, -61946576, 53331115, -8247073, 8390166, 55938455, 30530241, -36175186, -25160053, 56952557, -6162260, 50021339, 1993763, 24573616, 1010429, 1047864, 773010318, 310188, 344470061, 23024371, 3768349, 398410904, 61040974, 33184014, 741212700, 4611089, 245218633, 562180895, 579796088, 103627, 7582583, 11432094, 445268759, 195417977, 109824, 600227, 95228, -237344332, -135661743, -5300597, -806481, -986066, -123575, -208827655, -33088618, -29896192, -64468794, -2006365, -508979, -220919557, -11455467, -120090, -55342738, -315334, -391889, -1839768, -1503733, -859055, -6598950, -221890, -141004, -153591422 };
		int[] output0 = new int[]{ 1444, -29081, 12385, 45858, -28121, -3888, 28913, -3353, 54, 36481, -9572, -47353, 5942, 26303, -43481, 22091, -9596, -25535, -29795, 47690, -26996, -19002, -15502, 50915, 442, -102684, 102820, -102862, 100343, -102868, 102873, -98183, -102856, -84742, -102824, 102519, 102820, 102622, -102816, -102873, 102863, -102422, 102432, 102867, 102803, -102824, -102772, 102868, -102246, 102858, 100790, 102769, 98699, 98850, 102938, 89298, 102931, 102757, 101804, 102933, 102873, 102814, 102938, 102012, 102926, 102936, 102936, 65987, 102377, 102568, 102934, 102922, 67684, 95816, 63441, -102924, -102911, -102132, -97629, -98593, -70986, -102922, -102813, -102799, -102876, -100803, -94550, -102923, -102568, -70203, -102865, -89513, -92083, -100609, -100088, -97953, -102292, -84121, -74429, -102915 };
		for (int ndx = 0; ndx < 100; ndx++)
			Util.Check("Fixed32.AtanFast", Fixed32.AtanFast(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed32.AtanFastest()
	public static void Fixed32_AtanFastest()
	{
		int[] input0 = new int[]{ -27851, -31348, -7218, 55192, 61910, 3605, 7543, -58501, -33143, -49587, -16596, -9155, -20265, -47427, 43578, 48922, -65497, -22171, 29908, -624, 29109, -52503, 1980, -9544, 44233, 32426993, 18367876, 27466560, 53131276, 35826850, -17146078, 21120835, -16549289, -5366842, 64470785, 39915756, -14897211, 28879080, 20790866, -41596424, 38669835, -44884091, 11787473, -11740054, 24776477, -30897313, 41485673, -59488792, 1464655, -6604343, 856586, 266163, 3102310, 18902028, 139056, 406551, 91043520, 77851, 147516, 581402, 359938276, 245649066, 276391, 6505314, 97230447, 65791600, 113295, 356324694, 271003, 85948, 7387890, 991693, 44618846, 13050087, 58541506, -15690065, -9198622, -180982, -84595810, -17069114, -549075205, -20885369, -449294, -5459935, -9106600, -580384, -846433, -139947213, -2657147, -159960942, -115971, -2343723, -31614896, -4407491, -1150514, -642161332, -71691, -202259, -38842213, -857174201 };
		int[] output0 = new int[]{ -26336, -29244, -7189, 45859, 49592, 3602, 7509, -47743, -30692, -42453, -16249, -9095, -19648, -41062, 38468, 42029, -51453, -21374, 28060, -625, 27394, -44261, 1979, -9476, 38920, 102811, 102710, 102787, 102863, 102824, -102692, 102740, -102683, -102142, 102877, 102836, -102654, 102795, 102737, -102839, 102832, -102847, 102579, -102577, 102770, -102803, 102840, -102870, 100013, -102292, 97937, 87125, 101559, 102716, 74067, 92469, 102896, 57096, 75537, 95585, 102932, 102926, 87686, 102283, 102899, 102878, 68555, 102931, 87395, 60260, 102362, 98620, 102847, 102614, 102870, -102669, -102475, -80185, -102892, -102691, -102935, -102737, -93448, -102156, -102471, -95571, -97876, -102912, -101326, -102916, -69217, -101109, -102807, -101967, -99211, -102936, -54413, -82410, -102832, -102937 };
		for (int ndx = 0; ndx < 100; ndx++)
			Util.Check("Fixed32.AtanFastest", Fixed32.AtanFastest(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed64.Atan2()
	public static void Fixed64_Atan2()
	{
		long[] input0 = new long[]{ -318950L, -1010617433456L, 539073000668L, 95951477L, -1982856843683L, -3141427266661L, 76341500L, 199776969667L, -384159911146L, -177802144L, 5497456448L, 2525357857L, -1410357L, -168492571L, 1903012L, 1876260L, -3016934196L, -7345813520L, 2094041754162L, 241297151L, -46809721L, -1072626L, 150017110L, 5192023L, -2265181939061L, -49861L, 2643426220L, 602366L, -767968L, -25800534404L, 427001272L, 14902581L, -45042637L, -30564616066L, -44501209L, -485719586L, 67225954742L, 14938103743501L, -107055553L, -5314037943L, 1145942515570L, 7785750L, -1419254315L, -122124783184L, 142507516L, 31076101533L, -6888596L, -17841950826L, 21153543L, 235224292L, -6659440977L, -200945418L, 214267198L, 705844872L, -184149097L, -3981434472L, 45732877069L, 38940368L, -109710115L, -149113593264L, 80577317L, 18420244747L, -2008986671984L, -1165012111928L, 10200922453453L, 3258428067659L, -157500906L, -42494009894L, -295463205747749L, -821298900457L, 186303620463258400L, 29616584240L, -53644390230L, -282778347692071L, 2071067310840498432L, 21522266117774996L, -173528718127359296L, -54087278604220352L, 67247348893411192L, 609416966987L, -144823509936679104L, -7217890182001L, 12657116380194L, 57165525245085L, -35565010658L, -231191589347L, 68217793996253488L, 5689007419007L, -1633558486730L, -958575188291L, 61836456368L, 1330738309036868864L, -2078874774495632L, -558609314547711L, 48864020802822L, 33489398707L, -1048456964251L, -4417186186716378112L, 16141129324L, 2129391464297774592L };
		long[] input1 = new long[]{ -1550115883L, -4344189L, 310438235503L, 435496285593L, -12141201415L, -19854009223L, 795947202159L, 3271905508L, -9518599166176L, -5160610583656L, 32321100L, 3608962495L, -18028893L, -32899871L, 40770720L, 4428855L, -518537220L, -707558229L, 48812604L, 35026241L, -21393654121L, -16721855077350L, 4079811285L, 34240099325L, -17048950265L, -3497069708599L, 1058267047L, 185587501L, -69949329924L, -35091542L, 21728087616911L, 426027719L, -98414518L, -18222217419L, -2912748124606L, -177616544255L, 18074772L, 7930435L, -48690L, -10329941500L, 6733742L, 113373454L, -736870238L, -54329419489L, 4941471L, 1984892567090L, -93045915289L, -113654088595L, 70081L, 6500081L, -5055919739L, -12740098837L, 10392L, 341065910009L, -1579482L, -13294522361L, 12449784603L, 62372485L, -17134827838L, -389755619L, 937446L, 869682L, -473249L, -769203073L, 14522063236L, 10673632L, -3835823L, -57524047L, -2325175942417900L, -7125654105045L, 1751966342596L, 397304264111279360L, -164996616436033L, -769251221051833L, 1073567897071800L, 170001911232434L, -808400609600689792L, -345378194779004L, 371916801681213888L, 1117154497816959232L, -4420457340517226L, -127229590081876L, 12907284064370770L, 610135740288012544L, -322704051850943616L, -38799556617041224L, 96830780290330L, 284074681392071L, -741193555008221L, -3182828365139013632L, 156258458482L, 1323844828614L, -57044858727L, -645636933902236928L, 65700151414056L, 442869601258469L, -24855174326L, -265611408719305312L, 88165210650932L, 181169624588195296L };
		long[] output0 = new long[]{ -13492153985L, -6746537308L, 4502437008L, 946288L, -6772816968L, -6773662936L, 411936L, 6676183068L, -13319791693L, -13492889737L, 6721267820L, 2622316412L, -13157735793L, -7574733732L, 200326272L, 1721087644L, -7477575780L, -7158943316L, 6746418744L, 6127393816L, -13483640257L, -13493037437L, 157857404L, 651264L, -6778844416L, -13493037649L, 5111000800L, 13940228L, -13492990557L, -6752360468L, 84400L, 150178044L, -11649532149L, -9055539996L, -13492972093L, -13481292497L, 6745364088L, 6746516580L, -6748472204L, -11452389929L, 6746493624L, 294488004L, -8803317280L, -8544297852L, 6597649820L, 67237860L, -13492719737L, -12824251893L, 6732289824L, 6627863884L, -9535541872L, -13425300213L, 6746310552L, 8888528L, -6783356676L, -12243292285L, 5604969844L, 2397063868L, -13465538457L, -6757745076L, 6696552952L, 6746316080L, -6746519856L, -6749354608L, 6740404536L, 6746504792L, -6851099032L, -6752332932L, -12950179905L, -13000177025L, 6746478468L, 312L, -13491641313L, -11980053481L, 6744292500L, 6712594108L, -12584874881L, -6773944296L, 768284576L, 2336L, -6877573724L, -13249639865L, 4211716L, 402404L, -13493037241L, -13493012121L, 6740422432L, 86001456L, -13483571801L, -13493036417L, 1618436368L, 6746514588L, -6746636700L, -13489321681L, 2746565092L, 324772L, -6848318132L, -7004470464L, 786308L, 6381978928L };
		for (int ndx = 0; ndx < 100; ndx++)
			Util.Check("Fixed64.Atan2", Fixed64.Atan2(input0[ndx], input1[ndx]), output0[ndx], input0[ndx], input1[ndx]);
	}

	// Fixed64.Atan2Fast()
	public static void Fixed64_Atan2Fast()
	{
		long[] input0 = new long[]{ -13670826410L, -137250477197L, 1157905405L, 84378930L, -17609L, -141761236L, 1493461771296L, 205469459L, -952025959L, -1688479L, 31477460L, 20689754446L, -11568120L, -251721L, 1267956L, 69510L, -187888091323L, -355253895L, 470932L, 120313508L, -188864607L, -252340830L, 12007451L, 3216131024L, -193314L, -5678L, 28343474257L, 1129116033L, -49866L, -10380L, 28501977L, 13022L, -16746L, -8795L, -34920191606465L, -5378545419L, 214396350L, 78346173595L, -412324223653L, -4259836603145L, 220591099347L, 32362434823L, -58014090537L, -18718578L, 21522326L, 806727185759L, -29250023L, -2763352539450L, 27003295031332L, 1438858534070L, -972931764L, -6907981629818L, 3590425780L, 16184213L, -376777637363L, -5615744L, 1996214758L, 16602530873311L, -18261874672955L, -1239310907207L, 102985955429L, 8986415820L, -35944122804L, -2248774018L, 4254800088L, 74220118L, -807252351055L, -29391296700L, -458621906239944576L, -50335897421812456L, 9563116906383702L, 618928478561L, -15065682057L, -2482224424851431L, 40164838665821360L, 1112159226137239424L, -23572361456652L, -6712003979L, 28092872528L, 20351266667765L, -181569120546473024L, -11351807725027782L, 33481593476L, 1564546512214254080L, -158388390596L, -50794511268869L, 402382917808L, 116870168828L, -673727152965610496L, -2484501366089400320L, 60197666462L, 52570068751381504L, -36906680130429L, -514729954281522560L, 385774192719089L, 43951830595L, -48610754524102264L, -17927475901572L, 8326924111172081L, 1021626008655173376L };
		long[] input1 = new long[]{ -125292212L, -2860740784427L, 7500753624046L, 206468971L, -2988577549675L, -1671831647L, 2406496645021L, 23294269372453L, -16279084384837L, -472335883L, 31767859926L, 4416689049L, -7836396638404L, -13444161234897L, 112172501426L, 863207248L, -376626814347L, -25070858783L, 121744552427L, 32845088813919L, -854968929L, -95824509L, 6155043217L, 19403964224767L, -485589510L, -10357241L, 697227327758L, 1150160931L, -2783434879L, -31091667934L, 4767949445146L, 1838341441L, -234988910202L, -1145137202L, -1258856206211L, -213354L, 25744L, 32335L, -117338830022L, -44451842917L, 2670950L, 40177776891L, -1137704778L, -7396887L, 194710796924L, 310721840L, -1130457665750L, -731178042867L, 10316734L, 1393975388L, -369314L, -2666458007167L, 1816256961865L, 963930807L, -2491864267L, -2331725984132L, 15360L, 2224119L, -3881466532L, -1043431028593L, 514594L, 263090L, -3752739245869L, -280451L, 4009013243L, 874416158102L, -4291375177451L, -593098208L, -323162021298150L, -8401353850250L, 7307823880L, 970802245580179L, -702162135691135872L, -2794197213392433152L, 814882326161825920L, 3364439039470L, -115459998996486976L, -10814471480357998L, 455222115558988L, 9872181463L, -347408581918L, -858644184725L, 26373740412L, 212517969143740L, -34228998654L, -11056518822L, 7714822509L, 355367532177L, -9967015112009962L, -169336779885450048L, 4228147445409238L, 851285598639177216L, -3591352388644008L, -838920198836475904L, 77338405971480640L, 134979895229L, -27635525981L, -3924902926268443L, 98264006616L, 5647338314L };
		long[] output0 = new long[]{ -6785880452L, -13287134833L, 663016L, 1666281904L, -13493037685L, -13129721365L, 2385539416L, 37880L, -13492786529L, -13477684261L, 4255752L, 5843228788L, -13493031369L, -13493037629L, 48544L, 345848L, -11505550265L, -13432181849L, 16612L, 15732L, -12559273257L, -8305263952L, 8378836L, 711872L, -13491327861L, -13490683561L, 174500696L, 3333618308L, -13492960765L, -13493036273L, 25672L, 30420L, -13493037401L, -13493004725L, -6901281636L, -6746689220L, 6746003132L, 6746517084L, -7937297500L, -6791335296L, 6746466852L, 2912283808L, -6830735328L, -8362837776L, 474744L, 6744864580L, -13492926577L, -7857497392L, 6746517216L, 6742357832L, -6748149188L, -8328673340L, 8490340L, 72105476L, -6774924044L, -13493027365L, 6746485804L, 6746518280L, -6747431728L, -9752119652L, 6746497396L, 6746393112L, -13451901421L, -6747054492L, 3500982848L, 364548L, -12694451501L, -6833176508L, -6749545220L, -6747235712L, 6746515572L, 2738232L, -13493037617L, -13489222301L, 211525372L, 6746505864L, -13492160857L, -13493035041L, 265048L, 6744435428L, -6746527068L, -6746843716L, 3880932236L, 6745935448L, -7660630624L, -6747453748L, 6664181996L, 1364639188L, -6810052564L, -7038801252L, 61148L, 264894320L, -13448902301L, -11129365529L, 21423848L, 1351999808L, -6746521288L, -13473419953L, 6746468172L, 6746518832L };
		for (int ndx = 0; ndx < 100; ndx++)
			Util.Check("Fixed64.Atan2Fast", Fixed64.Atan2Fast(input0[ndx], input1[ndx]), output0[ndx], input0[ndx], input1[ndx]);
	}

	// Fixed64.Atan2Fastest()
	public static void Fixed64_Atan2Fastest()
	{
		long[] input0 = new long[]{ -3632262L, -125352L, 273048447932L, 89705921L, -6354083512L, -153427557L, 9543L, 257763L, -276739026L, -517418981263L, 4557675L, 263814L, -22760892L, -26027L, 623927994L, 182248L, -79144898207L, -7780L, 5510L, 17920244227L, -9719309L, -97233319L, 433318L, 8374005959L, -8717730099L, -39289L, 1166209300768L, 3597005042045L, -153282L, -24580153605L, 514362L, 124892L, -454276698L, -333082549L, -1730261184L, -20357956282L, 1530169202415L, 107847875L, -98603646L, -3627319219L, 541429435471L, 26796639905L, -1879463673254L, -3487806009L, 97932057L, 192423668L, -70151741020L, -1624498254L, 145135980233L, 30385597182L, -2394510548L, -66595006L, 17182805969L, 43277604L, -8974681537441L, -5581984545998L, 24613783L, 147963847L, -2691046436372L, -263912202L, 6441027L, 22488438693769L, -1868375730048L, -7843437858839L, 41043757L, 895668733L, -2537210491556L, -118566401698L, -152212368416L, -127959434097521168L, 13802054252281368L, 554844908333L, -2371607109069L, -1598134946705L, 57615073597413L, 79296014106185936L, -158465664851478880L, -804322591631404L, 707273405830L, 1605754490821L, -1409622954553L, -120186247408988224L, 487475215958085L, 4135892437384L, -150830277336469L, -2762161441018562L, 5065902122928007L, 3885312636760L, -4514146610837852L, -8624920526958536L, 18555773810106L, 879355978439L, -54652393827589504L, -1021567713449190528L, 155508890256658272L, 829163795183363584L, -7916976382494L, -56767389931L, 759516014279L, 43612718933L };
		long[] input1 = new long[]{ -432915993856L, -9380159L, 2224189260L, 76563863959L, -2969843050326L, -61730280602L, 4803584L, 2799184128896L, -239329056191L, -1913881527483L, 14695906451L, 7717038470L, -14708504164L, -41194158678L, 1107238324L, 97898592651L, -1388779555L, -11453571L, 147626338395L, 3447406741L, -130592035160L, -3331001761485L, 16367853606857L, 64561852L, -1221975538276L, -48331902303L, 41162617424L, 9174153L, -6434682L, -1310535619489L, 200275489115L, 70470739L, -130633339112L, -5328030829471L, -252949L, -101667714268L, 125275044340L, 114781L, -269698590234L, -503984L, 6448635908L, 32909L, -8964L, -225622267L, 2513687486310L, 332873572L, -2660268185778L, -274046L, 17138656L, 81108191L, -14241113L, -127324934L, 3663112368L, 127931242L, -2196882763275L, -132374326L, 24216035L, 623114214L, -9539667L, -1211243650783L, 14773553L, 35656395332L, -18318709538L, -684241597656L, 1298659L, 249518251286L, -21661623L, -2187337329594L, -66622683195L, -5227106905L, 7843885684L, 635517671293639L, -28032507885645100L, -113349471968L, 238882437907L, 10317139242350L, -9880094164L, -127472244822L, 3991535080861679L, 143024808404475952L, -3941500961443L, -26200151767L, 3945489470819467L, 582950868235544L, -331818426958L, -20046944284025L, 20789389840613L, 2211170713114719L, -224937654120L, -24656847089L, 2229429390393L, 81386912385498L, -29617820861999L, -67412257475511L, 46819001455429L, 10706199111531L, -47393409965940L, -320446491879325L, 43018163858904L, 11989363063796418L };
		long[] output0 = new long[]{ -13493001653L, -13435609785L, 6711527264L, 5035524L, -13483848913L, -13482358593L, 8537208L, 392L, -13488068373L, -12359095345L, 1332916L, 146880L, -13486386885L, -13493034993L, 2205152096L, 7988L, -6821912704L, -13490120761L, 160L, 5930211764L, -13492718061L, -13492912289L, 108L, 6713407084L, -13462377157L, -13493034217L, 6594890652L, 6746507896L, -13390704153L, -13412467585L, 11024L, 7617040L, -13478102417L, -13492769141L, -6747147160L, -12644550477L, 6395760480L, 6741944708L, -13491467385L, -6747116024L, 6695363884L, 6746513580L, -6746518868L, -7024109812L, 167420L, 2251514184L, -13379782573L, -6747243672L, 6746011320L, 6735048488L, -6772079076L, -11423387593L, 5844683412L, 1400197936L, -7777440252L, -6746620704L, 3408917896L, 1001127904L, -6746534076L, -13492101245L, 1766168152L, 6739708864L, -6788656876L, -7120319036L, 6610650828L, 15421840L, -6746555532L, -13260436101L, -8519094044L, -6746519024L, 6746516412L, 3752056L, -13492674149L, -7050622112L, 6728698572L, 6745959652L, -6746519116L, -6747199600L, 761416L, 48224L, -12018083181L, -6746519784L, 528057440L, 30490280L, -6755974396L, -6777695352L, 6728882348L, 7547108L, -6746732944L, -6746531128L, 6232799432L, 46425980L, -6748847360L, -6746802412L, 6745224832L, 6746463396L, -12782561793L, -13492276413L, 75835460L, 15620L };
		for (int ndx = 0; ndx < 100; ndx++)
			Util.Check("Fixed64.Atan2Fastest", Fixed64.Atan2Fastest(input0[ndx], input1[ndx]), output0[ndx], input0[ndx], input1[ndx]);
	}

	// Fixed32.Atan2()
	public static void Fixed32_Atan2()
	{
		int[] input0 = new int[]{ -67, -1, 1, 17, -948895, -50315167, 9965, 85, -733, -31, 25, 2239, 0, -8766, 14696440, 130065, -16, -17, 155714, 25964003, -182603, -23133, 12778168, 0, -156872, -6519, 1, 26, -161967, -1481424, 14341246, 2093, -198104, -21900705, -207, -8972752, 15038355, 88924468, -194111, -167042, 490, 2480762, -71376, -104, 3749, 158300529, -443, -7251, 12281368, 360966860, -5943997, -11224044, 3176456, 2773, -290246398, -18745496, 484112277, 41429369, -42828618, -349209, 30940, 426096, -63379, -462295, 291008, 76, -81, -17504, -9075874, -662808808, 897168881, 6607218, -122661, -1532692, 302655180, 23429719, -7977769, -149864704, 838544884, 384103, -3527475, -214853804, 73763, 98557827, -28279323, -396807002, 378135012, 5797085, -484686, -7746048, 106874, 100817, -404284, -70596054, 672275, 130423218, -202206, -3196383, 46487577, 25117991 };
		int[] input1 = new int[]{ -200729, -1496, 225921594, 35844, -16804895, -2339, 42657404, 178, -1242, -115629955, 24751891, 24829810, -74601, -63776793, 374700, 11163119, -379, -1173, 43099323, 169915, -630890261, -7017698, 2025, 357, -548491, -3153, 49554186, 6560, -1843760, -1761553, 26040, 21095708, -20057968, -279, -743659, -1104507, 44677566, 8, -92073, -82, 120, 81, -23, -2, 3191440, 45000, 0, -5581, 4066, 74118, -13721064, -26869, 0, 6002, -1, -27, 388683, 17808478, 0, -30802001, 0, 10899, -7, -5933308, 2429, 9, -8017316, -581718, -94823576, -1949463, 96330, 18633828, -53597784, -5121102, 14877894, 143538809, -48969384, -11738947, 150136250, 697140303, -746968030, -284418604, 14007802, 903907, -16214637, -6494566, 808017, 24455281, -1932182, -4538347, 15890609, 76787, -406438163, -583200980, 1071054, 1865639, -149412, -152080, 7593680, 163569 };
		int[] output0 = new int[]{ -205866, -205844, 0, 31, -202191, -102946, 15, 29196, -170946, -205887, 0, 5, 205887, -205878, 101273, 763, -203122, -204938, 236, 102515, -205869, -205671, 102933, 0, -187631, -132466, 0, 259, -200145, -160063, 102825, 6, -205240, -102943, -205869, -110969, 21278, 102943, -131969, -102975, 87204, 102941, -102964, -104203, 76, 102925, -102943, -145933, 102922, 102930, -179097, -103099, 102943, 28363, -102943, -102943, 102891, 76338, -102943, -205145, 102943, 101268, -102950, -200792, 102396, 95219, -205887, -203916, -199634, -103135, 102936, 22331, -205738, -186829, 99724, 10603, -195304, -108065, 91333, 36, -205578, -163489, 345, 102342, -137061, -104015, 102803, 15253, -189780, -137675, 440, 60285, -205822, -197993, 36734, 102006, -144647, -106058, 92332, 102517 };
		for (int ndx = 0; ndx < 100; ndx++)
			Util.Check("Fixed32.Atan2", Fixed32.Atan2(input0[ndx], input1[ndx]), output0[ndx], input0[ndx], input1[ndx]);
	}

	// Fixed32.Atan2Fast()
	public static void Fixed32_Atan2Fast()
	{
		int[] input0 = new int[]{ 0, -117, 509, 0, -926882, -485, 0, 2, -72, 0, 687791, 72535, -116732, 0, 0, 54, -2, -34825767, 5, 39697, -1, 0, 15, 43, -742224, 0, 90712, 400536, -1, -5, 153411, 14861, 0, -139180, -4332, -151792, 117961614, 3475954, -186872, -226, 2740, 169, -23801577, -84, 2587470, 110427616, -5338569, -90796945, 128042642, 1587, -116, -917080, 7561535, 1584, -11742879, -19033686, 220713, 9961, -2076, -5621928, 35412, 339, -195, -706, 65144882, 131002, -4893, -13443, -1649912, -10594304, 226615, 11450070, -805839978, -534588764, 18585732, 267730015, -10215760, -3940916, 248569028, 199553001, -31150782, -10201673, 54082708, 747441, -115734, -113876, 71976, 224103570, -155814, -123551, 3113538, 7464690, -99409, -212460153, 187889, 7332309, -417214915, -25187798, 509081588, 967164 };
		int[] input1 = new int[]{ -45766224, -1057226, 67921, 181369, -140557, -605, 49258, 248, -5244, -3619, 2585757, 119225614, -11724, -28272791, 63640164, 363910521, -1162, -421, 83138289, 55889522, -304972925, -157, 313, 446, -5724, -16385049, 11209825, 9500, -83, -486, 36412, 1293, -1596650, -571570597, -5259, -154, 0, 2227, -25891, -937002, 22766, 7225546, -14, 0, 952, 202, 0, -4450860, 321, 1480413, 0, -1035120, 940, 476, -9, -1358, 40499391, 11317, -914, -823676, 98833, 0, -54398802, -43442, 1, 3, -25927, -143, -110733156, -57466581, 12104979, 355188587, -52635011, -14558588, 205101925, 11639315, -243447714, -2726061, 723377525, 14252781, -80238176, -30778220, 290978, 329193, -4572457, -86282725, 19746733, 175871, -359579, -131208486, 1011701, 875167, -222996, -32596971, 7548522, 248571, -186464700, -166118, 689028374, 435492192 };
		int[] output0 = new int[]{ 205886, -205880, 491, 0, -112806, -161602, 0, 528, -204988, 205886, 17037, 39, -109503, 205886, 0, 0, -205775, -102943, 0, 46, -205887, 205886, 3138, 6299, -103448, 205886, 530, 101389, -205098, -205213, 87671, 97256, 205886, -205872, -160730, -103009, 102943, 102902, -111965, -205872, 7849, 1, -102943, -102943, 102919, 102943, -102943, -106153, 102943, 70, -102943, -158374, 102935, 83812, -102943, -102947, 357, 47301, -130123, -112477, 22547, 102943, -205887, -204823, 102943, 102942, -193663, -103640, -204911, -193940, 1226, 2111, -107217, -104727, 5922, 100096, -203139, -142602, 21691, 98271, -181619, -184912, 102591, 75755, -204229, -205801, 238, 102892, -179090, -205826, 82354, 95295, -178405, -112920, 1630, 100723, -130487, -103375, 41701, 145 };
		for (int ndx = 0; ndx < 100; ndx++)
			Util.Check("Fixed32.Atan2Fast", Fixed32.Atan2Fast(input0[ndx], input1[ndx]), output0[ndx], input0[ndx], input1[ndx]);
	}

	// Fixed32.Atan2Fastest()
	public static void Fixed32_Atan2Fastest()
	{
		int[] input0 = new int[]{ -2032, -9182, 0, 17723304, -45480587, -1177335, 7424, 2150, -7, -1257, 54915255, 145270, 0, -2544808, 411116, 314, -85384, -19786853, 0, 1, 0, -1617326, 0, 45616857, -365, -17, 451622, 0, 0, -110860, 175339, 378028, -484, 0, -21389012, -949194, 46393905, 113633, -13312805, -54599, 504731552, 243796051, -279676265, -43012, 1414, 49179168, -383, -142729, 933, 536096093, -2851, -47193194, 5556368, 1916499, -1021, -28950, 4502227, 191474, -4888165, -132590, 818029, 3029173, -2414039, -15397, 240328219, 476605, -8487, -369, -898045598, -317965927, 88760129, 665482, -69331203, -134521, 206115488, 593658, -35054079, -27825653, 23813873, 75660, -304958468, -76403, 1448177, 482632, -94123, -74187, 76152, 41423525, -575633, -150226, 2795671, 422219597, -602442, -212705438, 151035264, 7664219, -38471919, -214235, 22734736, 731667 };
		int[] input1 = new int[]{ -160, -876, 675057, 2155, -1271, -1723542, 1166, 263, -86274956, -5165188, 22900554, 716329, -878, -6267, 102015103, 238, -105220, -90817238, 140, 22890246, -97714775, -3633193, 127523, 231, -288947, -6282518, 138, 252277, -71651, -367217, 14085146, 3148, -5531, -155, -1879, -26, 10, 59364620, 0, -30614, 1228113, 20228605, -246122, 0, 6376757, 88735, -17159, -8726, 87, 684, -33, -13846123, 4387, 35577, -5846736, -319, 8856131, 76, -520099, -24, 2018443, 47, -24, -19616, 996, 36891, -4514, 0, -264342, -22059204, 19663576, 6444267, -60421341, -120245, 490115, 5806645, -165442268, -38226426, 107071388, 990599, -80551030, -96596271, 3700985, 180508591, -1057247469, -143232, 16732676, 5260257, -27798942, -313106493, 125086995, 391770544, -7453742, -225724869, 72393, 349985469, -956341, -1762473, 16568867, 10723267 };
		int[] output0 = new int[]{ -108092, -109178, 0, 102936, -102944, -166591, 92736, 94964, -205887, -205872, 77043, 13104, 205886, -103104, 264, 60441, -161207, -191838, 0, 0, 205886, -178432, 0, 102943, -205805, -205887, 102923, 0, 205886, -186685, 816, 102398, -200169, 205886, -102948, -102944, 102943, 125, -102943, -136454, 102784, 97518, -103000, -102943, 14, 102825, -204424, -106946, 96850, 102943, -103701, -121634, 102892, 101727, -205876, -103665, 30839, 102917, -109890, -102954, 25223, 102942, -102943, -162277, 102943, 97881, -134994, -102943, -102962, -107483, 88666, 6744, -149916, -150738, 102788, 6674, -192211, -164638, 14342, 4994, -119865, -205836, 24444, 175, -205882, -174550, 298, 94668, -204530, -205856, 1464, 53930, -200601, -156364, 102912, 1434, -104572, -197958, 61675, 4463 };
		for (int ndx = 0; ndx < 100; ndx++)
			Util.Check("Fixed32.Atan2Fastest", Fixed32.Atan2Fastest(input0[ndx], input1[ndx]), output0[ndx], input0[ndx], input1[ndx]);
	}

	public static void TestAll()
	{
		Fixed64_Add();
		Fixed32_Add();
		Fixed64_Sub();
		Fixed32_Sub();
		Fixed64_Mul();
		Fixed32_Mul();
		Fixed64_DivPrecise();
		Fixed32_DivPrecise();
		Fixed64_Mod();
		Fixed32_Mod();
		Fixed64_Min();
		Fixed32_Min();
		Fixed64_Max();
		Fixed32_Max();
		Fixed64_Ceil();
		Fixed32_Ceil();
		Fixed64_Floor();
		Fixed32_Floor();
		Fixed64_Round();
		Fixed32_Round();
		Fixed64_Fract();
		Fixed32_Fract();
		Fixed64_CeilToInt();
		Fixed32_CeilToInt();
		Fixed64_FloorToInt();
		Fixed32_FloorToInt();
		Fixed64_RoundToInt();
		Fixed32_RoundToInt();
		Fixed64_Abs();
		Fixed32_Abs();
		Fixed64_Nabs();
		Fixed32_Nabs();
		Fixed64_Sign();
		Fixed32_Sign();
		Fixed64_Rcp();
		Fixed64_RcpFast();
		Fixed64_RcpFastest();
		Fixed32_Rcp();
		Fixed32_RcpFast();
		Fixed32_RcpFastest();
		Fixed64_Div();
		Fixed64_DivFast();
		Fixed64_DivFastest();
		Fixed32_Div();
		Fixed32_DivFast();
		Fixed32_DivFastest();
		Fixed64_SqrtPrecise();
		Fixed64_Sqrt();
		Fixed64_SqrtFast();
		Fixed64_SqrtFastest();
		Fixed32_SqrtPrecise();
		Fixed32_Sqrt();
		Fixed32_SqrtFast();
		Fixed32_SqrtFastest();
		Fixed64_RSqrt();
		Fixed64_RSqrtFast();
		Fixed64_RSqrtFastest();
		Fixed32_RSqrt();
		Fixed32_RSqrtFast();
		Fixed32_RSqrtFastest();
		Fixed64_Exp();
		Fixed64_ExpFast();
		Fixed64_ExpFastest();
		Fixed32_Exp();
		Fixed32_ExpFast();
		Fixed32_ExpFastest();
		Fixed64_Exp2();
		Fixed64_Exp2Fast();
		Fixed64_Exp2Fastest();
		Fixed32_Exp2();
		Fixed32_Exp2Fast();
		Fixed32_Exp2Fastest();
		Fixed64_Log();
		Fixed64_LogFast();
		Fixed64_LogFastest();
		Fixed32_Log();
		Fixed32_LogFast();
		Fixed32_LogFastest();
		Fixed64_Log2();
		Fixed64_Log2Fast();
		Fixed64_Log2Fastest();
		Fixed32_Log2();
		Fixed32_Log2Fast();
		Fixed32_Log2Fastest();
		Fixed64_Pow();
		Fixed64_PowFast();
		Fixed64_PowFastest();
		Fixed32_Pow();
		Fixed32_PowFast();
		Fixed32_PowFastest();
		Fixed64_Sin();
		Fixed64_SinFast();
		Fixed64_SinFastest();
		Fixed32_Sin();
		Fixed32_SinFast();
		Fixed32_SinFastest();
		Fixed64_Cos();
		Fixed64_CosFast();
		Fixed64_CosFastest();
		Fixed32_Cos();
		Fixed32_CosFast();
		Fixed32_CosFastest();
		Fixed64_Tan();
		Fixed64_TanFast();
		Fixed64_TanFastest();
		Fixed32_Tan();
		Fixed32_TanFast();
		Fixed32_TanFastest();
		Fixed64_Asin();
		Fixed64_AsinFast();
		Fixed64_AsinFastest();
		Fixed32_Asin();
		Fixed32_AsinFast();
		Fixed32_AsinFastest();
		Fixed64_Acos();
		Fixed64_AcosFast();
		Fixed64_AcosFastest();
		Fixed32_Acos();
		Fixed32_AcosFast();
		Fixed32_AcosFastest();
		Fixed64_Atan();
		Fixed64_AtanFast();
		Fixed64_AtanFastest();
		Fixed32_Atan();
		Fixed32_AtanFast();
		Fixed32_AtanFastest();
		Fixed64_Atan2();
		Fixed64_Atan2Fast();
		Fixed64_Atan2Fastest();
		Fixed32_Atan2();
		Fixed32_Atan2Fast();
		Fixed32_Atan2Fastest();
	}
}
